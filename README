Copyright (c) 2005-2011 Sven Klose <pixel@copei.de>

    tré is a dialect of the Lisp family of programming languages.
    The compiler can translate itself to C or JavaScript. A PHP
    backend is also included for less complicated pieces of
    software. When compiled to JavaScript, tré can compile to
    JavaScript and PHP only.


BUILD & INSTALL

    Make sure you have libdl, libffi and their headers installed.
    Then, simply run the make.sh shell script with argument
    'boot' and enjoy yourself for a couple of minutes.  The
    interpreter is rather slow, but things get boosted after the
    initial round of which there are two.

        # ./make.sh boot

    The binary "tre" is installed to directory /usr/local/bin/.
    Every user needs to compile his own version of tré.


COMMAND-LINE

    Invoke tré with the -h argument and it tells you all it knows
    about its command-line options and arguments.


ABOUT THE INTERPRETER

    Opposite to the compiler the interpreter has no lexical scopging
    but surprisingly it copes with the compiler source anyway.
    Hopefully, the interpreter is replaced by the compiler soon.


THE DIALECT

    The dialect's most notable features are:

      - lexical scoping (expect the interpreter),
      - a variable, function and package per symbol,
      - anonymous macros (QUASIQUOTE doesn't need BACKQUOTE),
      - a terse dot-notation for stepping along CONSes,
      - no LAMBDA symbol required in literal functions

DOCUMENTATION

    The most detailed documentation if the environment is the code
    itself.
