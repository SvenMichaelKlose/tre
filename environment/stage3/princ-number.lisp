(fn integer-chars (x)
  (with (f [!= (integer (mod _ 10))
             (. (number-digit !)
                (& (<= 10 _)
                   (f (/ (- _ !) 10))))])
    (reverse (f (integer (abs x))))))

(fn decimals-chars (x)
  (!= (mod (* x 10) 10)
    (& (< 0 !)
       (. (number-digit (integer !))
          (decimals-chars !)))))

(fn number-digits (x)
  (+ (& (< x 0)
        '(#\-))
     (integer-chars x)
     (!= (mod x 1)
       (unless (== 0 !)
         (. #\. (decimals-chars !))))))

(fn princ-number (x str)
  (stream-princ (number-digits x) str))
