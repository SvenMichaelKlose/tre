(defbuiltin not (&rest x) (CL:EVERY #'CL:NOT x))
(defbuiltin eq (a b)      (CL:EQ a b))

(defbuiltin eql (a b)
  (| (CL:EQ a b)
     (?
       (& (CL:CHARACTERP a)
          (CL:CHARACTERP b))   (CL:= (CL:CHAR-CODE a)
                                     (CL:CHAR-CODE b))
       (& (not (CL:CHARACTERP a)
               (CL:CHARACTERP b))
          (number? a)
          (number? b))         (CL:= a b)
       (& (CL:CONSP a)
          (CL:CONSP b))        (& (eql a. b.)
                                  (eql .a .b))
       (& (CL:STRINGP a)
          (CL:STRINGP b))      (CL:STRING= a b))))
