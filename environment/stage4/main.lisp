;;;; TRE environment
;;;; Copyright (c) 2008 Sven Klose <pixel@copei.de>
;;;;
;;;; Fourth stage

(env-load "stage4/assoc-hash.lisp")
(env-load "stage4/assoc-replace.lisp")
(env-load "stage4/assoc-splice.lisp")
(env-load "stage4/clr.lisp")
(env-load "stage4/collect-symbols.lisp")
(env-load "stage4/compose.lisp")
(env-load "stage4/concat-stringtree.lisp")
(env-load "stage4/count-if.lisp")
(env-load "stage4/declare.lisp")
(env-load "stage4/def-head-predicate.lisp")
(env-load "stage4/define-getset-alias.lisp")
(env-load "stage4/doubles.lisp")
(env-load "stage4/enqueue-many.lisp")
(env-load "stage4/escape-string.lisp")
(env-load "stage4/expander.lisp")
(env-load "stage4/find-tree.lisp")
(env-load "stage4/force-downcase-string.lisp")
(env-load "stage4/force-list.lisp")
(env-load "stage4/force-tree.lisp")
(env-load "stage4/global-variable.lisp")
(env-load "stage4/head-if.lisp")
(env-load "stage4/let-when.lisp")
(env-load "stage4/list-aliases.lisp")
(env-load "stage4/list-unless.lisp")
(env-load "stage4/mapatree.lisp")
(env-load "stage4/maptree.lisp")
(env-load "stage4/mapped-macro.lisp")
(env-load "stage4/pad.lisp")
(env-load "stage4/pair.lisp")
(env-load "stage4/print-hex.lisp")
(env-load "stage4/print-octal.lisp")
(env-load "stage4/repeat.lisp")
(env-load "stage4/repeat-while-changes.lisp")
(env-load "stage4/replace.lisp")
(env-load "stage4/return-from-when.lisp")
(env-load "stage4/split.lisp")
(env-load "stage4/t.lisp")
(env-load "stage4/tail-after-if.lisp")
(env-load "stage4/tree-list.lisp")
(env-load "stage4/trim.lisp")
(env-load "stage4/with-cons.lisp")
(env-load "stage4/null-stream.lisp")
(env-load "stage4/with-string-stream.lisp")
(env-load "stage4/define-with.lisp")
(env-load "stage4/define-slot-setter.lisp")
(env-load "stage4/number-sym.lisp")
