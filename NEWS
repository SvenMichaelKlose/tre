Changes relative to tre-0.14:
  * MAP has been removed.  It has been the same as MAPCAR.
  * @: The functional version deals with arrays and strings.  The
       types will be checked at run-time and cannot get mixed.
       The result type is the argument type.  (You'll get a
       string for strings.)  This version of @ is also available
       as new function DYNAMIC-MAP.

Changes of tre-0.14 relative to tre-0.13:
  * Don't miss functions that need to get imported from the host
    environment anymore.
  * Only convert keywords that are keys in literal JSON objects
    to camel notation, not literal strings.

Changes of tre-0.13 relative to tre-0.12:
  * REMOVE-PROPERTY: New, non-destructive function.
  * PROPERTY-LIST has been renamed to PROPERTIES-LIST.
  * DEFCLASS fails on re-definitions or if a base class has
    not been defined.
  * FILTER functions aren't inlined anymore.  Caused nasty bugs.
  * JS: LENGTH: Works with objects.
  * JS/PHP: Curly brackets now produce real literal objects, not
            calls of MAKE-OBJECT. Keyword keys are now actually
            converted to camel notation as stated in the README.

Changes of tre-0.12 relative to tre-0.11:
  * LML2XML: Don't generate string for attribute values of NIL.
  * PHP: OBJECT-PHPARRAY, PHPARRAY-OBJECT: New functions.
  * PHP: PROPERTY-NAMES now supports native objects.
  * PHP: HASHKEYS fixed for native arrays.

Changes of tre-0.11 relative to tre-0.10:
  * Moved platform-specific functions into separate repositories
    'tre-php', 'tre-js' and 'tre-shared'.
  * Path/URI functions and READ-BINARY added to the environment.

Changes of tre-0.10 relative to tre-0.9:
  * PHP: DEFINED? and UNDEFINED? had reversed effects.
  * WITH-STRUCT: Most embarassing bug removed.  Did not
    introduce a GENSYM to evaluate the STRUCT's origin only
    once.

Changes of tre-0.9 relative to tre-0.8:
  * SLOT-VALUE can get and set by names passed as symbol or string,
    also by variable.
  * JSON obects must not be accessed like arrays. Use SLOT-VALUE instead
    of AREF.
  * PHP: TRANSPILER-CONFIGURATION :NATIVE-CODE holds a string of native code
         without opening or closing angle brackets to insert in the prologue.
  * PHP: GET-CURRENT-TIME has been replaced by MILLISECONDS-SINCE-1970.
  * PHP: JSON objects are treated as objects, not arrays.
  * PHP: NEW returns a stdClass.
  * JS: ATAN2: New math function.
  * CL: ASIN and ACOS added.

Changes of tre-0.8 relative to tre-0.7:
  * WITHOUT-HEAD, WITHOUT-TAIL: New functions.
  * PHP: AREF returns NIL for undefined indexes instead of breaking with an
         error message.

Changes of tre-0.7 relative to tre-0.6:
  * (%NEW): Accidentally converted to (%NEW NIL) â€“ fixed.
  * PHP: Debugged property and associative array functions.
  * JS: Methods are also available as functions whose identifier is
        ($ class-name "-" method-name).

Changes of tre-0.6 relative to tre-0.5:
  * PHP: PROPERTY-NAMES fixed for associative arrays.
  * PHP: ASSOC-ARRAY? test if first key is a string.
  * Curly brackets {} denote MAKE-OBJECT if the first element is a string or
    keyword.
  * MAKE-OBJECT, NEW, {}: Also takes keywords whose symbol names are converted
    to downcase as property names.
  * JS/PHP: COPY-PROPERTIES, MERGE-PROPERTIES, UPDATE-PROPERTIES: New
    functions.

Changes of tre-0.5 relative to tre-0.4:
  * LOG-MESSAGE returns its argument if logging has been switched off.
  * LML: Attribute names must be keywords.
  * PHP: NEW create a native object when used witout arguments.
  * PHP: PROPERTY-NAME, PROPERTY-ALIST, ALIST-PROPERTIES, MAKE-OBJECT: New
         core functions.
  * PHP: ARRAY? returns T for indexed arrays only.
  * JS/PHP: ASSOC-ARRAY?: New predicate.
  * JS/PHP: JSON-ENCODE, JSON-DECODE added.

Changes of tre-0.4 relative to tre-0.3:
  * PHP: LENGTH returns correct value for wrapped arrays.
  * PHP: Issue an error when trying to convert a cons into string.
  * JS/PHP: %%%MAKE-HASH-TABLE is now %%%MAKE-OBJECT.
  * JS: MAKE-OBJECT: New function to use dynamically generated keys.

RELEASES:

Changes of tre-0.3 relative to tre-0.2:
  * JS: PROPERTY-NAME, PROPERTY-ALIST, ALIST-PROPERTIES: New core functions.
  * JS: PROPERTY-REMOVE: New core codegen macro.
  * JS: NEW returns an empty object when used without arguments.

Changes of tre-0.2 relative to tre-0.1:
  * Major cleanup.
  * Additional basic optimisations.
  * Forbids use of macro names as argument names.
  * DEFUN is now FN.
  * DEVAR is now VAR.
  * ALET is now !=.
  * EQL is converted to EQ for literal symbols.
  * In DEFCLASS Macro SUPER denotes the parent class constructor.
  * Macro MACROLET added.

Changes of tre-0.1 relative to tre-0.0:
  * Removed parts that are not working anymore.
  * Compiler cannot translate itself to JS, C or bytecode anymore.
