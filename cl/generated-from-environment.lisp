(IN-PACKAGE :TRE-PARALLEL)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN EVAL (X) (%EVAL X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EVAL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%EVAL (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING (X) (%STRING X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%STRING (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN EQ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%EQ (COMMON-LISP:LIST X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%EQ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN EQL (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%EQL (COMMON-LISP:LIST X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EQL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%EQL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NOT (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%NOT X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NOT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%NOT COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-SYMBOL (X COMMON-LISP:&OPTIONAL (PACKAGE COMMON-LISP:NIL)) (%MAKE-SYMBOL X PACKAGE)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-SYMBOL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'PACKAGE (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%MAKE-SYMBOL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'PACKAGE COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-NAME (X) (%SYMBOL-NAME X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-NAME *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-VALUE (X) (%SYMBOL-VALUE X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-VALUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-VALUE (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-FUNCTION (X) (%SYMBOL-FUNCTION X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-FUNCTION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-FUNCTION (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-PACKAGE (X) (%SYMBOL-PACKAGE X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-PACKAGE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-PACKAGE (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER? (X) (%NUMBER? X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%NUMBER? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER (X) (%INTEGER X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%INTEGER (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CODE-CHAR (X) (%CODE-CHAR (%INTEGER X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CODE-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%CODE-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS '%INTEGER (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER+ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%+ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%+ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER+ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%+ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%+ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER+ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%+ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%+ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER- (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER- (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER- (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN * (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%* X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'* *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%* COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN / (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%/ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'/ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%/ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN < (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%< X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'< *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%< COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN > (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%> X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'> *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%> COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN FILTER (FUN X) (COMMON-LISP:MAPCAR FUN X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FILTER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MAPCAR (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-ARRAY (COMMON-LISP:&OPTIONAL (DIMENSIONS 1)) (%MAKE-ARRAY DIMENSIONS)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-ARRAY *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIMENSIONS (COMMON-LISP:CONS 1 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%MAKE-ARRAY (COMMON-LISP:CONS 'DIMENSIONS COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-HASH-TABLE (COMMON-LISP:&KEY (TEST #'EQL)) (%MAKE-HASH-TABLE :TEST TEST)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-HASH-TABLE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%MAKE-HASH-TABLE (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN LOAD (PATHNAME) (%LOAD PATHNAME)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LOAD *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(%DEFVAR *MACROEXPAND-HOOK* COMMON-LISP:NIL)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MACROEXPAND-1 (X) (? *MACROEXPAND-HOOK* (COMMON-LISP:APPLY *MACROEXPAND-HOOK* (COMMON-LISP:LIST X)) X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MACROEXPAND-1 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '*MACROEXPAND-HOOK* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS '*MACROEXPAND-HOOK* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MACROEXPAND-0 (OLD X) (? (%EQUAL X OLD) OLD (MACROEXPAND X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MACROEXPAND-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OLD (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '%EQUAL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'OLD COMMON-LISP:NIL))) (COMMON-LISP:CONS 'OLD (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MACROEXPAND (X) (MACROEXPAND-0 X (MACROEXPAND-1 X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MACROEXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND-0 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND-1 (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NANOTIME COMMON-LISP:NIL 0) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NANOTIME *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 0 COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN FUNCTION-BYTECODE (X) X COMMON-LISP:NIL) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FUNCTION-BYTECODE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))))
(%DEFVAR *FUNCTIONALS* COMMON-LISP:NIL)
(%DEFMACRO FUNCTIONAL (COMMON-LISP:&REST NAMES) (PRINT-DEFINITION (COMMON-LISP:CONS 'FUNCTIONAL (APPEND NAMES COMMON-LISP:NIL))) (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*FUNCTIONALS* (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS NAMES COMMON-LISP:NIL)) (COMMON-LISP:CONS '*FUNCTIONALS* COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN FUNCTIONAL? (NAME) (MEMBER NAME *FUNCTIONALS* :TEST #'EQ)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FUNCTIONAL? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NAME COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MEMBER (COMMON-LISP:CONS 'NAME (COMMON-LISP:CONS '*FUNCTIONALS* (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQ COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'IDENTITY (COMMON-LISP:CONS '+ (COMMON-LISP:CONS '- (COMMON-LISP:CONS '* (COMMON-LISP:CONS '/ (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS 'NUMBER- (COMMON-LISP:CONS 'NUMBER* (COMMON-LISP:CONS 'NUMBER/ (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 'INTEGER- (COMMON-LISP:CONS 'INTEGER* (COMMON-LISP:CONS 'INTEGER/ (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS 'LOGXOR (COMMON-LISP:CONS 'NUMBER? (COMMON-LISP:CONS '== (COMMON-LISP:CONS '< (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'NUMBER== (COMMON-LISP:CONS 'NUMBER< (COMMON-LISP:CONS 'NUMBER> (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'INTEGER< (COMMON-LISP:CONS 'INTEGER> (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS 'CHARACTER< (COMMON-LISP:CONS 'CHARACTER> (COMMON-LISP:CONS 'BIT-OR (COMMON-LISP:CONS 'BIT-AND (COMMON-LISP:CONS '<< (COMMON-LISP:CONS '>> (COMMON-LISP:CONS 'CODE-CHAR (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'EQL (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS 'COMMON-LISP:MAKE-PACKAGE (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'SYMBOL-VALUE (COMMON-LISP:CONS '%TYPE (COMMON-LISP:CONS '%%ID (COMMON-LISP:CONS '%MAKE-PTR (COMMON-LISP:CONS 'SYMBOL-FUNCTION (COMMON-LISP:CONS 'SYMBOL-PACKAGE (COMMON-LISP:CONS 'FUNCTION-NATIVE (COMMON-LISP:CONS 'SYMBOL? (COMMON-LISP:CONS 'FUNCTION? (COMMON-LISP:CONS 'BUILTIN? (COMMON-LISP:CONS 'MACRO? (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'COMMON-LISP:MAKE-STRING (COMMON-LISP:CONS 'STRING== (COMMON-LISP:CONS 'STRING-CONCAT (COMMON-LISP:CONS 'STRING (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'MAKE-ARRAY (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'SLOT-VALUE (COMMON-LISP:CONS '%SLOT-VALUE (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'IDENTITY (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'COMMON-LISP:COPY-LIST (COMMON-LISP:CONS 'INTEGER? (COMMON-LISP:CONS 'CHARACTER? COMMON-LISP:NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) *FUNCTIONALS*))
(%DEFVAR *DEFINITION-PRINTER* #'COMMON-LISP:PRINT)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN PRINT-DEFINITION (X) (? *PRINT-DEFINITIONS?* (COMMON-LISP:APPLY *DEFINITION-PRINTER* (COMMON-LISP:LIST X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PRINT-DEFINITION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '*PRINT-DEFINITIONS?* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS '*DEFINITION-PRINTER* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN ANY-QUASIQUOTE? (X) (? (CONS? X) (? (EQ (COMMON-LISP:CAR X) 'QUASIQUOTE) COMMON-LISP:T (EQ (COMMON-LISP:CAR X) 'QUASIQUOTE-SPLICE) COMMON-LISP:T))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ANY-QUASIQUOTE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN %QUASIQUOTE-EXPAND (X) (? (COMMON-LISP:ATOM X) X (COMMON-LISP:ATOM (COMMON-LISP:CAR X)) (COMMON-LISP:CONS (COMMON-LISP:CAR X) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'COMMON-LISP:QUOTE) (COMMON-LISP:CONS (COMMON-LISP:CAR X) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'BACKQUOTE) (COMMON-LISP:CONS (COMMON-LISP:CAR X) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'QUASIQUOTE) (COMMON-LISP:CONS (EVAL (MACROEXPAND (COMMON-LISP:CAR (COMMON-LISP:CDR (COMMON-LISP:CAR X))))) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'QUASIQUOTE-SPLICE) (APPEND (EVAL (MACROEXPAND (COMMON-LISP:CAR (COMMON-LISP:CDR (COMMON-LISP:CAR X))))) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (COMMON-LISP:CONS (%QUASIQUOTE-EXPAND (COMMON-LISP:CAR X)) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%QUASIQUOTE-EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:QUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BACKQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EVAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'APPEND (COMMON-LISP:CONS (COMMON-LISP:CONS 'EVAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))))))))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUASIQUOTE-EXPAND (X) (COMMON-LISP:CAR (%QUASIQUOTE-EXPAND (COMMON-LISP:LIST X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUASIQUOTE-EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:SETQ *QUASIQUOTEEXPAND-HOOK* #'QUASIQUOTE-EXPAND)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN IDENTITY (X) X) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'IDENTITY *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN + (COMMON-LISP:&REST X) (COMMON-LISP:LABELS ((G3607 (A) (? A (COMMON-LISP:APPLY (? (CONS? A) #'APPEND (STRING? A) #'STRING-CONCAT #'NUMBER+) X) (? (COMMON-LISP:CDR X) (COMMON-LISP:APPLY #'+ (COMMON-LISP:CDR X)))))) (G3607 (COMMON-LISP:CAR X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'A COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'A (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'A COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'APPEND COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'A COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'STRING-CONCAT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'NUMBER+ COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '+ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN - (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'NUMBER- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'NUMBER- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'ARGS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FUNCALL (FUN COMMON-LISP:&REST ARGS) (COMMON-LISP:BLOCK FUNCALL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:APPLY FUN ARGS)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FUNCALL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'ARGS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'ARGS COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FUNCALL))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'CAAR (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS 'CDAR (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS 'CADAR (COMMON-LISP:CONS 'CDDAR (COMMON-LISP:CONS 'CAADAR (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS 'CAADR (COMMON-LISP:CONS 'CDDDR (COMMON-LISP:CONS 'CDADAR (COMMON-LISP:CONS 'CAADDR (COMMON-LISP:CONS 'CADDAR (COMMON-LISP:CONS 'CDDDAR (COMMON-LISP:CONS 'CDDDDR (COMMON-LISP:CONS 'CADADR (COMMON-LISP:CONS 'CADADDR (COMMON-LISP:CONS 'CADADAR (COMMON-LISP:CONS 'CDDADAR COMMON-LISP:NIL))))))))))))))))))) *FUNCTIONALS*))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAAR (LST) (COMMON-LISP:CAR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADR (LST) (COMMON-LISP:CAR (COMMON-LISP:CDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDAR (LST) (COMMON-LISP:CDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDR (LST) (COMMON-LISP:CDR (COMMON-LISP:CDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADAR (LST) (CADR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDAR (LST) (CDDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDADR (LST) (CDAR (COMMON-LISP:CDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADDR (LST) (COMMON-LISP:CAR (CDDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAADR (LST) (COMMON-LISP:CAR (CADR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDDR (LST) (COMMON-LISP:CDR (COMMON-LISP:CDR (COMMON-LISP:CDR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDDDR (LST) (COMMON-LISP:CDR (COMMON-LISP:CDR (COMMON-LISP:CDR (COMMON-LISP:CDR LST))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDDDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAADAR (LST) (COMMON-LISP:CAR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDADAR (LST) (COMMON-LISP:CDR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAADDR (LST) (COMMON-LISP:CAR (CADDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAADDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADDAR (LST) (CADDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDDAR (LST) (CDDDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADADR (LST) (CADR (CADR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADADDR (LST) (CADR (CADDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADADDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADADAR (LST) (CADR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDADAR (LST) (CDDR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'EQUAL COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN EQUAL (X Y) (COMMON-LISP:BLOCK EQUAL (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:LABELS ((G3608 (~G1422) (? ~G1422 ~G1422 (COMMON-LISP:ATOM Y)))) (G3608 (COMMON-LISP:ATOM X))) (EQL X Y) (EQUAL (COMMON-LISP:CAR X) (COMMON-LISP:CAR Y)) (EQUAL (COMMON-LISP:CDR X) (COMMON-LISP:CDR Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EQUAL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1422 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1422 (COMMON-LISP:CONS '~G1422 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'EQUAL))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS '>= (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'CHARACTER>= (COMMON-LISP:CONS 'CHARACTER<= (COMMON-LISP:CONS 'INTEGER>= (COMMON-LISP:CONS 'INTEGER<= (COMMON-LISP:CONS 'NUMBER>= (COMMON-LISP:CONS 'NUMBER<= COMMON-LISP:NIL)))))))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN >= (N COMMON-LISP:&REST X) (COMMON-LISP:BLOCK >= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3609 (~G1427) (COMMON-LISP:LABELS ((G3610 (I) (COMMON-LISP:TAGBODY ~G1425 (? (NOT ~G1427) (COMMON-LISP:GO ~G1426)) (COMMON-LISP:SETQ I (COMMON-LISP:CAR ~G1427)) (COMMON-LISP:LABELS ((G3611 (~G1423) (? ~G1423 ~G1423 (COMMON-LISP:LABELS ((G3612 (~G1424) (? ~G1424 ~G1424 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3612 (> N I)))))) (G3611 (== N I))) (COMMON-LISP:SETQ N I) (COMMON-LISP:SETQ ~G1427 (COMMON-LISP:CDR ~G1427)) (COMMON-LISP:GO ~G1425) ~G1426 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3610 COMMON-LISP:NIL)))) (G3609 X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'>= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1427 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1425 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1427 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1426 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1427 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1423 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1423 (COMMON-LISP:CONS '~G1423 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1424 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1424 (COMMON-LISP:CONS '~G1424 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1427 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1427 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1425 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1426 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '>=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN <= (N COMMON-LISP:&REST X) (COMMON-LISP:BLOCK <= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3613 (~G1432) (COMMON-LISP:LABELS ((G3614 (I) (COMMON-LISP:TAGBODY ~G1430 (? (NOT ~G1432) (COMMON-LISP:GO ~G1431)) (COMMON-LISP:SETQ I (COMMON-LISP:CAR ~G1432)) (COMMON-LISP:LABELS ((G3615 (~G1428) (? ~G1428 ~G1428 (COMMON-LISP:LABELS ((G3616 (~G1429) (? ~G1429 ~G1429 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3616 (< N I)))))) (G3615 (== N I))) (COMMON-LISP:SETQ N I) (COMMON-LISP:SETQ ~G1432 (COMMON-LISP:CDR ~G1432)) (COMMON-LISP:GO ~G1430) ~G1431 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3614 COMMON-LISP:NIL)))) (G3613 X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1432 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1430 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1432 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1431 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1432 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1428 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1428 (COMMON-LISP:CONS '~G1428 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1429 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1429 (COMMON-LISP:CONS '~G1429 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1432 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1432 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1430 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1431 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '<=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHARACTER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER>= (X Y) (COMMON-LISP:BLOCK CHARACTER>= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3617 (~G1433) (? ~G1433 ~G1433 (CHARACTER> X Y)))) (G3617 (CHARACTER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER>= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHARACTER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1433 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1433 (COMMON-LISP:CONS '~G1433 (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER> (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHARACTER>=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHARACTER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER<= (X Y) (COMMON-LISP:BLOCK CHARACTER<= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3618 (~G1434) (? ~G1434 ~G1434 (CHARACTER< X Y)))) (G3618 (CHARACTER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHARACTER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1434 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1434 (COMMON-LISP:CONS '~G1434 (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHARACTER<=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER>= (X Y) (COMMON-LISP:BLOCK INTEGER>= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3619 (~G1435) (? ~G1435 ~G1435 (INTEGER> X Y)))) (G3619 (INTEGER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER>= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1435 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1435 (COMMON-LISP:CONS '~G1435 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER> (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER>=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER<= (X Y) (COMMON-LISP:BLOCK INTEGER<= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3620 (~G1436) (? ~G1436 ~G1436 (INTEGER< X Y)))) (G3620 (INTEGER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1436 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1436 (COMMON-LISP:CONS '~G1436 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER<=))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS 'EVEN? (COMMON-LISP:CONS 'ODD? (COMMON-LISP:CONS 'END? (COMMON-LISP:CONS 'KEYWORD? COMMON-LISP:NIL))))) *FUNCTIONALS*))
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ZERO? (X) (COMMON-LISP:BLOCK ZERO? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 0 X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ZERO? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ZERO?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'EVEN? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN EVEN? (X) (COMMON-LISP:BLOCK EVEN? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 0 (COMMON-LISP:MOD X 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EVEN? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'EVEN? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'EVEN?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ODD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ODD? (X) (COMMON-LISP:BLOCK ODD? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 1 (COMMON-LISP:MOD X 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ODD? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ODD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 1 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ODD?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'END? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN END? (X) (COMMON-LISP:BLOCK END? (COMMON-LISP:BLOCK COMMON-LISP:NIL (EQ COMMON-LISP:NIL X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'END? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'END? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'END?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'KEYWORD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN KEYWORD? (X) (COMMON-LISP:BLOCK KEYWORD? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (SYMBOL? X) (EQ *KEYWORD-PACKAGE* (SYMBOL-PACKAGE X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'KEYWORD? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'KEYWORD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '*KEYWORD-PACKAGE* (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-PACKAGE (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'KEYWORD?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SOLE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SOLE? (X) (COMMON-LISP:BLOCK SOLE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 1 (COMMON-LISP:LENGTH X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SOLE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SOLE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 1 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SOLE?))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %NCONC-0 (LSTS) (COMMON-LISP:BLOCK %NCONC-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (? LSTS (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3621 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:RPLACD (COMMON-LISP:LAST !) (%NCONC-0 (COMMON-LISP:CDR LSTS))) !) (%NCONC-0 (COMMON-LISP:CDR LSTS))))) (G3621 (COMMON-LISP:CAR LSTS)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%NCONC-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'LSTS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%NCONC-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NCONC (COMMON-LISP:&REST LSTS) (COMMON-LISP:BLOCK NCONC (COMMON-LISP:BLOCK COMMON-LISP:NIL (%NCONC-0 LSTS)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NCONC *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NCONC))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO NCONC! (PLACE COMMON-LISP:&REST LSTS) (COMMON-LISP:BLOCK NCONC! (COMMON-LISP:CONS '= (COMMON-LISP:CONS PLACE (COMMON-LISP:CONS (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS PLACE (APPEND LSTS COMMON-LISP:NIL))) COMMON-LISP:NIL))))))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO APPEND! (PLACE COMMON-LISP:&REST ARGS) (COMMON-LISP:BLOCK APPEND! (COMMON-LISP:CONS '= (COMMON-LISP:CONS PLACE (COMMON-LISP:CONS (COMMON-LISP:CONS 'APPEND (COMMON-LISP:CONS PLACE (APPEND ARGS COMMON-LISP:NIL))) COMMON-LISP:NIL))))))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS 'QUEUE-FRONT COMMON-LISP:NIL)) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-QUEUE (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-QUEUE COMMON-LISP:NIL (COMMON-LISP:BLOCK MAKE-QUEUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-QUEUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-QUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-QUEUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ENQUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ENQUEUE (X COMMON-LISP:&REST VALS) (COMMON-LISP:BLOCK ENQUEUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:RPLACA X (COMMON-LISP:CDR (COMMON-LISP:RPLACD (COMMON-LISP:LABELS ((G3624 (~G1437) (? ~G1437 ~G1437 X))) (G3624 (COMMON-LISP:CAR X))) VALS))) VALS))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ENQUEUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ENQUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACA (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1437 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1437 (COMMON-LISP:CONS '~G1437 (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ENQUEUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ENQUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ENQUEUE-LIST (X VALS) (COMMON-LISP:BLOCK ENQUEUE-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:RPLACD X (NCONC (COMMON-LISP:CDR X) VALS)) (COMMON-LISP:RPLACA X (COMMON-LISP:LAST VALS))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ENQUEUE-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ENQUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACA (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ENQUEUE-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-POP (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-POP (X) (COMMON-LISP:BLOCK QUEUE-POP (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3625 (~G1438) (? (NOT (COMMON-LISP:CDR (COMMON-LISP:CDR X))) (COMMON-LISP:RPLACA X COMMON-LISP:NIL)) (? (COMMON-LISP:CDR X) (COMMON-LISP:RPLACD X (COMMON-LISP:CDR (COMMON-LISP:CDR X)))) ~G1438)) (G3625 (COMMON-LISP:CAR (COMMON-LISP:CDR X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-POP *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-POP (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1438 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACA (COMMON-LISP:CONS 'X (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS '~G1438 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-POP))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-LIST (X) (COMMON-LISP:BLOCK QUEUE-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CDR X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-FRONT (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-FRONT (X) (COMMON-LISP:BLOCK QUEUE-FRONT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CAR (COMMON-LISP:CDR X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-FRONT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-FRONT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-FRONT))
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'INTEGER++ (COMMON-LISP:CONS 'INTEGER-- COMMON-LISP:NIL)))) *FUNCTIONALS*))
COMMON-LISP:NIL
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN ++ (X) (NUMBER+ X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'++ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN -- (X) (NUMBER- X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'-- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER++ (X) (INTEGER+ X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER++ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER-- (X) (INTEGER- X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER-- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO FN (COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK FN (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (APPEND (? (? (CONS? (COMMON-LISP:CAR BODY)) (NOT (EQ '%SLOT-VALUE (COMMON-LISP:CAR (COMMON-LISP:CAR BODY))))) BODY (COMMON-LISP:LIST BODY)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO SQUARE (COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK SQUARE (COMMON-LISP:CONS 'FN (APPEND BODY COMMON-LISP:NIL)))))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'BUTLAST COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN BUTLAST (PLIST) (COMMON-LISP:BLOCK BUTLAST (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:CDR PLIST) (COMMON-LISP:CONS (COMMON-LISP:CAR PLIST) (BUTLAST (COMMON-LISP:CDR PLIST))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'BUTLAST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'BUTLAST))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN VALUES (COMMON-LISP:&REST VALS) (COMMON-LISP:BLOCK VALUES (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CONS 'VALUES VALS)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'VALUES *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'VALUES))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'VALUES? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN VALUES? (X) (COMMON-LISP:BLOCK VALUES? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (CONS? X) (EQ 'VALUES (COMMON-LISP:CAR X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'VALUES? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'VALUES? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'VALUES?))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'RANGE? COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'BOTTOM (COMMON-LISP:CONS 'TOP COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN RANGE? (X BOTTOM TOP) (COMMON-LISP:BLOCK RANGE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (>= X BOTTOM) (<= X TOP))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'RANGE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'BOTTOM (COMMON-LISP:CONS 'TOP COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'BOTTOM COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'TOP COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'RANGE?))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS 'CHAR-DOWNCASE (COMMON-LISP:CONS 'COMMON-LISP:CHAR-CODE (COMMON-LISP:CONS 'CODE-CHAR COMMON-LISP:NIL)))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHAR-UPCASE (C) (COMMON-LISP:BLOCK CHAR-UPCASE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (LOWER-CASE? C) (CHARACTER+ C (CHARACTER- #\A #\a)) C)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHAR-UPCASE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS #\A (COMMON-LISP:CONS #\a COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'C COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHAR-UPCASE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHAR-DOWNCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHAR-DOWNCASE (C) (COMMON-LISP:BLOCK CHAR-DOWNCASE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (UPPER-CASE? C) (CHARACTER+ C (CHARACTER- #\a #\A)) C)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHAR-DOWNCASE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHAR-DOWNCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS #\a (COMMON-LISP:CONS #\A COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'C COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHAR-DOWNCASE))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS 'ALPHANUMERIC? COMMON-LISP:NIL))))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO DEF-REST-PREDICATE (NAME ITER ARGS TEST-EXPR) (COMMON-LISP:BLOCK DEF-REST-PREDICATE (COMMON-LISP:LABELS ((G3626 (X) (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS NAME (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS X (APPEND ARGS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOLIST (COMMON-LISP:CONS (COMMON-LISP:CONS ITER (COMMON-LISP:CONS X (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS TEST-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))) (G3626 (GENSYM))))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1439 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LOWER-CASE? (COMMON-LISP:&REST ~G1439) (COMMON-LISP:BLOCK LOWER-CASE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3627 (~G1452) (COMMON-LISP:LABELS ((G3628 (C) (COMMON-LISP:TAGBODY ~G1450 (? (NOT ~G1452) (COMMON-LISP:GO ~G1451)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1452)) (COMMON-LISP:LABELS ((G3629 (~G1449) (? ~G1449 ~G1449 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3629 (RANGE? C #\a #\z))) (COMMON-LISP:SETQ ~G1452 (COMMON-LISP:CDR ~G1452)) (COMMON-LISP:GO ~G1450) ~G1451 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3628 COMMON-LISP:NIL)))) (G3627 ~G1439)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LOWER-CASE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1439 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1452 (COMMON-LISP:CONS '~G1439 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1450 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1452 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1451 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1452 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1449 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1449 (COMMON-LISP:CONS '~G1449 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\a (COMMON-LISP:CONS #\z COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1452 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1452 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1450 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1451 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LOWER-CASE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1440 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN UPPER-CASE? (COMMON-LISP:&REST ~G1440) (COMMON-LISP:BLOCK UPPER-CASE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3630 (~G1456) (COMMON-LISP:LABELS ((G3631 (C) (COMMON-LISP:TAGBODY ~G1454 (? (NOT ~G1456) (COMMON-LISP:GO ~G1455)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1456)) (COMMON-LISP:LABELS ((G3632 (~G1453) (? ~G1453 ~G1453 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3632 (RANGE? C #\A #\Z))) (COMMON-LISP:SETQ ~G1456 (COMMON-LISP:CDR ~G1456)) (COMMON-LISP:GO ~G1454) ~G1455 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3631 COMMON-LISP:NIL)))) (G3630 ~G1440)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'UPPER-CASE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1440 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1456 (COMMON-LISP:CONS '~G1440 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1454 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1456 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1455 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1456 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1453 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1453 (COMMON-LISP:CONS '~G1453 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\A (COMMON-LISP:CONS #\Z COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1456 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1456 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1454 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1455 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'UPPER-CASE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1442 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ALPHA-CHAR? (COMMON-LISP:&REST ~G1442) (COMMON-LISP:BLOCK ALPHA-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3633 (~G1460) (COMMON-LISP:LABELS ((G3634 (C) (COMMON-LISP:TAGBODY ~G1458 (? (NOT ~G1460) (COMMON-LISP:GO ~G1459)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1460)) (COMMON-LISP:LABELS ((G3635 (~G1457) (? ~G1457 ~G1457 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3635 (COMMON-LISP:LABELS ((G3636 (~G1441) (? ~G1441 ~G1441 (UPPER-CASE? C)))) (G3636 (LOWER-CASE? C))))) (COMMON-LISP:SETQ ~G1460 (COMMON-LISP:CDR ~G1460)) (COMMON-LISP:GO ~G1458) ~G1459 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3634 COMMON-LISP:NIL)))) (G3633 ~G1442)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ALPHA-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1442 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1460 (COMMON-LISP:CONS '~G1442 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1458 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1460 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1459 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1460 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1457 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1457 (COMMON-LISP:CONS '~G1457 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1441 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1441 (COMMON-LISP:CONS '~G1441 (COMMON-LISP:CONS (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1460 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1460 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1458 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1459 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ALPHA-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DECIMAL-DIGIT? (X) (COMMON-LISP:BLOCK DECIMAL-DIGIT? (COMMON-LISP:BLOCK COMMON-LISP:NIL (RANGE? X #\0 #\9)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DECIMAL-DIGIT? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\0 (COMMON-LISP:CONS #\9 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DECIMAL-DIGIT?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %NONDECIMAL-DIGIT? (X START BASE) (COMMON-LISP:BLOCK %NONDECIMAL-DIGIT? (COMMON-LISP:BLOCK COMMON-LISP:NIL (RANGE? X START (CHARACTER+ START (CHARACTER- BASE 10)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%NONDECIMAL-DIGIT? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'START (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%NONDECIMAL-DIGIT?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NONDECIMAL-DIGIT? (X COMMON-LISP:&KEY (BASE 10)) (COMMON-LISP:BLOCK NONDECIMAL-DIGIT? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< 10 BASE) (COMMON-LISP:LABELS ((G3637 (~G1443) (? ~G1443 ~G1443 (%NONDECIMAL-DIGIT? X #\A BASE)))) (G3637 (%NONDECIMAL-DIGIT? X #\a BASE))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NONDECIMAL-DIGIT? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 10 (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1443 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1443 (COMMON-LISP:CONS '~G1443 (COMMON-LISP:CONS (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\A (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\a (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NONDECIMAL-DIGIT?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DIGIT-CHAR? (C COMMON-LISP:&KEY (BASE 10)) (COMMON-LISP:BLOCK DIGIT-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (CHARACTER? C) (COMMON-LISP:LABELS ((G3638 (~G1444) (? ~G1444 ~G1444 (NONDECIMAL-DIGIT? C :BASE BASE)))) (G3638 (DECIMAL-DIGIT? C))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DIGIT-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1444 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1444 (COMMON-LISP:CONS '~G1444 (COMMON-LISP:CONS (COMMON-LISP:CONS 'NONDECIMAL-DIGIT? (COMMON-LISP:CONS 'C (COMMON-LISP:CONS ':BASE (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DECIMAL-DIGIT? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DIGIT-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'HEX-DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN HEX-DIGIT-CHAR? (X) (COMMON-LISP:BLOCK HEX-DIGIT-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3639 (~G1445) (? ~G1445 ~G1445 (COMMON-LISP:LABELS ((G3640 (~G1446) (? ~G1446 ~G1446 (? (>= X #\a) (<= X #\f))))) (G3640 (? (>= X #\A) (<= X #\F))))))) (G3639 (DIGIT-CHAR? X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'HEX-DIGIT-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'HEX-DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1445 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1445 (COMMON-LISP:CONS '~G1445 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1446 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1446 (COMMON-LISP:CONS '~G1446 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\a COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\f COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\A COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\F COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'HEX-DIGIT-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ALPHANUMERIC? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1448 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ALPHANUMERIC? (COMMON-LISP:&REST ~G1448) (COMMON-LISP:BLOCK ALPHANUMERIC? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3641 (~G1464) (COMMON-LISP:LABELS ((G3642 (C) (COMMON-LISP:TAGBODY ~G1462 (? (NOT ~G1464) (COMMON-LISP:GO ~G1463)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1464)) (COMMON-LISP:LABELS ((G3643 (~G1461) (? ~G1461 ~G1461 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3643 (COMMON-LISP:LABELS ((G3644 (~G1447) (? ~G1447 ~G1447 (DIGIT-CHAR? C)))) (G3644 (ALPHA-CHAR? C))))) (COMMON-LISP:SETQ ~G1464 (COMMON-LISP:CDR ~G1464)) (COMMON-LISP:GO ~G1462) ~G1463 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3642 COMMON-LISP:NIL)))) (G3641 ~G1448)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ALPHANUMERIC? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1448 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ALPHANUMERIC? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1464 (COMMON-LISP:CONS '~G1448 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1462 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1464 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1463 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1464 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1461 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1461 (COMMON-LISP:CONS '~G1461 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1447 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1447 (COMMON-LISP:CONS '~G1447 (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1464 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1464 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1462 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1463 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ALPHANUMERIC?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'WHITESPACE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN WHITESPACE? (X) (COMMON-LISP:BLOCK WHITESPACE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< X 33) (>= X 0))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'WHITESPACE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'WHITESPACE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 33 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'WHITESPACE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CONTROL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CONTROL-CHAR? (X) (COMMON-LISP:BLOCK CONTROL-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (< X 32)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CONTROL-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CONTROL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 32 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CONTROL-CHAR?))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STRING-CONCAT (COMMON-LISP:CONS 'STRING== (COMMON-LISP:CONS 'UPCASE (COMMON-LISP:CONS 'DOWNCASE (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS 'QUEUE-STRING COMMON-LISP:NIL))))))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STRING<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'A (COMMON-LISP:CONS 'B COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING<= (A B) (COMMON-LISP:BLOCK STRING<= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3645 (LA) (COMMON-LISP:LABELS ((G3646 (LB) (COMMON-LISP:LABELS ((G3647 (~G1465) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3648 (I) (COMMON-LISP:TAGBODY ~G1467 (? (INTEGER== I ~G1465) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN (<= LA LB)))) (? (> (COMMON-LISP:ELT A I) (COMMON-LISP:ELT B I)) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:SETQ I (INTEGER+ 1 I)) (COMMON-LISP:GO ~G1467)))) (G3648 0))))) (G3647 (INTEGER LA))))) (G3646 (COMMON-LISP:LENGTH B))))) (G3645 (COMMON-LISP:LENGTH A)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'A (COMMON-LISP:CONS 'B COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STRING<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LA COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'LB (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'B COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1465 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1467 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'I (COMMON-LISP:CONS '~G1465 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'LA (COMMON-LISP:CONS 'LB COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'A (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'B (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1467 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'LA COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'A COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STRING<=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING-LIST (X) (COMMON-LISP:BLOCK STRING-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3649 (L) (COMMON-LISP:LABELS ((G3650 (S) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3651 (I) (COMMON-LISP:TAGBODY ~G1466 (? (< I 0) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ S (COMMON-LISP:PROGN (COMMON-LISP:SETQ S (COMMON-LISP:CONS (COMMON-LISP:ELT X I) S))))) (COMMON-LISP:SETQ I (-- I)) (COMMON-LISP:GO ~G1466)))) (G3651 (-- L)))) S)) (G3650 COMMON-LISP:NIL)))) (G3649 (COMMON-LISP:LENGTH X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'L COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'L COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1466 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN COMMON-LISP:NIL) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1466 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STRING-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-STRING (X) (COMMON-LISP:BLOCK QUEUE-STRING (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:APPLY #'STRING-CONCAT (FILTER #'(COMMON-LISP:LAMBDA (_) (? (STRING? _) _ (CHARACTER? _) (STRING _))) (QUEUE-LIST X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'STRING-CONCAT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FILTER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) (COMMON-LISP:CONS '_ (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-STRING))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'LIST-SYMBOL COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LIST-SYMBOL (X) (COMMON-LISP:BLOCK LIST-SYMBOL (COMMON-LISP:BLOCK COMMON-LISP:NIL (MAKE-SYMBOL (LIST-STRING X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LIST-SYMBOL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LIST-SYMBOL))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'SUBSEQ COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LIST-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 999999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LIST-SUBSEQ (SEQ START COMMON-LISP:&OPTIONAL (END 999999)) (COMMON-LISP:BLOCK LIST-SUBSEQ (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (? SEQ (NOT (== START END))) (COMMON-LISP:PROGN (? (> START END) (COMMON-LISP:LABELS ((G3652 (~G1468) (COMMON-LISP:PROGN (COMMON-LISP:SETQ START END) (COMMON-LISP:SETQ END ~G1468)))) (G3652 START))) (COMMON-LISP:LABELS ((COPY-NUM (LST LEN) (? LST (? (< 0 LEN) (COMMON-LISP:CONS (COMMON-LISP:CAR LST) (COPY-NUM (COMMON-LISP:CDR LST) (-- LEN))))))) (COPY-NUM (COMMON-LISP:NTHCDR START SEQ) (- END START)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LIST-SUBSEQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 999999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LIST-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1468 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '~G1468 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LABELS (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COPY-NUM (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST (COMMON-LISP:CONS 'LEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'LST (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'LEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COPY-NUM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'LEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COPY-NUM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:NTHCDR (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'START COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LIST-SUBSEQ))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%SUBSEQ-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKER (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %SUBSEQ-SEQUENCE (MAKER SEQ START END) (COMMON-LISP:BLOCK %SUBSEQ-SEQUENCE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (NOT (== START END)) (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3653 (!) (? (< START !) (COMMON-LISP:PROGN (? (>= END !) (COMMON-LISP:PROGN (COMMON-LISP:SETQ END !))) (COMMON-LISP:LABELS ((G3654 (L) (COMMON-LISP:LABELS ((G3655 (S) (COMMON-LISP:LABELS ((G3656 (~G1469) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3657 (X) (COMMON-LISP:TAGBODY ~G1472 (? (INTEGER== X ~G1469) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN S))) (COMMON-LISP:PROGN (=-ELT (COMMON-LISP:ELT SEQ (+ START X)) S X)) (COMMON-LISP:SETQ X (INTEGER+ 1 X)) (COMMON-LISP:GO ~G1472)))) (G3657 0))))) (G3656 (INTEGER L))))) (G3655 (FUNCALL MAKER L))))) (G3654 (- END START))))))) (G3653 (COMMON-LISP:LENGTH SEQ)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%SUBSEQ-SEQUENCE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKER (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%SUBSEQ-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'START (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'L COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'MAKER (COMMON-LISP:CONS 'L COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1469 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1472 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '~G1469 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-ELT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1472 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'L COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'START COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%SUBSEQ-SEQUENCE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SUBSEQ (SEQ START COMMON-LISP:&OPTIONAL (END 99999)) (COMMON-LISP:BLOCK SUBSEQ (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (COMMON-LISP:PROGN (? (> START END) (COMMON-LISP:LABELS ((G3658 (~G1470) (COMMON-LISP:PROGN (COMMON-LISP:SETQ START END) (COMMON-LISP:SETQ END ~G1470)))) (G3658 START))) (COMMON-LISP:LABELS ((G3659 (~G1471) (? (CONS? ~G1471) (LIST-SUBSEQ SEQ START END) (STRING? ~G1471) (STRING-SUBSEQ SEQ START END) (ARRAY? ~G1471) (%SUBSEQ-SEQUENCE #'MAKE-ARRAY SEQ START END) (ERROR "Type of ~A not supported." SEQ)))) (G3659 SEQ))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SUBSEQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1470 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '~G1470 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1471 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS '~G1471 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS '~G1471 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS '~G1471 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SUBSEQ-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'MAKE-ARRAY COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Type of ~A not supported." (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SUBSEQ))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STRING-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING-SUBSEQ (SEQ START COMMON-LISP:&OPTIONAL (END 99999)) (COMMON-LISP:BLOCK STRING-SUBSEQ (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (== START END) "" (COMMON-LISP:LABELS ((G3660 (SEQLEN) (? (< START SEQLEN) (COMMON-LISP:PROGN (? (>= END SEQLEN) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (COMMON-LISP:SETQ END SEQLEN)))) (COMMON-LISP:LABELS ((G3661 (L) (COMMON-LISP:LABELS ((G3662 (S) (COMMON-LISP:LABELS ((G3663 (~G1473) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3664 (X) (COMMON-LISP:TAGBODY ~G1474 (? (INTEGER== X ~G1473) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN S))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ S (+ S (STRING (COMMON-LISP:ELT SEQ (+ START X)))))) (COMMON-LISP:SETQ X (INTEGER+ 1 X)) (COMMON-LISP:GO ~G1474)))) (G3664 0))))) (G3663 (INTEGER L))))) (G3662 (COMMON-LISP:MAKE-STRING 0))))) (G3661 (- END START))))))) (G3660 (COMMON-LISP:LENGTH SEQ))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING-SUBSEQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STRING-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS "" (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'L COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MAKE-STRING (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1473 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1474 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '~G1473 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1474 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'L COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'START COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STRING-SUBSEQ))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'FIND (COMMON-LISP:CONS 'POSITION COMMON-LISP:NIL)) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%FIND-IF-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %FIND-IF-LIST (PRED SEQ FROM-END WITH-INDEX) (COMMON-LISP:BLOCK %FIND-IF-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3665 (!) (? WITH-INDEX (COMMON-LISP:LABELS ((G3666 (IDX) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3667 (~G1486) (COMMON-LISP:LABELS ((G3668 (!) (COMMON-LISP:TAGBODY ~G1484 (? (NOT ~G1486) (COMMON-LISP:GO ~G1485)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1486)) (? (FUNCALL PRED ! IDX) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL !)) (COMMON-LISP:PROGN (COMMON-LISP:SETQ IDX (NUMBER+ IDX 1))) (COMMON-LISP:SETQ ~G1486 (COMMON-LISP:CDR ~G1486)) (COMMON-LISP:GO ~G1484) ~G1485 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))))) (G3668 COMMON-LISP:NIL)))) (G3667 !))))) (G3666 0)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3669 (~G1489) (COMMON-LISP:LABELS ((G3670 (!) (COMMON-LISP:TAGBODY ~G1487 (? (NOT ~G1489) (COMMON-LISP:GO ~G1488)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1489)) (? (FUNCALL PRED !) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL !)) (COMMON-LISP:SETQ ~G1489 (COMMON-LISP:CDR ~G1489)) (COMMON-LISP:GO ~G1487) ~G1488 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))))) (G3670 COMMON-LISP:NIL)))) (G3669 !)))))) (G3665 (? FROM-END (REVERSE SEQ) SEQ)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%FIND-IF-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%FIND-IF-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'IDX COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1486 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1484 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1486 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1485 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1486 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'IDX COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'IDX (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS 'IDX (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1486 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1486 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1484 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1485 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1489 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1487 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1489 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1488 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1489 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1489 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1489 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1487 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1488 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS (COMMON-LISP:CONS 'REVERSE (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%FIND-IF-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%FIND-IF-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %FIND-IF-SEQUENCE (PRED SEQ START END FROM-END WITH-INDEX) (COMMON-LISP:BLOCK %FIND-IF-SEQUENCE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (? (< 0 (COMMON-LISP:LENGTH SEQ)) (COMMON-LISP:LABELS ((G3671 (E) (COMMON-LISP:LABELS ((G3672 (S) (? (COMMON-LISP:LABELS ((G3673 (~G1477) (? ~G1477 ~G1477 (? (< S E) FROM-END)))) (G3673 (? (> S E) (NOT FROM-END)))) (COMMON-LISP:LABELS ((G3674 (~G1478) (COMMON-LISP:PROGN (COMMON-LISP:SETQ S E) (COMMON-LISP:SETQ E ~G1478)))) (G3674 S))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3675 (I) (COMMON-LISP:TAGBODY ~G1479 (? (? FROM-END (< I E) (> I E)) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN))) (COMMON-LISP:LABELS ((G3676 (!) (? (COMMON-LISP:APPLY PRED (COMMON-LISP:CONS ! (? WITH-INDEX (COMMON-LISP:LIST I)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL !)))) (G3676 (COMMON-LISP:ELT SEQ I))) (COMMON-LISP:SETQ I (? FROM-END (-- I) (++ I))) (COMMON-LISP:GO ~G1479)))) (G3675 S))))) (G3672 (COMMON-LISP:LABELS ((G3677 (~G1476) (? ~G1476 ~G1476 0))) (G3677 START)))))) (G3671 (COMMON-LISP:LABELS ((G3678 (~G1475) (? ~G1475 ~G1475 (-- (COMMON-LISP:LENGTH SEQ))))) (G3678 END))))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%FIND-IF-SEQUENCE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%FIND-IF-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'E COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1476 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1476 (COMMON-LISP:CONS '~G1476 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1477 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1477 (COMMON-LISP:CONS '~G1477 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS 'FROM-END COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'FROM-END COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1478 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'E (COMMON-LISP:CONS '~G1478 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1479 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN COMMON-LISP:NIL) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1479 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1475 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1475 (COMMON-LISP:CONS '~G1475 (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'END COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%FIND-IF-SEQUENCE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FIND-IF (PRED SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL) (WITH-INDEX COMMON-LISP:NIL)) (COMMON-LISP:BLOCK FIND-IF (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (NOT (COMMON-LISP:ATOM SEQ) START END) (%FIND-IF-LIST PRED SEQ FROM-END WITH-INDEX) (%FIND-IF-SEQUENCE PRED SEQ START END FROM-END WITH-INDEX))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FIND-IF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%FIND-IF-LIST (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%FIND-IF-SEQUENCE (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FIND-IF))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FIND (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FIND (OBJ SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL) (TEST #'EQL)) (COMMON-LISP:BLOCK FIND (COMMON-LISP:BLOCK COMMON-LISP:NIL (FIND-IF #'(COMMON-LISP:LAMBDA (_) (FUNCALL TEST _ OBJ)) SEQ :START START :END END :FROM-END FROM-END)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FIND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FIND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS '_ (COMMON-LISP:CONS 'OBJ COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':START (COMMON-LISP:CONS 'START (COMMON-LISP:CONS ':END (COMMON-LISP:CONS 'END (COMMON-LISP:CONS ':FROM-END (COMMON-LISP:CONS 'FROM-END COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FIND))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN POSITION (OBJ SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL) (TEST #'EQL)) (COMMON-LISP:BLOCK POSITION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3679 (!) (FIND-IF #'(COMMON-LISP:LAMBDA (X I) (? (FUNCALL TEST X OBJ) (COMMON-LISP:PROGN (COMMON-LISP:SETQ ! I)))) SEQ :START START :END END :FROM-END FROM-END :WITH-INDEX COMMON-LISP:T) !)) (G3679 COMMON-LISP:NIL))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'POSITION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'OBJ COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':START (COMMON-LISP:CONS 'START (COMMON-LISP:CONS ':END (COMMON-LISP:CONS 'END (COMMON-LISP:CONS ':FROM-END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS ':WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))))))))))) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'POSITION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'POSITION-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN POSITION-IF (PRED SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL)) (COMMON-LISP:BLOCK POSITION-IF (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3680 (!) (FIND-IF #'(COMMON-LISP:LAMBDA (X I) (? (FUNCALL PRED X) (COMMON-LISP:PROGN (COMMON-LISP:SETQ ! I)))) SEQ :START START :END END :FROM-END FROM-END :WITH-INDEX COMMON-LISP:T) !)) (G3680 COMMON-LISP:NIL))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'POSITION-IF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'POSITION-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':START (COMMON-LISP:CONS 'START (COMMON-LISP:CONS ':END (COMMON-LISP:CONS 'END (COMMON-LISP:CONS ':FROM-END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS ':WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))))))))))) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'POSITION-IF))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SOME (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SOME (PRED COMMON-LISP:&REST SEQS) (COMMON-LISP:BLOCK SOME (COMMON-LISP:BLOCK COMMON-LISP:NIL (FIND-IF PRED (COMMON-LISP:APPLY #'APPEND SEQS))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SOME *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SOME (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'APPEND COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SOME))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN EVERY (PRED COMMON-LISP:&REST SEQS) (COMMON-LISP:BLOCK EVERY (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3681 (~G1483) (COMMON-LISP:LABELS ((G3682 (SEQ) (COMMON-LISP:TAGBODY ~G1481 (? (NOT ~G1483) (COMMON-LISP:GO ~G1482)) (COMMON-LISP:SETQ SEQ (COMMON-LISP:CAR ~G1483)) (COMMON-LISP:LABELS ((G3683 (~G1490) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3684 (!) (COMMON-LISP:TAGBODY ~G1491 (? (INTEGER== ! ~G1490) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))) (COMMON-LISP:LABELS ((G3685 (~G1480) (? ~G1480 ~G1480 (COMMON-LISP:RETURN-FROM EVERY COMMON-LISP:NIL)))) (G3685 (FUNCALL PRED (COMMON-LISP:ELT SEQ !)))) (COMMON-LISP:SETQ ! (INTEGER+ 1 !)) (COMMON-LISP:GO ~G1491)))) (G3684 0))))) (G3683 (INTEGER (COMMON-LISP:LENGTH SEQ)))) (COMMON-LISP:SETQ ~G1483 (COMMON-LISP:CDR ~G1483)) (COMMON-LISP:GO ~G1481) ~G1482 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3682 COMMON-LISP:NIL)))) (G3681 SEQS)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EVERY *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1483 (COMMON-LISP:CONS 'SEQS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1481 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1483 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1482 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1483 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1490 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DO (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS '! (COMMON-LISP:CONS '~G1490 COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1480 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1480 (COMMON-LISP:CONS '~G1480 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1483 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1483 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1481 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1482 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'EVERY))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WHICH (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-MAKE-EXPR (WHICH NUM X) (COMMON-LISP:BLOCK DOT-EXPAND-MAKE-EXPR (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< 0 NUM) (COMMON-LISP:CONS WHICH (COMMON-LISP:CONS (DOT-EXPAND-MAKE-EXPR WHICH (-- NUM) X) COMMON-LISP:NIL)) X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-MAKE-EXPR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WHICH (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS 'WHICH COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS 'WHICH (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-MAKE-EXPR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-HEAD-LENGTH (X COMMON-LISP:&OPTIONAL (NUM 0)) (COMMON-LISP:BLOCK DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (== #\. (COMMON-LISP:CAR X)) (DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CDR X) (++ NUM)) (VALUES NUM X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-HEAD-LENGTH *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-HEAD-LENGTH))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-TAIL-LENGTH (X COMMON-LISP:&OPTIONAL (NUM 0)) (COMMON-LISP:BLOCK DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (== #\. (COMMON-LISP:CAR (COMMON-LISP:LAST X))) (DOT-EXPAND-TAIL-LENGTH (BUTLAST X) (++ NUM)) (VALUES NUM X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-TAIL-LENGTH *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-TAIL-LENGTH))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-LIST (X) (COMMON-LISP:BLOCK DOT-EXPAND-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3686 (~G1497) (COMMON-LISP:LABELS ((G3687 (~G1498) (? (NOT (EQ (COMMON-LISP:CAR ~G1497) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1497))) (COMMON-LISP:LABELS ((G3688 (NUM-CDRS) (COMMON-LISP:LABELS ((G3689 (~G1499) (COMMON-LISP:LABELS ((G3690 (WITHOUT-START) (COMMON-LISP:LABELS ((G3691 (~G1503) (COMMON-LISP:LABELS ((G3692 (~G1504) (? (NOT (EQ (COMMON-LISP:CAR ~G1503) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1503))) (COMMON-LISP:LABELS ((G3693 (NUM-CARS) (COMMON-LISP:LABELS ((G3694 (~G1505) (COMMON-LISP:LABELS ((G3695 (WITHOUT-END) (DOT-EXPAND-MAKE-EXPR 'COMMON-LISP:CAR NUM-CARS (DOT-EXPAND-MAKE-EXPR 'COMMON-LISP:CDR NUM-CDRS (DOT-EXPAND (LIST-SYMBOL WITHOUT-END)))))) (G3695 (COMMON-LISP:CAR ~G1505))))) (G3694 (COMMON-LISP:LABELS ((G3696 (~G1507) (? ~G1507 ~G1507 (%ERROR "Not enough VALUES.")))) (G3696 (COMMON-LISP:CDR ~G1504))))))) (G3693 (COMMON-LISP:CAR ~G1504))))) (G3692 (COMMON-LISP:CDR ~G1503))))) (G3691 (DOT-EXPAND-TAIL-LENGTH WITHOUT-START))))) (G3690 (COMMON-LISP:CAR ~G1499))))) (G3689 (COMMON-LISP:LABELS ((G3697 (~G1502) (? ~G1502 ~G1502 (%ERROR "Not enough VALUES.")))) (G3697 (COMMON-LISP:CDR ~G1498))))))) (G3688 (COMMON-LISP:CAR ~G1498))))) (G3687 (COMMON-LISP:CDR ~G1497))))) (G3686 (DOT-EXPAND-HEAD-LENGTH X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1497 (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1498 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1497 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1497 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1497 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM-CDRS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1498 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1499 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1498 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITHOUT-START (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1499 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MULTIPLE-VALUE-BIND (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM-CARS (COMMON-LISP:CONS 'WITHOUT-END COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS 'WITHOUT-START COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:CAR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'NUM-CARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:CDR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'NUM-CDRS (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS 'WITHOUT-END COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-POSITION (X) (COMMON-LISP:BLOCK DOT-POSITION (COMMON-LISP:BLOCK COMMON-LISP:NIL (POSITION #\. X :TEST #'==)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-POSITION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS #\. (COMMON-LISP:CONS 'X (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '== COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-POSITION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NO-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NO-DOT-NOTATION? (X) (COMMON-LISP:BLOCK NO-DOT-NOTATION? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3698 (SL) (COMMON-LISP:LABELS ((G3699 (L) (COMMON-LISP:LABELS ((G3700 (P) (COMMON-LISP:LABELS ((G3701 (~G1492) (? ~G1492 ~G1492 (NOT P)))) (G3701 (== 1 L))))) (G3700 (DOT-POSITION SL))))) (G3699 (COMMON-LISP:LENGTH SL))))) (G3698 (STRING-LIST (SYMBOL-NAME X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NO-DOT-NOTATION? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NO-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SL COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'L (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'P (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1492 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1492 (COMMON-LISP:CONS '~G1492 (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'P COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'L COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NO-DOT-NOTATION?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'HAS-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN HAS-DOT-NOTATION? (X) (COMMON-LISP:BLOCK HAS-DOT-NOTATION? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3702 (SL) (COMMON-LISP:LABELS ((G3703 (~G1493) (? ~G1493 ~G1493 (== #\. (COMMON-LISP:CAR (COMMON-LISP:LAST SL)))))) (G3703 (== #\. (COMMON-LISP:CAR SL)))))) (G3702 (STRING-LIST (SYMBOL-NAME X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'HAS-DOT-NOTATION? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'HAS-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SL COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1493 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1493 (COMMON-LISP:CONS '~G1493 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'HAS-DOT-NOTATION?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-CONV (X) (COMMON-LISP:BLOCK DOT-EXPAND-CONV (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3704 (SL) (COMMON-LISP:LABELS ((G3705 (P) (? (NO-DOT-NOTATION? X) X (HAS-DOT-NOTATION? X) (DOT-EXPAND-LIST SL) (COMMON-LISP:CONS '%SLOT-VALUE (COMMON-LISP:CONS (LIST-SYMBOL (SUBSEQ SL 0 P)) (COMMON-LISP:CONS (DOT-EXPAND-CONV (LIST-SYMBOL (SUBSEQ SL (++ P)))) COMMON-LISP:NIL)))))) (G3705 (DOT-POSITION SL))))) (G3704 (STRING-LIST (SYMBOL-NAME X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-CONV *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SL COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'P (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NO-DOT-NOTATION? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'HAS-DOT-NOTATION? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-LIST (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS '%SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SL (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'P COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SL (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'P COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-CONV))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND (X) (COMMON-LISP:BLOCK DOT-EXPAND (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((LABEL? (_) (NOT (COMMON-LISP:LABELS ((G3706 (~G1494) (? ~G1494 ~G1494 (COMMON-LISP:LABELS ((G3707 (~G1495) (? ~G1495 ~G1495 (STRING? _)))) (G3707 (NUMBER? _)))))) (G3706 (CONS? _)))))) (? X (COMMON-LISP:PROGN (? (LABEL? X) (DOT-EXPAND-CONV X) (CONS? X) (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3708 (~G1501) (COMMON-LISP:LABELS ((G3709 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* !)))))) (G3709 (? (CONS? ~G1501) (CPR ~G1501)))))) (G3708 X)) (COMMON-LISP:LABELS ((G3710 (~G1496) (RPLACP (COMMON-LISP:CONS (DOT-EXPAND (COMMON-LISP:CAR X)) (DOT-EXPAND (COMMON-LISP:CDR X))) ~G1496))) (G3710 *DEFAULT-LISTPROP*))) X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LABELS (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LABEL? (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1494 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1494 (COMMON-LISP:CONS '~G1494 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1495 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1495 (COMMON-LISP:CONS '~G1495 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LABEL? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1501 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'AWHEN (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS '~G1501 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CPR (COMMON-LISP:CONS '~G1501 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '= (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1496 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'RPLACP (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS '~G1496 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND))
(COMMON-LISP:PROGN (COMMON-LISP:SETQ *DOTEXPAND-HOOK* #'DOT-EXPAND))
(%DEFVAR *MEMORIZED-NUMBERS* (MAKE-HASH-TABLE :TEST #'==))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MEMORIZED-NUMBER (X) (COMMON-LISP:BLOCK MEMORIZED-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3711 (~G1508) (? ~G1508 ~G1508 (COMMON-LISP:PROGN (=-HREF X *MEMORIZED-NUMBERS* X))))) (G3711 (HREF *MEMORIZED-NUMBERS* X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MEMORIZED-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1508 (COMMON-LISP:CONS (COMMON-LISP:CONS 'HREF (COMMON-LISP:CONS '*MEMORIZED-NUMBERS* (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1508 (COMMON-LISP:CONS '~G1508 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-HREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '*MEMORIZED-NUMBERS* (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MEMORIZED-NUMBER))
(%DEFVAR *TERPRI* (STRING (CODE-CHAR 10)))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'TERPRI (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN TERPRI (COMMON-LISP:&OPTIONAL (STR *STANDARD-OUTPUT*)) (COMMON-LISP:BLOCK TERPRI (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3712 (~G1509) (COMMON-LISP:LABELS ((G3713 (S) (COMMON-LISP:LABELS ((G3714 (~G1510) (? ~G1509 ~G1510 (GET-STREAM-STRING S)))) (G3714 (COMMON-LISP:PROGN (STREAM-PRINC (CODE-CHAR 10) S) (FORCE-OUTPUT S) COMMON-LISP:NIL))))) (G3713 (DEFAULT-STREAM ~G1509))))) (G3712 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'TERPRI *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'TERPRI (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1509 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS '~G1509 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1510 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'CODE-CHAR (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FORCE-OUTPUT (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1509 (COMMON-LISP:CONS '~G1510 (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'TERPRI))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FRESH-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FRESH-LINE (COMMON-LISP:&OPTIONAL (STR *STANDARD-OUTPUT*)) (COMMON-LISP:BLOCK FRESH-LINE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3715 (~G1511) (COMMON-LISP:LABELS ((G3716 (S) (COMMON-LISP:LABELS ((G3717 (~G1512) (? ~G1511 ~G1512 (GET-STREAM-STRING S)))) (G3717 (COMMON-LISP:PROGN (? (NOT (FRESH-LINE? S)) (COMMON-LISP:PROGN (TERPRI S) COMMON-LISP:T))))))) (G3716 (DEFAULT-STREAM ~G1511))))) (G3715 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FRESH-LINE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FRESH-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1511 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS '~G1511 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1512 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRESH-LINE? (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'TERPRI (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1511 (COMMON-LISP:CONS '~G1512 (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FRESH-LINE))
(%DEFVAR *DEFAULT-STREAM-TABSIZE* 8)
(COMMON-LISP:PROGN COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STREAM-LOCATION (COMMON-LISP:&KEY (TRACK? 'TRACK?) (ID 'ID) (LINE 'LINE) (COLUMN 'COLUMN) (TABSIZE 'TABSIZE)) (COMMON-LISP:BLOCK MAKE-STREAM-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3718 (~G1513) (COMMON-LISP:PROGN (=-AREF 'STRUCT ~G1513 0) (=-AREF 'STREAM-LOCATION ~G1513 1)) (COMMON-LISP:PROGN (=-AREF (? (EQ TRACK? 'TRACK?) COMMON-LISP:T TRACK?) ~G1513 2)) (COMMON-LISP:PROGN (=-AREF (? (EQ ID 'ID) COMMON-LISP:NIL ID) ~G1513 3)) (COMMON-LISP:PROGN (=-AREF (? (EQ LINE 'LINE) 1 LINE) ~G1513 4)) (COMMON-LISP:PROGN (=-AREF (? (EQ COLUMN 'COLUMN) 1 COLUMN) ~G1513 5)) (COMMON-LISP:PROGN (=-AREF (? (EQ TABSIZE 'TABSIZE) *DEFAULT-STREAM-TABSIZE* TABSIZE) ~G1513 6)) ~G1513)) (G3718 (MAKE-ARRAY 7)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STREAM-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1513 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1513 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1513 (COMMON-LISP:CONS 1 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1513 (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1513 (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1513 (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1513 (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS '*DEFAULT-STREAM-TABSIZE* (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1513 (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1513 COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-ARRAY (COMMON-LISP:CONS 7 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STREAM-LOCATION)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION? (X) (COMMON-LISP:BLOCK STREAM-LOCATION? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (ARRAY? X) (? (EQ 'STRUCT (COMMON-LISP:AREF X 0)) (EQ 'STREAM-LOCATION (COMMON-LISP:AREF X 1))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION?)) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-TRACK? (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-TRACK? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 2)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-TRACK? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-TRACK?)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-TRACK? (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-TRACK? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-TRACK? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-TRACK?))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-ID COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-ID (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-ID (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 3)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-ID *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-ID)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-ID (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-ID (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 3))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-ID *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-ID))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-LINE COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-LINE (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-LINE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 4)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-LINE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-LINE)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-LINE (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-LINE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 4))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-LINE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-LINE))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-COLUMN (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-COLUMN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 5)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-COLUMN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-COLUMN)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-COLUMN (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-COLUMN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 5))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-COLUMN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-COLUMN))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-TABSIZE (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-TABSIZE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 6)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-TABSIZE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-TABSIZE)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-TABSIZE (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-TABSIZE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 6))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-TABSIZE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-TABSIZE))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO WITH-STREAM-LOCATION (S COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK WITH-STREAM-LOCATION (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS S (APPEND BODY COMMON-LISP:NIL))))))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO DEF-STREAM-LOCATION (NAME ARGS COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK DEF-STREAM-LOCATION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS NAME (COMMON-LISP:CONS ARGS (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'STREAM-LOCATION (APPEND BODY COMMON-LISP:NIL)))) COMMON-LISP:NIL))))))))
(COMMON-LISP:PROGN COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STREAM (COMMON-LISP:&KEY (HANDLE 'HANDLE) (FUN-IN 'FUN-IN) (FUN-OUT 'FUN-OUT) (FUN-EOF 'FUN-EOF) (LAST-CHAR 'LAST-CHAR) (PEEKED-CHAR 'PEEKED-CHAR) (INPUT-LOCATION 'INPUT-LOCATION) (OUTPUT-LOCATION 'OUTPUT-LOCATION) (USER-DETAIL 'USER-DETAIL)) (COMMON-LISP:BLOCK MAKE-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3719 (~G1514) (COMMON-LISP:PROGN (=-AREF 'STRUCT ~G1514 0) (=-AREF 'STREAM ~G1514 1)) (COMMON-LISP:PROGN (=-AREF (? (EQ HANDLE 'HANDLE) COMMON-LISP:NIL HANDLE) ~G1514 2)) (COMMON-LISP:PROGN (=-AREF (? (EQ FUN-IN 'FUN-IN) COMMON-LISP:NIL FUN-IN) ~G1514 3)) (COMMON-LISP:PROGN (=-AREF (? (EQ FUN-OUT 'FUN-OUT) COMMON-LISP:NIL FUN-OUT) ~G1514 4)) (COMMON-LISP:PROGN (=-AREF (? (EQ FUN-EOF 'FUN-EOF) COMMON-LISP:NIL FUN-EOF) ~G1514 5)) (COMMON-LISP:PROGN (=-AREF (? (EQ LAST-CHAR 'LAST-CHAR) COMMON-LISP:NIL LAST-CHAR) ~G1514 6)) (COMMON-LISP:PROGN (=-AREF (? (EQ PEEKED-CHAR 'PEEKED-CHAR) COMMON-LISP:NIL PEEKED-CHAR) ~G1514 7)) (COMMON-LISP:PROGN (=-AREF (? (EQ INPUT-LOCATION 'INPUT-LOCATION) (MAKE-STREAM-LOCATION) INPUT-LOCATION) ~G1514 8)) (COMMON-LISP:PROGN (=-AREF (? (EQ OUTPUT-LOCATION 'OUTPUT-LOCATION) (MAKE-STREAM-LOCATION :TRACK? COMMON-LISP:NIL) OUTPUT-LOCATION) ~G1514 9)) (COMMON-LISP:PROGN (=-AREF (? (EQ USER-DETAIL 'USER-DETAIL) COMMON-LISP:NIL USER-DETAIL) ~G1514 10)) ~G1514)) (G3719 (MAKE-ARRAY 11)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1514 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 1 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 7 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION COMMON-LISP:NIL) (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 8 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':TRACK? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 9 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1514 (COMMON-LISP:CONS 10 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1514 COMMON-LISP:NIL)))))))))))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-ARRAY (COMMON-LISP:CONS 11 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STREAM)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM? (X) (COMMON-LISP:BLOCK STREAM? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (ARRAY? X) (? (EQ 'STRUCT (COMMON-LISP:AREF X 0)) (EQ 'STREAM (COMMON-LISP:AREF X 1))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM?)) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-HANDLE COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-HANDLE (ARR) (COMMON-LISP:BLOCK STREAM-HANDLE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 2)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-HANDLE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-HANDLE)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-HANDLE (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-HANDLE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-HANDLE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-HANDLE))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-FUN-IN COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-FUN-IN (ARR) (COMMON-LISP:BLOCK STREAM-FUN-IN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 3)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-FUN-IN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-FUN-IN)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-FUN-IN (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-FUN-IN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 3))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-FUN-IN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-FUN-IN))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-FUN-OUT COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-FUN-OUT (ARR) (COMMON-LISP:BLOCK STREAM-FUN-OUT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 4)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-FUN-OUT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-FUN-OUT)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-FUN-OUT (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-FUN-OUT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 4))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-FUN-OUT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-FUN-OUT))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-FUN-EOF COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-FUN-EOF (ARR) (COMMON-LISP:BLOCK STREAM-FUN-EOF (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 5)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-FUN-EOF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-FUN-EOF)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-FUN-EOF (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-FUN-EOF (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 5))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-FUN-EOF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-FUN-EOF))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LAST-CHAR COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LAST-CHAR (ARR) (COMMON-LISP:BLOCK STREAM-LAST-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 6)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LAST-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LAST-CHAR)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LAST-CHAR (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LAST-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 6))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LAST-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LAST-CHAR))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-PEEKED-CHAR (ARR) (COMMON-LISP:BLOCK STREAM-PEEKED-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 7)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-PEEKED-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 7 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-PEEKED-CHAR)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-PEEKED-CHAR (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-PEEKED-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 7))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-PEEKED-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 7 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-PEEKED-CHAR))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-INPUT-LOCATION (ARR) (COMMON-LISP:BLOCK STREAM-INPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 8)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-INPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 8 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-INPUT-LOCATION)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-INPUT-LOCATION (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-INPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 8))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-INPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 8 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-INPUT-LOCATION))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-OUTPUT-LOCATION (ARR) (COMMON-LISP:BLOCK STREAM-OUTPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 9)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-OUTPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 9 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-OUTPUT-LOCATION)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-OUTPUT-LOCATION (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-OUTPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 9))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-OUTPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 9 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-OUTPUT-LOCATION))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-USER-DETAIL COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-USER-DETAIL (ARR) (COMMON-LISP:BLOCK STREAM-USER-DETAIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 10)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-USER-DETAIL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-USER-DETAIL)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-USER-DETAIL (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-USER-DETAIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 10))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-USER-DETAIL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 10 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-USER-DETAIL))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO WITH-STREAM (S COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK WITH-STREAM (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS S (APPEND BODY COMMON-LISP:NIL))))))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO DEF-STREAM (NAME ARGS COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK DEF-STREAM (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS NAME (COMMON-LISP:CONS ARGS (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS 'STREAM (APPEND BODY COMMON-LISP:NIL)))) COMMON-LISP:NIL))))))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NEXT-TABULATOR-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'SIZE COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NEXT-TABULATOR-COLUMN (COLUMN SIZE) (COMMON-LISP:BLOCK NEXT-TABULATOR-COLUMN (COMMON-LISP:BLOCK COMMON-LISP:NIL (++ (* SIZE (++ (INTEGER (/ (-- COLUMN) SIZE)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NEXT-TABULATOR-COLUMN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'SIZE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NEXT-TABULATOR-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'SIZE (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS '/ (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SIZE COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NEXT-TABULATOR-COLUMN))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %TRACK-LOCATION (STREAM-LOCATION X) (COMMON-LISP:BLOCK %TRACK-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3720 (STREAM-LOCATION) (COMMON-LISP:LABELS ((G3721 (TRACK?) (COMMON-LISP:LABELS ((G3722 (ID) (COMMON-LISP:LABELS ((G3723 (LINE) (COMMON-LISP:LABELS ((G3724 (COLUMN) (COMMON-LISP:LABELS ((G3725 (TABSIZE) TRACK? ID LINE COLUMN TABSIZE (? TRACK? (COMMON-LISP:PROGN (? (STRING? X) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3726 (~G1517) (COMMON-LISP:LABELS ((G3727 (!) (COMMON-LISP:TAGBODY ~G1515 (? (NOT ~G1517) (COMMON-LISP:GO ~G1516)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1517)) (%TRACK-LOCATION STREAM-LOCATION !) (COMMON-LISP:SETQ ~G1517 (COMMON-LISP:CDR ~G1517)) (COMMON-LISP:GO ~G1515) ~G1516 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))))) (G3727 COMMON-LISP:NIL)))) (G3726 (STRING-LIST X)))) (? X (COMMON-LISP:PROGN (? (== 10 X) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-LOCATION-COLUMN 1 STREAM-LOCATION)) (COMMON-LISP:PROGN (=-STREAM-LOCATION-LINE (NUMBER+ (STREAM-LOCATION-LINE STREAM-LOCATION) 1) STREAM-LOCATION))) (? (== 9 X) (COMMON-LISP:PROGN (=-STREAM-LOCATION-COLUMN (NEXT-TABULATOR-COLUMN COLUMN TABSIZE) STREAM-LOCATION)) (< 31 X) (COMMON-LISP:PROGN (=-STREAM-LOCATION-COLUMN (NUMBER+ (STREAM-LOCATION-COLUMN STREAM-LOCATION) 1) STREAM-LOCATION))))))))) X)) (G3725 (STREAM-LOCATION-TABSIZE STREAM-LOCATION))))) (G3724 (STREAM-LOCATION-COLUMN STREAM-LOCATION))))) (G3723 (STREAM-LOCATION-LINE STREAM-LOCATION))))) (G3722 (STREAM-LOCATION-ID STREAM-LOCATION))))) (G3721 (STREAM-LOCATION-TRACK? STREAM-LOCATION))))) (G3720 STREAM-LOCATION))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%TRACK-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))) (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1517 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1515 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1517 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1516 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1517 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1517 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1517 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1515 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1516 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 10 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 9 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'NEXT-TABULATOR-COLUMN (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 31 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))))))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%TRACK-LOCATION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-PRINC (X STR) (COMMON-LISP:BLOCK STREAM-PRINC (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (CONS? X) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3728 (~G1520) (COMMON-LISP:LABELS ((G3729 (!) (COMMON-LISP:TAGBODY ~G1518 (? (NOT ~G1520) (COMMON-LISP:GO ~G1519)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1520)) (STREAM-PRINC ! STR) (COMMON-LISP:SETQ ~G1520 (COMMON-LISP:CDR ~G1520)) (COMMON-LISP:GO ~G1518) ~G1519 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN X))))) (G3729 COMMON-LISP:NIL)))) (G3728 X))) (? (NOT (? (STRING? X) (ZERO? (COMMON-LISP:LENGTH X)))) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-LAST-CHAR (? (STRING? X) (COMMON-LISP:ELT X (-- (COMMON-LISP:LENGTH X))) X) STR)) (%TRACK-LOCATION (STREAM-OUTPUT-LOCATION STR) X) (FUNCALL (STREAM-FUN-OUT STR) X STR))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-PRINC *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1520 (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1518 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1520 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1519 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1520 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1520 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1520 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1518 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1519 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-FUN-OUT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-PRINC))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-PEEKED-CHAR (STR) (COMMON-LISP:BLOCK READ-PEEKED-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3730 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-PEEKED-CHAR COMMON-LISP:NIL STR)) !)))) (G3730 (STREAM-PEEKED-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-PEEKED-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-PEEKED-CHAR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CHAR-0 (STR) (COMMON-LISP:BLOCK READ-CHAR-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3731 (~G1521) (? ~G1521 ~G1521 (COMMON-LISP:PROGN (=-STREAM-LAST-CHAR (FUNCALL (STREAM-FUN-IN STR) STR) STR))))) (G3731 (READ-PEEKED-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CHAR-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1521 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1521 (COMMON-LISP:CONS '~G1521 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-FUN-IN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-PEEKED-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CHAR-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CHAR (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (%TRACK-LOCATION (STREAM-INPUT-LOCATION STR) (READ-CHAR-0 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CHAR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PEEK-CHAR (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK PEEK-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3732 (~G1522) (? ~G1522 ~G1522 (COMMON-LISP:PROGN (=-STREAM-PEEKED-CHAR (READ-CHAR-0 STR) STR))))) (G3732 (STREAM-PEEKED-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PEEK-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1522 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1522 (COMMON-LISP:CONS '~G1522 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PEEK-CHAR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DEFAULT-STREAM (X) (COMMON-LISP:BLOCK DEFAULT-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3733 (~G1523) (? (EQ ~G1523 COMMON-LISP:NIL) (MAKE-STRING-STREAM) (EQ ~G1523 COMMON-LISP:T) *STANDARD-OUTPUT* X))) (G3733 X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DEFAULT-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1523 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1523 (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STRING-STREAM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1523 (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))) (COMMON-LISP:CONS '*STANDARD-OUTPUT* (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DEFAULT-STREAM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO WITH-DEFAULT-STREAM (NSTR STR COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK WITH-DEFAULT-STREAM (COMMON-LISP:LABELS ((G3734 (G) (COMMON-LISP:LABELS ((G3735 (BODY-RESULT) (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS G (COMMON-LISP:CONS STR (COMMON-LISP:CONS NSTR (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS G COMMON-LISP:NIL)) (COMMON-LISP:CONS BODY-RESULT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (APPEND BODY COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS G (COMMON-LISP:CONS BODY-RESULT (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS NSTR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))))) (G3735 (GENSYM))))) (G3734 (GENSYM))))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STRING-STREAM (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STRING-STREAM COMMON-LISP:NIL (COMMON-LISP:BLOCK MAKE-STRING-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (MAKE-STREAM :USER-DETAIL (MAKE-QUEUE) :FUN-IN #'(COMMON-LISP:LAMBDA (STR) (COMMON-LISP:LABELS ((G3736 (!) (? (STRING? (COMMON-LISP:CAR !)) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-USER-DETAIL (MAKE-QUEUE) STR)) (ENQUEUE-LIST (STREAM-USER-DETAIL STR) (APPEND (STRING-LIST (COMMON-LISP:CAR !)) (COMMON-LISP:CDR !))))))) (G3736 (QUEUE-LIST (STREAM-USER-DETAIL STR)))) (QUEUE-POP (STREAM-USER-DETAIL STR))) :FUN-OUT #'(COMMON-LISP:LAMBDA (X STR) (ENQUEUE (STREAM-USER-DETAIL STR) X)) :FUN-EOF #'(COMMON-LISP:LAMBDA (STR) (NOT (QUEUE-LIST (STREAM-USER-DETAIL STR)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STRING-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STRING-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS ':USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-QUEUE COMMON-LISP:NIL) (COMMON-LISP:CONS ':FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-QUEUE COMMON-LISP:NIL) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ENQUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'APPEND (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-POP (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ENQUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STRING-STREAM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-STREAM-STRING (STR) (COMMON-LISP:BLOCK GET-STREAM-STRING (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3737 (~G1524) (COMMON-LISP:PROGN (=-STREAM-USER-DETAIL (MAKE-QUEUE) STR)) ~G1524)) (G3737 (QUEUE-STRING (STREAM-USER-DETAIL STR))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-STREAM-STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1524 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-QUEUE COMMON-LISP:NIL) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1524 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-STREAM-STRING))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STREAM-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION COMMON-LISP:NIL) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':TRACK? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STREAM-STREAM (COMMON-LISP:&KEY STREAM (INPUT-LOCATION (MAKE-STREAM-LOCATION)) (OUTPUT-LOCATION (MAKE-STREAM-LOCATION :TRACK? COMMON-LISP:NIL))) (COMMON-LISP:BLOCK MAKE-STREAM-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (MAKE-STREAM :HANDLE STREAM :INPUT-LOCATION INPUT-LOCATION :OUTPUT-LOCATION OUTPUT-LOCATION :FUN-IN #'(COMMON-LISP:LAMBDA (_) (%READ-CHAR (STREAM-HANDLE _))) :FUN-OUT #'(COMMON-LISP:LAMBDA (C STR) (%PRINC C (STREAM-HANDLE STR))) :FUN-EOF #'(COMMON-LISP:LAMBDA (_) (%FEOF (STREAM-HANDLE _))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STREAM-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION COMMON-LISP:NIL) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':TRACK? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STREAM-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS ':HANDLE (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS ':INPUT-LOCATION (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS ':OUTPUT-LOCATION (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS ':FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%READ-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%PRINC (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%FEOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STREAM-STREAM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%FOPEN-DIRECTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %FOPEN-DIRECTION (DIRECTION) (COMMON-LISP:BLOCK %FOPEN-DIRECTION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3738 (~G1525) (? (EQUAL ~G1525 'INPUT) "r" (EQUAL ~G1525 'OUTPUT) "w" (EQUAL ~G1525 'APPEND) "a" (ERROR ":DIRECTION isn't specified.")))) (G3738 DIRECTION))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%FOPEN-DIRECTION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%FOPEN-DIRECTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1525 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS '~G1525 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS "r" (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS '~G1525 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS "w" (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS '~G1525 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'APPEND COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS "a" (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS ":DIRECTION isn't specified." COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%FOPEN-DIRECTION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'OPEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATH (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN OPEN (PATH COMMON-LISP:&KEY DIRECTION) (COMMON-LISP:BLOCK OPEN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3739 (!) (? ! (MAKE-STREAM-STREAM :STREAM ! :INPUT-LOCATION (MAKE-STREAM-LOCATION :ID PATH)) (ERROR "Couldn't open file `~A'." PATH)))) (G3739 (%FOPEN PATH (%FOPEN-DIRECTION DIRECTION))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'OPEN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATH (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'OPEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS '%FOPEN (COMMON-LISP:CONS 'PATH (COMMON-LISP:CONS (COMMON-LISP:CONS '%FOPEN-DIRECTION (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-STREAM (COMMON-LISP:CONS ':STREAM (COMMON-LISP:CONS '! (COMMON-LISP:CONS ':INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':ID (COMMON-LISP:CONS 'PATH COMMON-LISP:NIL))) COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Couldn't open file `~A'." (COMMON-LISP:CONS 'PATH COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'OPEN))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CLOSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CLOSE (STR) (COMMON-LISP:BLOCK CLOSE (COMMON-LISP:BLOCK COMMON-LISP:NIL (%FCLOSE (STREAM-HANDLE STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CLOSE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CLOSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '%FCLOSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CLOSE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER-DIGIT (X) (COMMON-LISP:BLOCK NUMBER-DIGIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (CODE-CHAR (+ X #\0))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER-DIGIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'CODE-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\0 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NUMBER-DIGIT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER-CHARS-0 (X) (COMMON-LISP:BLOCK INTEGER-CHARS-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3740 (!) (COMMON-LISP:CONS (NUMBER-DIGIT !) (? (<= 10 X) (INTEGER-CHARS-0 (/ (- X !) 10)))))) (G3740 (INTEGER (COMMON-LISP:MOD X 10))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER-CHARS-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 10 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS '/ (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER-CHARS-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER-CHARS (X) (COMMON-LISP:BLOCK INTEGER-CHARS (COMMON-LISP:BLOCK COMMON-LISP:NIL (REVERSE (INTEGER-CHARS-0 (INTEGER (ABS X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER-CHARS *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'REVERSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'ABS (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER-CHARS))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FRACTION-CHARS-0 (X) (COMMON-LISP:BLOCK FRACTION-CHARS-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3741 (!) (? (< 0 !) (COMMON-LISP:CONS (NUMBER-DIGIT !) (FRACTION-CHARS-0 !))))) (G3741 (COMMON-LISP:MOD (* X 10) 10)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FRACTION-CHARS-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FRACTION-CHARS-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FRACTION-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FRACTION-CHARS (X) (COMMON-LISP:BLOCK FRACTION-CHARS (COMMON-LISP:BLOCK COMMON-LISP:NIL (FRACTION-CHARS-0 (COMMON-LISP:MOD (ABS X) 1))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FRACTION-CHARS *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FRACTION-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS (COMMON-LISP:CONS 'ABS (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FRACTION-CHARS))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PRINC-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PRINC-NUMBER (X STR) (COMMON-LISP:BLOCK PRINC-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< X 0) (PRINC #\- STR)) (STREAM-PRINC (INTEGER-CHARS X) STR) (COMMON-LISP:LABELS ((G3742 (!) (? (NOT (ZERO? !)) (COMMON-LISP:PROGN (PRINC #\. STR) (STREAM-PRINC (FRACTION-CHARS !) STR))))) (G3742 (COMMON-LISP:MOD X 1)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PRINC-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PRINC-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS #\- (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER-CHARS (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS #\. (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRACTION-CHARS (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PRINC-NUMBER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PRINC (X COMMON-LISP:&OPTIONAL (STR *STANDARD-OUTPUT*)) (COMMON-LISP:BLOCK PRINC (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3743 (~G1526) (COMMON-LISP:LABELS ((G3744 (S) (COMMON-LISP:LABELS ((G3745 (~G1527) (? ~G1526 ~G1527 (GET-STREAM-STRING S)))) (G3745 (COMMON-LISP:PROGN (? (STRING? X) (STREAM-PRINC X S) (CHARACTER? X) (STREAM-PRINC X S) (NUMBER? X) (PRINC-NUMBER X S) (SYMBOL? X) (STREAM-PRINC (SYMBOL-NAME X) S)) X))))) (G3744 (DEFAULT-STREAM ~G1526))))) (G3743 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PRINC *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1526 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS '~G1526 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1527 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC-NUMBER (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1526 (COMMON-LISP:CONS '~G1527 (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PRINC))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SPLIT-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SPLIT-IF (PREDICATE SEQ COMMON-LISP:&KEY (INCLUDE? COMMON-LISP:NIL)) (COMMON-LISP:BLOCK SPLIT-IF (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (COMMON-LISP:LABELS ((G3746 (!) (? ! (COMMON-LISP:CONS (SUBSEQ SEQ 0 (? INCLUDE? (++ !) !)) (SPLIT-IF PREDICATE (SUBSEQ SEQ (++ !)) :INCLUDE? INCLUDE?)) (COMMON-LISP:LIST SEQ)))) (G3746 (POSITION-IF PREDICATE SEQ))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SPLIT-IF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SPLIT-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'POSITION-IF (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPLIT-IF (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS ':INCLUDE? (COMMON-LISP:CONS 'INCLUDE? COMMON-LISP:NIL))))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SPLIT-IF))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GENERIC-SPLIT (OBJ SEQ COMMON-LISP:&KEY (TEST #'EQL) (INCLUDE? COMMON-LISP:NIL)) (COMMON-LISP:BLOCK GENERIC-SPLIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (COMMON-LISP:LABELS ((G3747 (!) (? ! (COMMON-LISP:CONS (SUBSEQ SEQ 0 (? INCLUDE? (++ !) !)) (GENERIC-SPLIT OBJ (SUBSEQ SEQ (++ !)) :TEST TEST :INCLUDE? INCLUDE?)) (COMMON-LISP:LIST SEQ)))) (G3747 (POSITION OBJ SEQ :TEST TEST))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GENERIC-SPLIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS ':INCLUDE? (COMMON-LISP:CONS 'INCLUDE? COMMON-LISP:NIL))))))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GENERIC-SPLIT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SPLIT (OBJ SEQ COMMON-LISP:&KEY (TEST #'EQL) (INCLUDE? COMMON-LISP:NIL)) (COMMON-LISP:BLOCK SPLIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (GENERIC-SPLIT OBJ SEQ :TEST TEST :INCLUDE? INCLUDE?)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SPLIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS ':INCLUDE? (COMMON-LISP:CONS 'INCLUDE? COMMON-LISP:NIL))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SPLIT))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'DIGIT-NUMBER COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DIGIT-NUMBER (X) (COMMON-LISP:BLOCK DIGIT-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (- X #\0)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DIGIT-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DIGIT-NUMBER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PEEK-DIGIT (STR) (COMMON-LISP:BLOCK PEEK-DIGIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3748 (!) (? ! (COMMON-LISP:PROGN (? (DIGIT-CHAR? !) !))))) (G3748 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PEEK-DIGIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PEEK-DIGIT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PEEK-DOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PEEK-DOT (STR) (COMMON-LISP:BLOCK PEEK-DOT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3749 (!) (? ! (COMMON-LISP:PROGN (== #\. !))))) (G3749 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PEEK-DOT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PEEK-DOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PEEK-DOT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-DECIMAL-PLACES-0 (STR V S) (COMMON-LISP:BLOCK READ-DECIMAL-PLACES-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-DIGIT STR) (READ-DECIMAL-PLACES-0 STR (+ V (* S (DIGIT-NUMBER (READ-CHAR STR)))) (/ S 10)) V)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-DECIMAL-PLACES-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'V (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '/ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS 'V COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-DECIMAL-PLACES-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-DECIMAL-PLACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-DECIMAL-PLACES (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-DECIMAL-PLACES (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:LABELS ((G3750 (!) (? ! (DIGIT-CHAR? !)))) (G3750 (PEEK-CHAR STR))) (READ-DECIMAL-PLACES-0 STR 0 0.1))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-DECIMAL-PLACES *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-DECIMAL-PLACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 0.1 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-DECIMAL-PLACES))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-INTEGER-0 (STR V) (COMMON-LISP:BLOCK READ-INTEGER-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-DIGIT STR) (READ-INTEGER-0 STR (+ (* V 10) (DIGIT-NUMBER (READ-CHAR STR)))) V)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-INTEGER-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'V (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'V COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-INTEGER-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-INTEGER (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-INTEGER (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-DIGIT STR) (INTEGER (READ-INTEGER-0 STR 0)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-INTEGER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-INTEGER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-NUMBER (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (* (? (== #\- (PEEK-CHAR STR)) (COMMON-LISP:PROGN (READ-CHAR STR) -1) 1) (+ (READ-INTEGER STR) (COMMON-LISP:LABELS ((G3751 (~G1528) (? ~G1528 ~G1528 0))) (G3751 (? (PEEK-DOT STR) (? (READ-CHAR STR) (READ-DECIMAL-PLACES STR)))))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\- (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS -1 COMMON-LISP:NIL))) (COMMON-LISP:CONS 1 COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-INTEGER (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1528 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1528 (COMMON-LISP:CONS '~G1528 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-DECIMAL-PLACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-NUMBER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN TOKEN-IS-QUOTE? (X) (COMMON-LISP:BLOCK TOKEN-IS-QUOTE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3752 (~G1557) (? ~G1557 ~G1557 (COMMON-LISP:LABELS ((G3753 (~G1558) (? ~G1558 ~G1558 (COMMON-LISP:LABELS ((G3754 (~G1559) (? ~G1559 ~G1559 (COMMON-LISP:LABELS ((G3755 (~G1560) (? ~G1560 ~G1560 (EQ X 'ACCENT-CIRCONFLEX)))) (G3755 (EQ X 'QUASIQUOTE-SPLICE)))))) (G3754 (EQ X 'QUASIQUOTE)))))) (G3753 (EQ X 'BACKQUOTE)))))) (G3752 (EQ X 'COMMON-LISP:QUOTE)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'TOKEN-IS-QUOTE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1557 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:QUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1557 (COMMON-LISP:CONS '~G1557 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1558 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BACKQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1558 (COMMON-LISP:CONS '~G1558 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1559 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1559 (COMMON-LISP:CONS '~G1559 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1560 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1560 (COMMON-LISP:CONS '~G1560 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ACCENT-CIRCONFLEX COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'TOKEN-IS-QUOTE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %READ-CLOSING-BRACKET? (X) (COMMON-LISP:BLOCK %READ-CLOSING-BRACKET? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3756 (~G1561) (? ~G1561 ~G1561 (COMMON-LISP:LABELS ((G3757 (~G1562) (? ~G1562 ~G1562 (EQ X 'CURLY-BRACKET-CLOSE)))) (G3757 (EQ X 'SQUARE-BRACKET-CLOSE)))))) (G3756 (EQ X 'BRACKET-CLOSE)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%READ-CLOSING-BRACKET? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1561 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-CLOSE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1561 (COMMON-LISP:CONS '~G1561 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1562 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-CLOSE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1562 (COMMON-LISP:CONS '~G1562 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-CLOSE COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%READ-CLOSING-BRACKET?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SPECIAL-CHAR? (X) (COMMON-LISP:BLOCK SPECIAL-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3758 (~G1563) (? ~G1563 ~G1563 (COMMON-LISP:LABELS ((G3759 (~G1564) (? ~G1564 ~G1564 (COMMON-LISP:LABELS ((G3760 (~G1565) (? ~G1565 ~G1565 (COMMON-LISP:LABELS ((G3761 (~G1566) (? ~G1566 ~G1566 (COMMON-LISP:LABELS ((G3762 (~G1567) (? ~G1567 ~G1567 (COMMON-LISP:LABELS ((G3763 (~G1568) (? ~G1568 ~G1568 (COMMON-LISP:LABELS ((G3764 (~G1569) (? ~G1569 ~G1569 (COMMON-LISP:LABELS ((G3765 (~G1570) (? ~G1570 ~G1570 (COMMON-LISP:LABELS ((G3766 (~G1571) (? ~G1571 ~G1571 (COMMON-LISP:LABELS ((G3767 (~G1572) (? ~G1572 ~G1572 (COMMON-LISP:LABELS ((G3768 (~G1573) (? ~G1573 ~G1573 (COMMON-LISP:LABELS ((G3769 (~G1574) (? ~G1574 ~G1574 (COMMON-LISP:LABELS ((G3770 (~G1575) (? ~G1575 ~G1575 (== X #\^)))) (G3770 (== X #\#)))))) (G3769 (== X #\")))))) (G3768 (== X #\;)))))) (G3767 (== X #\:)))))) (G3766 (== X #\,)))))) (G3765 (== X #\`)))))) (G3764 (== X #\')))))) (G3763 (== X #\})))))) (G3762 (== X #\{)))))) (G3761 (== X #\])))))) (G3760 (== X #\[)))))) (G3759 (== X #\))))))) (G3758 (== X #\()))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SPECIAL-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1563 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\( COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1563 (COMMON-LISP:CONS '~G1563 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1564 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1564 (COMMON-LISP:CONS '~G1564 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1565 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\[ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1565 (COMMON-LISP:CONS '~G1565 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1566 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\] COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1566 (COMMON-LISP:CONS '~G1566 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1567 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\{ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1567 (COMMON-LISP:CONS '~G1567 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1568 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\} COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1568 (COMMON-LISP:CONS '~G1568 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1569 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\' COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1569 (COMMON-LISP:CONS '~G1569 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1570 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\` COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1570 (COMMON-LISP:CONS '~G1570 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1571 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\, COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1571 (COMMON-LISP:CONS '~G1571 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1572 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\: COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1572 (COMMON-LISP:CONS '~G1572 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1573 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\; COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1573 (COMMON-LISP:CONS '~G1573 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1574 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\" COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1574 (COMMON-LISP:CONS '~G1574 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1575 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\# COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1575 (COMMON-LISP:CONS '~G1575 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\^ COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SPECIAL-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SYMBOL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-CHAR? (X) (COMMON-LISP:BLOCK SYMBOL-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (> X 32) (NOT (SPECIAL-CHAR? X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SYMBOL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 32 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SYMBOL-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SKIP-COMMENT (STR) (COMMON-LISP:BLOCK SKIP-COMMENT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3771 (C) (? C (COMMON-LISP:PROGN (? (== C 10) (SKIP-SPACES STR) (SKIP-COMMENT STR)))))) (G3771 (READ-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SKIP-COMMENT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SKIP-COMMENT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SKIP-SPACES (STR) (COMMON-LISP:BLOCK SKIP-SPACES (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3772 (C) (? C (COMMON-LISP:PROGN (? (== #\; C) (COMMON-LISP:PROGN (SKIP-COMMENT STR))) (? (WHITESPACE? C) (COMMON-LISP:PROGN (READ-CHAR STR) (SKIP-SPACES STR))))))) (G3772 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SKIP-SPACES *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\; (COMMON-LISP:CONS 'C COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'WHITESPACE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SKIP-SPACES))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-SYMBOL-0 (STR) (COMMON-LISP:BLOCK GET-SYMBOL-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3773 (C) (? (== #\; C) (COMMON-LISP:PROGN (SKIP-COMMENT STR) (GET-SYMBOL-0 STR)) (? (SYMBOL-CHAR? C) (COMMON-LISP:CONS (CHAR-UPCASE (READ-CHAR STR)) (GET-SYMBOL-0 STR)))))) (G3773 (CHAR-UPCASE (PEEK-CHAR STR))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-SYMBOL-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\; (COMMON-LISP:CONS 'C COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-SYMBOL-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-SYMBOL (STR) (COMMON-LISP:BLOCK GET-SYMBOL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3774 (C) (? C (COMMON-LISP:PROGN (? (NOT (SPECIAL-CHAR? C)) (COMMON-LISP:PROGN (GET-SYMBOL-0 STR))))))) (G3774 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-SYMBOL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-SYMBOL))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-SYMBOL-AND-PACKAGE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-SYMBOL-AND-PACKAGE (STR) (COMMON-LISP:BLOCK GET-SYMBOL-AND-PACKAGE (COMMON-LISP:BLOCK COMMON-LISP:NIL (SKIP-SPACES STR) (COMMON-LISP:LABELS ((G3775 (SYM) (COMMON-LISP:LABELS ((G3776 (!) (? ! (COMMON-LISP:PROGN (? (== ! #\:) (VALUES (COMMON-LISP:LABELS ((G3777 (~G1529) (? ~G1529 ~G1529 COMMON-LISP:T))) (G3777 SYM)) (? (READ-CHAR STR) (GET-SYMBOL STR))) (VALUES COMMON-LISP:NIL SYM)))))) (G3776 (PEEK-CHAR STR))))) (G3775 (GET-SYMBOL STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-SYMBOL-AND-PACKAGE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-SYMBOL-AND-PACKAGE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS '! (COMMON-LISP:CONS #\: COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1529 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1529 (COMMON-LISP:CONS '~G1529 (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-SYMBOL-AND-PACKAGE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-STRING-0 (STR) (COMMON-LISP:BLOCK READ-STRING-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3778 (C) (? (NOT (== C #\")) (COMMON-LISP:PROGN (COMMON-LISP:CONS (? (== C #\\) (READ-CHAR STR) C) (READ-STRING-0 STR)))))) (G3778 (READ-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-STRING-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\" COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\\ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'C COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-STRING-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-STRING (STR) (COMMON-LISP:BLOCK READ-STRING (COMMON-LISP:BLOCK COMMON-LISP:NIL (LIST-STRING (READ-STRING-0 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-STRING))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-COMMENT-BLOCK (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-COMMENT-BLOCK (STR) (COMMON-LISP:BLOCK READ-COMMENT-BLOCK (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (COMMON-LISP:TAGBODY ~G1576 (? (NOT (NOT (? (== #\| (READ-CHAR STR)) (== #\# (PEEK-CHAR STR))))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN (READ-CHAR STR)))) COMMON-LISP:NIL (COMMON-LISP:GO ~G1576))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-COMMENT-BLOCK *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-COMMENT-BLOCK (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1576 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\| (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\# (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1576 COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-COMMENT-BLOCK))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LIST-NUMBER? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LIST-NUMBER? (X) (COMMON-LISP:BLOCK LIST-NUMBER? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:LABELS ((G3779 (~G1531) (? ~G1531 ~G1531 (DIGIT-CHAR? (COMMON-LISP:CAR X))))) (G3779 (? (COMMON-LISP:CDR X) (COMMON-LISP:LABELS ((G3780 (~G1530) (? ~G1530 ~G1530 (== #\. (COMMON-LISP:CAR X))))) (G3780 (== #\- (COMMON-LISP:CAR X))))))) (? (COMMON-LISP:CDR X) (EVERY #'(COMMON-LISP:LAMBDA (_) (COMMON-LISP:LABELS ((G3781 (~G1597) (? ~G1597 ~G1597 (== #\. _)))) (G3781 (DIGIT-CHAR? _)))) (COMMON-LISP:CDR X)) COMMON-LISP:T))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LIST-NUMBER? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LIST-NUMBER? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1531 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1531 (COMMON-LISP:CONS '~G1531 (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1530 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1530 (COMMON-LISP:CONS '~G1530 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\- (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS '_ COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LIST-NUMBER?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-TOKEN (STR) (COMMON-LISP:BLOCK READ-TOKEN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3782 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3783 (~G1577) (COMMON-LISP:LABELS ((G3784 (~G1578) (? (NOT (EQ (COMMON-LISP:CAR ~G1577) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1577))) (COMMON-LISP:LABELS ((G3785 (PKG) (COMMON-LISP:LABELS ((G3786 (~G1579) (COMMON-LISP:LABELS ((G3787 (SYM) (VALUES (? (? SYM (? (NOT (COMMON-LISP:CDR SYM)) (== #\. (COMMON-LISP:CAR SYM)))) 'DOT (? SYM (? (LIST-NUMBER? SYM) 'NUMBER 'SYMBOL) (COMMON-LISP:LABELS ((G3788 (~G1533) (? (CHARACTER== ~G1533 #\() 'BRACKET-OPEN (CHARACTER== ~G1533 #\)) 'BRACKET-CLOSE (CHARACTER== ~G1533 #\[) 'SQUARE-BRACKET-OPEN (CHARACTER== ~G1533 #\]) 'SQUARE-BRACKET-CLOSE (CHARACTER== ~G1533 #\{) 'CURLY-BRACKET-OPEN (CHARACTER== ~G1533 #\}) 'CURLY-BRACKET-CLOSE (CHARACTER== ~G1533 #\') 'COMMON-LISP:QUOTE (CHARACTER== ~G1533 #\`) 'BACKQUOTE (CHARACTER== ~G1533 #\^) 'ACCENT-CIRCONFLEX (CHARACTER== ~G1533 #\") 'DBLQUOTE (CHARACTER== ~G1533 #\,) (? (== #\@ (PEEK-CHAR STR)) (? (READ-CHAR STR) 'QUASIQUOTE-SPLICE) 'QUASIQUOTE) (CHARACTER== ~G1533 #\#) (COMMON-LISP:LABELS ((G3789 (~G1532) (? (CHARACTER== ~G1532 #\\) 'CHAR (CHARACTER== ~G1532 #\x) 'HEXNUM (CHARACTER== ~G1532 #\') 'COMMON-LISP:FUNCTION (CHARACTER== ~G1532 #\|) (READ-COMMENT-BLOCK STR) (ERROR "Invalid character after '#'.")))) (G3789 (READ-CHAR STR))) (CHARACTER== ~G1533 -1) 'EOF))) (G3788 (READ-CHAR STR))))) PKG SYM))) (G3787 (COMMON-LISP:CAR ~G1579))))) (G3786 (COMMON-LISP:LABELS ((G3790 (~G1598) (? ~G1598 ~G1598 (%ERROR "Not enough VALUES.")))) (G3790 (COMMON-LISP:CDR ~G1578))))))) (G3785 (COMMON-LISP:CAR ~G1578))))) (G3784 (COMMON-LISP:CDR ~G1577))))) (G3783 !)))))) (G3782 (GET-SYMBOL-AND-PACKAGE STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-TOKEN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1577 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1578 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1577 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1577 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1577 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1578 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1579 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1578 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1579 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DOT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-NUMBER? (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'NUMBER COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SYMBOL COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1533 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\( COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-OPEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-CLOSE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\[ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-OPEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\] COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-CLOSE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\{ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-OPEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\} COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-CLOSE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\' COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:QUOTE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\` COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BACKQUOTE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\^ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ACCENT-CIRCONFLEX COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\" COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DBLQUOTE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\, COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\@ (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS #\# COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1532 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1532 (COMMON-LISP:CONS #\\ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CHAR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1532 (COMMON-LISP:CONS #\x COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HEXNUM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1532 (COMMON-LISP:CONS #\' COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1532 (COMMON-LISP:CONS #\| COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-COMMENT-BLOCK (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Invalid character after '#'." COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1533 (COMMON-LISP:CONS -1 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'EOF COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))))))))))))))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-AND-PACKAGE (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-TOKEN))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-SLOT-VALUE (X) (COMMON-LISP:BLOCK READ-SLOT-VALUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? X (? (COMMON-LISP:CDR X) (COMMON-LISP:CONS 'SLOT-VALUE (COMMON-LISP:CONS (READ-SLOT-VALUE (BUTLAST X)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS (MAKE-SYMBOL (COMMON-LISP:CAR (COMMON-LISP:LAST X))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (? (STRING? (COMMON-LISP:CAR X)) (MAKE-SYMBOL (COMMON-LISP:CAR X)) (COMMON-LISP:CAR X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-SLOT-VALUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-SLOT-VALUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-SYMBOL-OR-SLOT-VALUE (SYM PKG) (COMMON-LISP:BLOCK READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3791 (!) (? (? (COMMON-LISP:CDR !) (? (COMMON-LISP:CAR !) (COMMON-LISP:CAR (COMMON-LISP:LAST !)))) (READ-SLOT-VALUE !) (MAKE-SYMBOL (LIST-STRING SYM) (? (NOT PKG) COMMON-LISP:NIL (EQ COMMON-LISP:T PKG) *KEYWORD-PACKAGE* (COMMON-LISP:FIND-PACKAGE (LIST-STRING PKG))))))) (G3791 (FILTER #'(COMMON-LISP:LAMBDA (_) (? _ (LIST-STRING _))) (SPLIT #\. SYM))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-SYMBOL-OR-SLOT-VALUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS COMMON-LISP:T (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL))) (COMMON-LISP:CONS '*KEYWORD-PACKAGE* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FIND-PACKAGE (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FILTER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '_ (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPLIT (COMMON-LISP:CONS #\. (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-SYMBOL-OR-SLOT-VALUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-ATOM (STR TOKEN PKG SYM) (COMMON-LISP:BLOCK READ-ATOM (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3792 (~G1534) (? (EQ ~G1534 'DBLQUOTE) (READ-STRING STR) (EQ ~G1534 'CHAR) (READ-CHAR STR) (EQ ~G1534 'NUMBER) (COMMON-LISP:LABELS ((G3793 (S) (PRINC (LIST-STRING SYM) S) (COMMON-LISP:PROGN (READ-NUMBER S)))) (G3793 (MAKE-STRING-STREAM))) (EQ ~G1534 'HEXNUM) (READ-HEX STR) (EQ ~G1534 'COMMON-LISP:FUNCTION) (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (READ-EXPR STR) COMMON-LISP:NIL)) (EQ ~G1534 'SYMBOL) (READ-SYMBOL-OR-SLOT-VALUE SYM PKG) (ERROR "Syntax error: token ~A, sym ~A." TOKEN SYM)))) (G3792 TOKEN))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-ATOM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1534 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1534 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DBLQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-STRING (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1534 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1534 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'NUMBER COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'S COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-NUMBER (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STRING-STREAM COMMON-LISP:NIL) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1534 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HEXNUM COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-HEX (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1534 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1534 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SYMBOL COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Syntax error: token ~A, sym ~A." (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))))))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-ATOM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-QUOTE (STR TOKEN) (COMMON-LISP:BLOCK READ-QUOTE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LIST TOKEN (READ-EXPR STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-QUOTE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-QUOTE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-SET-LISTPROP (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-SET-LISTPROP (STR) (COMMON-LISP:BLOCK READ-SET-LISTPROP (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3794 (!) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* (COMMON-LISP:CONS (STREAM-LOCATION-ID !) (COMMON-LISP:CONS (MEMORIZED-NUMBER (STREAM-LOCATION-COLUMN !)) (MEMORIZED-NUMBER (STREAM-LOCATION-LINE !)))))))) (G3794 (STREAM-INPUT-LOCATION STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-SET-LISTPROP *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-SET-LISTPROP (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-SET-LISTPROP))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CONS (STR) (COMMON-LISP:BLOCK READ-CONS (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3795 (LOC) (COMMON-LISP:LABELS ((G3796 (LINE) (COMMON-LISP:LABELS ((G3797 (COLUMN) (COMMON-LISP:LABELS ((G3798 (FILE) (COMMON-LISP:LABELS ((ERR (_) (ERROR "~A in form starting at line ~A, column ~A in file ~A." _ LINE COLUMN FILE)) (F (TOKEN PKG SYM) (? (NOT (%READ-CLOSING-BRACKET? TOKEN)) (COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:LABELS ((G3799 (~G1536) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3800 (~G1539) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* ~G1536)) ~G1539)) (G3800 (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3801 (~G1535) (? (EQ ~G1535 'BRACKET-OPEN) (READ-CONS-SLOT STR) (EQ ~G1535 'SQUARE-BRACKET-OPEN) (COMMON-LISP:CONS 'SQUARE (READ-CONS-SLOT STR)) (EQ ~G1535 'CURLY-BRACKET-OPEN) (COMMON-LISP:CONS 'CURLY (READ-CONS-SLOT STR)) (? (TOKEN-IS-QUOTE? TOKEN) (READ-QUOTE STR TOKEN) (READ-ATOM STR TOKEN PKG SYM))))) (G3801 TOKEN))))))) (G3799 *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3802 (~G1538) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3803 (~G1545) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* ~G1538)) ~G1545)) (G3803 (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3804 (!) (? ! (COMMON-LISP:LABELS ((G3805 (~G1540) (COMMON-LISP:LABELS ((G3806 (~G1541) (? (NOT (EQ (COMMON-LISP:CAR ~G1540) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1540))) (COMMON-LISP:LABELS ((G3807 (TOKEN) (COMMON-LISP:LABELS ((G3808 (~G1542) (COMMON-LISP:LABELS ((G3809 (PKG) (COMMON-LISP:LABELS ((G3810 (~G1543) (COMMON-LISP:LABELS ((G3811 (SYM) (? (EQ 'DOT TOKEN) (COMMON-LISP:LABELS ((G3812 (X) (COMMON-LISP:LABELS ((G3813 (~G1548) (COMMON-LISP:LABELS ((G3814 (~G1549) (? (NOT (EQ (COMMON-LISP:CAR ~G1548) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1548))) (COMMON-LISP:LABELS ((G3815 (TOKEN) (COMMON-LISP:LABELS ((G3816 (~G1550) (COMMON-LISP:LABELS ((G3817 (PKG) (COMMON-LISP:LABELS ((G3818 (~G1551) (COMMON-LISP:LABELS ((G3819 (SYM) (COMMON-LISP:LABELS ((G3820 (~G1537) (? ~G1537 ~G1537 (ERR "Only one value allowed after dotted cons")))) (G3820 (%READ-CLOSING-BRACKET? TOKEN))) X)) (G3819 (COMMON-LISP:CAR ~G1551))))) (G3818 (COMMON-LISP:LABELS ((G3821 (~G1554) (? ~G1554 ~G1554 (%ERROR "Not enough VALUES.")))) (G3821 (COMMON-LISP:CDR ~G1550))))))) (G3817 (COMMON-LISP:CAR ~G1550))))) (G3816 (COMMON-LISP:LABELS ((G3822 (~G1553) (? ~G1553 ~G1553 (%ERROR "Not enough VALUES.")))) (G3822 (COMMON-LISP:CDR ~G1549))))))) (G3815 (COMMON-LISP:CAR ~G1549))))) (G3814 (COMMON-LISP:CDR ~G1548))))) (G3813 (READ-TOKEN STR))))) (G3812 (READ-EXPR STR))) (F TOKEN PKG SYM)))) (G3811 (COMMON-LISP:CAR ~G1543))))) (G3810 (COMMON-LISP:LABELS ((G3823 (~G1547) (? ~G1547 ~G1547 (%ERROR "Not enough VALUES.")))) (G3823 (COMMON-LISP:CDR ~G1542))))))) (G3809 (COMMON-LISP:CAR ~G1542))))) (G3808 (COMMON-LISP:LABELS ((G3824 (~G1546) (? ~G1546 ~G1546 (%ERROR "Not enough VALUES.")))) (G3824 (COMMON-LISP:CDR ~G1541))))))) (G3807 (COMMON-LISP:CAR ~G1541))))) (G3806 (COMMON-LISP:CDR ~G1540))))) (G3805 !)) (ERR "Missing closing bracket")))) (G3804 (READ-TOKEN STR)))))))) (G3802 *DEFAULT-LISTPROP*))))))) (COMMON-LISP:LABELS ((G3825 (~G1581) (COMMON-LISP:LABELS ((G3826 (~G1582) (? (NOT (EQ (COMMON-LISP:CAR ~G1581) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1581))) (COMMON-LISP:LABELS ((G3827 (TOKEN) (COMMON-LISP:LABELS ((G3828 (~G1583) (COMMON-LISP:LABELS ((G3829 (PKG) (COMMON-LISP:LABELS ((G3830 (~G1584) (COMMON-LISP:LABELS ((G3831 (SYM) (? (EQ TOKEN 'DOT) (COMMON-LISP:CONS 'COMMON-LISP:CONS (READ-CONS STR)) (F TOKEN PKG SYM)))) (G3831 (COMMON-LISP:CAR ~G1584))))) (G3830 (COMMON-LISP:LABELS ((G3832 (~G1600) (? ~G1600 ~G1600 (%ERROR "Not enough VALUES.")))) (G3832 (COMMON-LISP:CDR ~G1583))))))) (G3829 (COMMON-LISP:CAR ~G1583))))) (G3828 (COMMON-LISP:LABELS ((G3833 (~G1599) (? ~G1599 ~G1599 (%ERROR "Not enough VALUES.")))) (G3833 (COMMON-LISP:CDR ~G1582))))))) (G3827 (COMMON-LISP:CAR ~G1582))))) (G3826 (COMMON-LISP:CDR ~G1581))))) (G3825 (READ-TOKEN STR)))))) (G3798 (STREAM-LOCATION-ID LOC))))) (G3797 (STREAM-LOCATION-COLUMN LOC))))) (G3796 (STREAM-LOCATION-LINE LOC))))) (G3795 (STREAM-INPUT-LOCATION STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CONS *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL)) (COMMON-LISP:CONS 'FILE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL)) (COMMON-LISP:CONS 'ERR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "~A in form starting at line ~A, column ~A in file ~A." (COMMON-LISP:CONS '_ (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'FILE COMMON-LISP:NIL)))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'F (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1536 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1539 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '~G1536 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1539 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1535 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1535 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1535 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1535 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1538 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1545 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '~G1538 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1545 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1540 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1541 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1540 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1540 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1542 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1543 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DOT COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1548 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1549 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1548 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1548 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1550 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1551 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1537 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1537 (COMMON-LISP:CONS '~G1537 (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERR (COMMON-LISP:CONS "Only one value allowed after dotted cons" COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1551 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1554 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1554 (COMMON-LISP:CONS '~G1554 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1550 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1550 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1553 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1553 (COMMON-LISP:CONS '~G1553 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1549 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1549 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1548 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'F (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1543 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1547 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1547 (COMMON-LISP:CONS '~G1547 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1542 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1542 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1546 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1546 (COMMON-LISP:CONS '~G1546 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1541 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1541 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1540 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERR (COMMON-LISP:CONS "Missing closing bracket" COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1581 (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1582 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1581 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1581 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1581 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1582 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1583 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1582 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1583 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1584 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1583 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1584 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DOT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:CONS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'F (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CONS))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CONS-SLOT (STR) (COMMON-LISP:BLOCK READ-CONS-SLOT (COMMON-LISP:BLOCK COMMON-LISP:NIL (READ-SET-LISTPROP STR) (COMMON-LISP:LABELS ((G3834 (~G1555) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3835 (~G1591) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* ~G1555)) ~G1591)) (G3835 (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3836 (!) (? (== #\. (PEEK-CHAR STR)) (COMMON-LISP:PROGN (READ-CHAR STR) (COMMON-LISP:LABELS ((G3837 (~G1586) (COMMON-LISP:LABELS ((G3838 (~G1587) (? (NOT (EQ (COMMON-LISP:CAR ~G1586) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1586))) (COMMON-LISP:LABELS ((G3839 (TOKEN) (COMMON-LISP:LABELS ((G3840 (~G1588) (COMMON-LISP:LABELS ((G3841 (PKG) (COMMON-LISP:LABELS ((G3842 (~G1589) (COMMON-LISP:LABELS ((G3843 (SYM) (READ-SLOT-VALUE (COMMON-LISP:LIST ! (LIST-STRING SYM))))) (G3843 (COMMON-LISP:CAR ~G1589))))) (G3842 (COMMON-LISP:LABELS ((G3844 (~G1602) (? ~G1602 ~G1602 (%ERROR "Not enough VALUES.")))) (G3844 (COMMON-LISP:CDR ~G1588))))))) (G3841 (COMMON-LISP:CAR ~G1588))))) (G3840 (COMMON-LISP:LABELS ((G3845 (~G1601) (? ~G1601 ~G1601 (%ERROR "Not enough VALUES.")))) (G3845 (COMMON-LISP:CDR ~G1587))))))) (G3839 (COMMON-LISP:CAR ~G1587))))) (G3838 (COMMON-LISP:CDR ~G1586))))) (G3837 (READ-TOKEN STR)))) !))) (G3836 (READ-CONS STR)))))))) (G3834 *DEFAULT-LISTPROP*))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CONS-SLOT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SET-LISTPROP (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1555 (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1591 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1586 (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1587 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1586 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1586 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1586 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1587 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1588 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1587 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1588 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1589 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1588 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1589 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS '! COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '~G1555 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1591 COMMON-LISP:NIL))))) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CONS-SLOT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-EXPR (STR) (COMMON-LISP:BLOCK READ-EXPR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3846 (~G1592) (COMMON-LISP:LABELS ((G3847 (~G1593) (? (NOT (EQ (COMMON-LISP:CAR ~G1592) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1592))) (COMMON-LISP:LABELS ((G3848 (TOKEN) (COMMON-LISP:LABELS ((G3849 (~G1594) (COMMON-LISP:LABELS ((G3850 (PKG) (COMMON-LISP:LABELS ((G3851 (~G1595) (COMMON-LISP:LABELS ((G3852 (SYM) (COMMON-LISP:LABELS ((G3853 (~G1556) (? (EQ ~G1556 COMMON-LISP:NIL) COMMON-LISP:NIL (EQ ~G1556 'EOF) COMMON-LISP:NIL (EQ ~G1556 'BRACKET-OPEN) (READ-CONS-SLOT STR) (EQ ~G1556 'SQUARE-BRACKET-OPEN) (COMMON-LISP:CONS 'SQUARE (READ-CONS-SLOT STR)) (EQ ~G1556 'CURLY-BRACKET-OPEN) (COMMON-LISP:CONS 'CURLY (READ-CONS-SLOT STR)) (? (TOKEN-IS-QUOTE? TOKEN) (READ-QUOTE STR TOKEN) (READ-ATOM STR TOKEN PKG SYM))))) (G3853 TOKEN)))) (G3852 (COMMON-LISP:CAR ~G1595))))) (G3851 (COMMON-LISP:LABELS ((G3854 (~G1604) (? ~G1604 ~G1604 (%ERROR "Not enough VALUES.")))) (G3854 (COMMON-LISP:CDR ~G1594))))))) (G3850 (COMMON-LISP:CAR ~G1594))))) (G3849 (COMMON-LISP:LABELS ((G3855 (~G1603) (? ~G1603 ~G1603 (%ERROR "Not enough VALUES.")))) (G3855 (COMMON-LISP:CDR ~G1593))))))) (G3848 (COMMON-LISP:CAR ~G1593))))) (G3847 (COMMON-LISP:CDR ~G1592))))) (G3846 (READ-TOKEN STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-EXPR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1592 (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1593 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1592 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1592 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1592 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1593 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1594 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1593 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1594 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1595 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1594 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1595 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1556 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1556 (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1556 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'EOF COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1556 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1556 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1556 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-EXPR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ (COMMON-LISP:BLOCK COMMON-LISP:NIL (SKIP-SPACES STR) (? (PEEK-CHAR STR) (READ-EXPR STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-ALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-ALL (STR) (COMMON-LISP:BLOCK READ-ALL (COMMON-LISP:BLOCK COMMON-LISP:NIL (SKIP-SPACES STR) (? (PEEK-CHAR STR) (COMMON-LISP:CONS (READ STR) (READ-ALL STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-ALL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-ALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-ALL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-ALL))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS (COMMON-LISP:CONS 'S COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %LOAD-R (S) (COMMON-LISP:BLOCK %LOAD-R (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-CHAR S) (COMMON-LISP:PROGN (COMMON-LISP:CONS (READ S) (%LOAD-R S))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%LOAD-R *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'S COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%LOAD-R))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %EXPAND (X) (COMMON-LISP:BLOCK %EXPAND (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3856 (!) (? (EQUAL X !) X (%EXPAND !)))) (G3856 (QUASIQUOTE-EXPAND (MACROEXPAND (DOT-EXPAND X)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%EXPAND))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %LOAD (PATHNAME) (COMMON-LISP:BLOCK %LOAD (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS PATHNAME COMMON-LISP:NIL))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3857 (~G1607) (COMMON-LISP:LABELS ((G3858 (I) (COMMON-LISP:TAGBODY ~G1605 (? (NOT ~G1607) (COMMON-LISP:GO ~G1606)) (COMMON-LISP:SETQ I (COMMON-LISP:CAR ~G1607)) (%EVAL (%EXPAND I)) (COMMON-LISP:SETQ ~G1607 (COMMON-LISP:CDR ~G1607)) (COMMON-LISP:GO ~G1605) ~G1606 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN))))) (G3858 COMMON-LISP:NIL)))) (G3857 (COMMON-LISP:LABELS ((G3859 (S) (COMMON-LISP:LABELS ((G3860 (~G1608) (CLOSE S) ~G1608)) (G3860 (COMMON-LISP:PROGN (%LOAD-R S)))))) (G3859 (OPEN PATHNAME :DIRECTION 'INPUT))))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%LOAD *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINT-DEFINITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1607 (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-OPEN-FILE (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'OPEN (COMMON-LISP:CONS 'PATHNAME (COMMON-LISP:CONS ':DIRECTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1605 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1607 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1606 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1607 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%EVAL (COMMON-LISP:CONS (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1607 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1607 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1605 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1606 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN COMMON-LISP:NIL) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%LOAD))
