(IN-PACKAGE :TRE-PARALLEL)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN EVAL (X) (%EVAL X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EVAL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%EVAL (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING (X) (%STRING X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%STRING (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN EQ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%EQ (COMMON-LISP:LIST X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%EQ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN EQL (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%EQL (COMMON-LISP:LIST X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EQL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%EQL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NOT (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%NOT X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NOT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%NOT COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-SYMBOL (X COMMON-LISP:&OPTIONAL (PACKAGE COMMON-LISP:NIL)) (%MAKE-SYMBOL X PACKAGE)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-SYMBOL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'PACKAGE (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%MAKE-SYMBOL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'PACKAGE COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-NAME (X) (%SYMBOL-NAME X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-NAME *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-VALUE (X) (%SYMBOL-VALUE X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-VALUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-VALUE (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-FUNCTION (X) (%SYMBOL-FUNCTION X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-FUNCTION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-FUNCTION (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-PACKAGE (X) (%SYMBOL-PACKAGE X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-PACKAGE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SYMBOL-PACKAGE (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER? (X) (%NUMBER? X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%NUMBER? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER (X) (%INTEGER X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%INTEGER (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CODE-CHAR (X) (%CODE-CHAR (%INTEGER X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CODE-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%CODE-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS '%INTEGER (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER+ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%+ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%+ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER+ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%+ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%+ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER+ (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%+ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%+ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER- (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER- (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER- (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN * (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%* X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'* *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%* COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN / (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%/ X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'/ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%/ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN < (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%< X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'< *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%< COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN > (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'%> X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'> *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '%> COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN FILTER (FUN X) (COMMON-LISP:MAPCAR FUN X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FILTER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MAPCAR (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-ARRAY (COMMON-LISP:&OPTIONAL (DIMENSIONS 1)) (%MAKE-ARRAY DIMENSIONS)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-ARRAY *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIMENSIONS (COMMON-LISP:CONS 1 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%MAKE-ARRAY (COMMON-LISP:CONS 'DIMENSIONS COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-HASH-TABLE (COMMON-LISP:&KEY (TEST #'EQL)) (%MAKE-HASH-TABLE :TEST TEST)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-HASH-TABLE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%MAKE-HASH-TABLE (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN LOAD (PATHNAME) (%LOAD PATHNAME)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LOAD *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(%DEFVAR *MACROEXPAND-HOOK* COMMON-LISP:NIL)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MACROEXPAND-1 (X) (? *MACROEXPAND-HOOK* (COMMON-LISP:APPLY *MACROEXPAND-HOOK* (COMMON-LISP:LIST X)) X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MACROEXPAND-1 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '*MACROEXPAND-HOOK* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS '*MACROEXPAND-HOOK* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MACROEXPAND-0 (OLD X) (? (%EQUAL X OLD) OLD (MACROEXPAND X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MACROEXPAND-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OLD (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '%EQUAL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'OLD COMMON-LISP:NIL))) (COMMON-LISP:CONS 'OLD (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN MACROEXPAND (X) (MACROEXPAND-0 X (MACROEXPAND-1 X))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MACROEXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND-0 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND-1 (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN NANOTIME COMMON-LISP:NIL 0) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NANOTIME *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 0 COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN FUNCTION-BYTECODE (X) X COMMON-LISP:NIL) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FUNCTION-BYTECODE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))))
(%DEFVAR *FUNCTIONALS* COMMON-LISP:NIL)
(%DEFMACRO FUNCTIONAL (COMMON-LISP:&REST NAMES) (PRINT-DEFINITION (COMMON-LISP:CONS 'FUNCTIONAL (APPEND NAMES COMMON-LISP:NIL))) (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*FUNCTIONALS* (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS NAMES COMMON-LISP:NIL)) (COMMON-LISP:CONS '*FUNCTIONALS* COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN FUNCTIONAL? (NAME) (MEMBER NAME *FUNCTIONALS* :TEST #'EQ)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FUNCTIONAL? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NAME COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MEMBER (COMMON-LISP:CONS 'NAME (COMMON-LISP:CONS '*FUNCTIONALS* (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQ COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'IDENTITY (COMMON-LISP:CONS '+ (COMMON-LISP:CONS '- (COMMON-LISP:CONS '* (COMMON-LISP:CONS '/ (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS 'NUMBER- (COMMON-LISP:CONS 'NUMBER* (COMMON-LISP:CONS 'NUMBER/ (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 'INTEGER- (COMMON-LISP:CONS 'INTEGER* (COMMON-LISP:CONS 'INTEGER/ (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS 'LOGXOR (COMMON-LISP:CONS 'NUMBER? (COMMON-LISP:CONS '== (COMMON-LISP:CONS '< (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'NUMBER== (COMMON-LISP:CONS 'NUMBER< (COMMON-LISP:CONS 'NUMBER> (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'INTEGER< (COMMON-LISP:CONS 'INTEGER> (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS 'CHARACTER< (COMMON-LISP:CONS 'CHARACTER> (COMMON-LISP:CONS 'BIT-OR (COMMON-LISP:CONS 'BIT-AND (COMMON-LISP:CONS '<< (COMMON-LISP:CONS '>> (COMMON-LISP:CONS 'CODE-CHAR (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'EQL (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS 'COMMON-LISP:MAKE-PACKAGE (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'SYMBOL-VALUE (COMMON-LISP:CONS '%TYPE (COMMON-LISP:CONS '%%ID (COMMON-LISP:CONS '%MAKE-PTR (COMMON-LISP:CONS 'SYMBOL-FUNCTION (COMMON-LISP:CONS 'SYMBOL-PACKAGE (COMMON-LISP:CONS 'FUNCTION-NATIVE (COMMON-LISP:CONS 'SYMBOL? (COMMON-LISP:CONS 'FUNCTION? (COMMON-LISP:CONS 'BUILTIN? (COMMON-LISP:CONS 'MACRO? (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'COMMON-LISP:MAKE-STRING (COMMON-LISP:CONS 'STRING== (COMMON-LISP:CONS 'STRING-CONCAT (COMMON-LISP:CONS 'STRING (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'MAKE-ARRAY (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'SLOT-VALUE (COMMON-LISP:CONS '%SLOT-VALUE (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'IDENTITY (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'COMMON-LISP:COPY-LIST (COMMON-LISP:CONS 'INTEGER? (COMMON-LISP:CONS 'CHARACTER? COMMON-LISP:NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) *FUNCTIONALS*))
(%DEFVAR *DEFINITION-PRINTER* #'COMMON-LISP:PRINT)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN PRINT-DEFINITION (X) (? *PRINT-DEFINITIONS?* (COMMON-LISP:APPLY *DEFINITION-PRINTER* (COMMON-LISP:LIST X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PRINT-DEFINITION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '*PRINT-DEFINITIONS?* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS '*DEFINITION-PRINTER* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN ANY-QUASIQUOTE? (X) (? (CONS? X) (? (EQ (COMMON-LISP:CAR X) 'QUASIQUOTE) COMMON-LISP:T (EQ (COMMON-LISP:CAR X) 'QUASIQUOTE-SPLICE) COMMON-LISP:T))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ANY-QUASIQUOTE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN %QUASIQUOTE-EXPAND (X) (? (COMMON-LISP:ATOM X) X (COMMON-LISP:ATOM (COMMON-LISP:CAR X)) (COMMON-LISP:CONS (COMMON-LISP:CAR X) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'COMMON-LISP:QUOTE) (COMMON-LISP:CONS (COMMON-LISP:CAR X) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'BACKQUOTE) (COMMON-LISP:CONS (COMMON-LISP:CAR X) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'QUASIQUOTE) (COMMON-LISP:CONS (EVAL (MACROEXPAND (COMMON-LISP:CAR (COMMON-LISP:CDR (COMMON-LISP:CAR X))))) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (EQ (COMMON-LISP:CAR (COMMON-LISP:CAR X)) 'QUASIQUOTE-SPLICE) (APPEND (EVAL (MACROEXPAND (COMMON-LISP:CAR (COMMON-LISP:CDR (COMMON-LISP:CAR X))))) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))) (COMMON-LISP:CONS (%QUASIQUOTE-EXPAND (COMMON-LISP:CAR X)) (%QUASIQUOTE-EXPAND (COMMON-LISP:CDR X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%QUASIQUOTE-EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:QUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BACKQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EVAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'APPEND (COMMON-LISP:CONS (COMMON-LISP:CONS 'EVAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))))))))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUASIQUOTE-EXPAND (X) (COMMON-LISP:CAR (%QUASIQUOTE-EXPAND (COMMON-LISP:LIST X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUASIQUOTE-EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS '%QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:SETQ *QUASIQUOTEEXPAND-HOOK* #'QUASIQUOTE-EXPAND)
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN IDENTITY (X) X) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'IDENTITY *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN + (COMMON-LISP:&REST X) (COMMON-LISP:LABELS ((G3014 (A) (? A (COMMON-LISP:APPLY (? (CONS? A) #'APPEND (STRING? A) #'STRING-CONCAT #'NUMBER+) X) (? (COMMON-LISP:CDR X) (COMMON-LISP:APPLY #'+ (COMMON-LISP:CDR X)))))) (G3014 (COMMON-LISP:CAR X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'+ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'A COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'A (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'A COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'APPEND COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'A COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'STRING-CONCAT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'NUMBER+ COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '+ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN - (COMMON-LISP:&REST X) (COMMON-LISP:APPLY #'NUMBER- X)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'NUMBER- COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'ARGS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FUNCALL (FUN COMMON-LISP:&REST ARGS) (COMMON-LISP:BLOCK FUNCALL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:APPLY FUN ARGS)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FUNCALL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'ARGS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS 'FUN (COMMON-LISP:CONS 'ARGS COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FUNCALL))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'CAAR (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS 'CDAR (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS 'CADAR (COMMON-LISP:CONS 'CDDAR (COMMON-LISP:CONS 'CAADAR (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS 'CAADR (COMMON-LISP:CONS 'CDDDR (COMMON-LISP:CONS 'CDADAR (COMMON-LISP:CONS 'CAADDR (COMMON-LISP:CONS 'CADDAR (COMMON-LISP:CONS 'CDDDAR (COMMON-LISP:CONS 'CDDDDR (COMMON-LISP:CONS 'CADADR (COMMON-LISP:CONS 'CADADDR (COMMON-LISP:CONS 'CADADAR (COMMON-LISP:CONS 'CDDADAR COMMON-LISP:NIL))))))))))))))))))) *FUNCTIONALS*))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAAR (LST) (COMMON-LISP:CAR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADR (LST) (COMMON-LISP:CAR (COMMON-LISP:CDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDAR (LST) (COMMON-LISP:CDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDR (LST) (COMMON-LISP:CDR (COMMON-LISP:CDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADAR (LST) (CADR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDAR (LST) (CDDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDADR (LST) (CDAR (COMMON-LISP:CDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADDR (LST) (COMMON-LISP:CAR (CDDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAADR (LST) (COMMON-LISP:CAR (CADR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDDR (LST) (COMMON-LISP:CDR (COMMON-LISP:CDR (COMMON-LISP:CDR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDDDR (LST) (COMMON-LISP:CDR (COMMON-LISP:CDR (COMMON-LISP:CDR (COMMON-LISP:CDR LST))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDDDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAADAR (LST) (COMMON-LISP:CAR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDADAR (LST) (COMMON-LISP:CDR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CAADDR (LST) (COMMON-LISP:CAR (CADDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CAADDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADDAR (LST) (CADDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDDAR (LST) (CDDDR (COMMON-LISP:CAR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDDAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADADR (LST) (CADR (CADR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADADR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADADDR (LST) (CADR (CADDR LST))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADADDR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CADADAR (LST) (CADR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CADADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN CDDADAR (LST) (CDDR (CADR (COMMON-LISP:CAR LST)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CDDADAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CDDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'CADR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'EQUAL COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN EQUAL (X Y) (COMMON-LISP:BLOCK EQUAL (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:LABELS ((G3015 (~G986) (? ~G986 ~G986 (COMMON-LISP:ATOM Y)))) (G3015 (COMMON-LISP:ATOM X))) (EQL X Y) (EQUAL (COMMON-LISP:CAR X) (COMMON-LISP:CAR Y)) (EQUAL (COMMON-LISP:CDR X) (COMMON-LISP:CDR Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EQUAL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G986 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G986 (COMMON-LISP:CONS '~G986 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'EQUAL))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS '>= (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'CHARACTER>= (COMMON-LISP:CONS 'CHARACTER<= (COMMON-LISP:CONS 'INTEGER>= (COMMON-LISP:CONS 'INTEGER<= (COMMON-LISP:CONS 'NUMBER>= (COMMON-LISP:CONS 'NUMBER<= COMMON-LISP:NIL)))))))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN >= (N COMMON-LISP:&REST X) (COMMON-LISP:BLOCK >= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3016 (~G991) (COMMON-LISP:LABELS ((G3017 (I) (COMMON-LISP:TAGBODY ~G989 (? (NOT ~G991) (COMMON-LISP:GO ~G990)) (COMMON-LISP:SETQ I (COMMON-LISP:CAR ~G991)) (COMMON-LISP:LABELS ((G3018 (~G987) (? ~G987 ~G987 (COMMON-LISP:LABELS ((G3019 (~G988) (? ~G988 ~G988 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3019 (> N I)))))) (G3018 (== N I))) (COMMON-LISP:SETQ N I) (COMMON-LISP:SETQ ~G991 (COMMON-LISP:CDR ~G991)) (COMMON-LISP:GO ~G989) ~G990 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3017 COMMON-LISP:NIL)))) (G3016 X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'>= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G991 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G989 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G991 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G990 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G991 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G987 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G987 (COMMON-LISP:CONS '~G987 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G988 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G988 (COMMON-LISP:CONS '~G988 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G991 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G991 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G989 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G990 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '>=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN <= (N COMMON-LISP:&REST X) (COMMON-LISP:BLOCK <= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3020 (~G996) (COMMON-LISP:LABELS ((G3021 (I) (COMMON-LISP:TAGBODY ~G994 (? (NOT ~G996) (COMMON-LISP:GO ~G995)) (COMMON-LISP:SETQ I (COMMON-LISP:CAR ~G996)) (COMMON-LISP:LABELS ((G3022 (~G992) (? ~G992 ~G992 (COMMON-LISP:LABELS ((G3023 (~G993) (? ~G993 ~G993 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3023 (< N I)))))) (G3022 (== N I))) (COMMON-LISP:SETQ N I) (COMMON-LISP:SETQ ~G996 (COMMON-LISP:CDR ~G996)) (COMMON-LISP:GO ~G994) ~G995 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3021 COMMON-LISP:NIL)))) (G3020 X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G996 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G994 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G996 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G995 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G996 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G992 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G992 (COMMON-LISP:CONS '~G992 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G993 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G993 (COMMON-LISP:CONS '~G993 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'N (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G996 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G996 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G994 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G995 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '<=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHARACTER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER>= (X Y) (COMMON-LISP:BLOCK CHARACTER>= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3024 (~G997) (? ~G997 ~G997 (CHARACTER> X Y)))) (G3024 (CHARACTER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER>= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHARACTER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G997 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G997 (COMMON-LISP:CONS '~G997 (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER> (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHARACTER>=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHARACTER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHARACTER<= (X Y) (COMMON-LISP:BLOCK CHARACTER<= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3025 (~G998) (? ~G998 ~G998 (CHARACTER< X Y)))) (G3025 (CHARACTER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHARACTER<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHARACTER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G998 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G998 (COMMON-LISP:CONS '~G998 (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHARACTER<=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER>= (X Y) (COMMON-LISP:BLOCK INTEGER>= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3026 (~G999) (? ~G999 ~G999 (INTEGER> X Y)))) (G3026 (INTEGER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER>= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER>= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G999 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G999 (COMMON-LISP:CONS '~G999 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER> (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER>=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER<= (X Y) (COMMON-LISP:BLOCK INTEGER<= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3027 (~G1000) (? ~G1000 ~G1000 (INTEGER< X Y)))) (G3027 (INTEGER== X Y)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1000 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1000 (COMMON-LISP:CONS '~G1000 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'Y COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER<=))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS 'EVEN? (COMMON-LISP:CONS 'ODD? (COMMON-LISP:CONS 'END? (COMMON-LISP:CONS 'KEYWORD? COMMON-LISP:NIL))))) *FUNCTIONALS*))
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ZERO? (X) (COMMON-LISP:BLOCK ZERO? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 0 X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ZERO? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ZERO?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'EVEN? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN EVEN? (X) (COMMON-LISP:BLOCK EVEN? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 0 (COMMON-LISP:MOD X 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EVEN? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'EVEN? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'EVEN?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ODD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ODD? (X) (COMMON-LISP:BLOCK ODD? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 1 (COMMON-LISP:MOD X 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ODD? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ODD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 1 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ODD?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'END? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN END? (X) (COMMON-LISP:BLOCK END? (COMMON-LISP:BLOCK COMMON-LISP:NIL (EQ COMMON-LISP:NIL X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'END? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'END? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'END?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'KEYWORD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN KEYWORD? (X) (COMMON-LISP:BLOCK KEYWORD? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (SYMBOL? X) (EQ *KEYWORD-PACKAGE* (SYMBOL-PACKAGE X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'KEYWORD? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'KEYWORD? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '*KEYWORD-PACKAGE* (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-PACKAGE (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'KEYWORD?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SOLE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SOLE? (X) (COMMON-LISP:BLOCK SOLE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (== 1 (COMMON-LISP:LENGTH X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SOLE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SOLE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 1 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SOLE?))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %NCONC-0 (LSTS) (COMMON-LISP:BLOCK %NCONC-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (? LSTS (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3028 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:RPLACD (COMMON-LISP:LAST !) (%NCONC-0 (COMMON-LISP:CDR LSTS))) !) (%NCONC-0 (COMMON-LISP:CDR LSTS))))) (G3028 (COMMON-LISP:CAR LSTS)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%NCONC-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'LSTS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%NCONC-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NCONC (COMMON-LISP:&REST LSTS) (COMMON-LISP:BLOCK NCONC (COMMON-LISP:BLOCK COMMON-LISP:NIL (%NCONC-0 LSTS)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NCONC *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '%NCONC-0 (COMMON-LISP:CONS 'LSTS COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NCONC))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO NCONC! (PLACE COMMON-LISP:&REST LSTS) (COMMON-LISP:BLOCK NCONC! (COMMON-LISP:CONS '= (COMMON-LISP:CONS PLACE (COMMON-LISP:CONS (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS PLACE (APPEND LSTS COMMON-LISP:NIL))) COMMON-LISP:NIL))))))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO APPEND! (PLACE COMMON-LISP:&REST ARGS) (COMMON-LISP:BLOCK APPEND! (COMMON-LISP:CONS '= (COMMON-LISP:CONS PLACE (COMMON-LISP:CONS (COMMON-LISP:CONS 'APPEND (COMMON-LISP:CONS PLACE (APPEND ARGS COMMON-LISP:NIL))) COMMON-LISP:NIL))))))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS 'QUEUE-FRONT COMMON-LISP:NIL)) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-QUEUE (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-QUEUE COMMON-LISP:NIL (COMMON-LISP:BLOCK MAKE-QUEUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-QUEUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-QUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-QUEUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ENQUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ENQUEUE (X COMMON-LISP:&REST VALS) (COMMON-LISP:BLOCK ENQUEUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:RPLACA X (COMMON-LISP:CDR (COMMON-LISP:RPLACD (COMMON-LISP:LABELS ((G3031 (~G1001) (? ~G1001 ~G1001 X))) (G3031 (COMMON-LISP:CAR X))) VALS))) VALS))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ENQUEUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ENQUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACA (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1001 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1001 (COMMON-LISP:CONS '~G1001 (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ENQUEUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ENQUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ENQUEUE-LIST (X VALS) (COMMON-LISP:BLOCK ENQUEUE-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:RPLACD X (NCONC (COMMON-LISP:CDR X) VALS)) (COMMON-LISP:RPLACA X (COMMON-LISP:LAST VALS))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ENQUEUE-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ENQUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'NCONC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACA (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ENQUEUE-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-POP (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-POP (X) (COMMON-LISP:BLOCK QUEUE-POP (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3032 (~G1002) (? (NOT (COMMON-LISP:CDR (COMMON-LISP:CDR X))) (COMMON-LISP:RPLACA X COMMON-LISP:NIL)) (? (COMMON-LISP:CDR X) (COMMON-LISP:RPLACD X (COMMON-LISP:CDR (COMMON-LISP:CDR X)))) ~G1002)) (G3032 (COMMON-LISP:CAR (COMMON-LISP:CDR X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-POP *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-POP (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1002 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACA (COMMON-LISP:CONS 'X (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RPLACD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS '~G1002 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-POP))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-LIST (X) (COMMON-LISP:BLOCK QUEUE-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CDR X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-FRONT (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-FRONT (X) (COMMON-LISP:BLOCK QUEUE-FRONT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CAR (COMMON-LISP:CDR X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-FRONT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-FRONT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-FRONT))
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'INTEGER++ (COMMON-LISP:CONS 'INTEGER-- COMMON-LISP:NIL)))) *FUNCTIONALS*))
COMMON-LISP:NIL
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN ++ (X) (NUMBER+ X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'++ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN -- (X) (NUMBER- X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'-- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER++ (X) (INTEGER+ X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER++ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
(COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER-- (X) (INTEGER- X 1)) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER-- *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO FN (COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK FN (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (APPEND (? (? (CONS? (COMMON-LISP:CAR BODY)) (NOT (EQ '%SLOT-VALUE (COMMON-LISP:CAR (COMMON-LISP:CAR BODY))))) BODY (COMMON-LISP:LIST BODY)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO SQUARE (COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK SQUARE (COMMON-LISP:CONS 'FN (APPEND BODY COMMON-LISP:NIL)))))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'BUTLAST COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN BUTLAST (PLIST) (COMMON-LISP:BLOCK BUTLAST (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:CDR PLIST) (COMMON-LISP:CONS (COMMON-LISP:CAR PLIST) (BUTLAST (COMMON-LISP:CDR PLIST))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'BUTLAST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'PLIST COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'BUTLAST))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN VALUES (COMMON-LISP:&REST VALS) (COMMON-LISP:BLOCK VALUES (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:CONS 'VALUES VALS)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'VALUES *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) (COMMON-LISP:CONS 'VALS COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'VALUES))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'VALUES? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN VALUES? (X) (COMMON-LISP:BLOCK VALUES? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (CONS? X) (EQ 'VALUES (COMMON-LISP:CAR X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'VALUES? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'VALUES? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'VALUES?))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'RANGE? COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'BOTTOM (COMMON-LISP:CONS 'TOP COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN RANGE? (X BOTTOM TOP) (COMMON-LISP:BLOCK RANGE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (>= X BOTTOM) (<= X TOP))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'RANGE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'BOTTOM (COMMON-LISP:CONS 'TOP COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'BOTTOM COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'TOP COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'RANGE?))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS 'CHAR-DOWNCASE (COMMON-LISP:CONS 'COMMON-LISP:CHAR-CODE (COMMON-LISP:CONS 'CODE-CHAR COMMON-LISP:NIL)))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHAR-UPCASE (C) (COMMON-LISP:BLOCK CHAR-UPCASE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (LOWER-CASE? C) (CHARACTER+ C (CHARACTER- #\A #\a)) C)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHAR-UPCASE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS #\A (COMMON-LISP:CONS #\a COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'C COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHAR-UPCASE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CHAR-DOWNCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CHAR-DOWNCASE (C) (COMMON-LISP:BLOCK CHAR-DOWNCASE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (UPPER-CASE? C) (CHARACTER+ C (CHARACTER- #\a #\A)) C)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CHAR-DOWNCASE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CHAR-DOWNCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS #\a (COMMON-LISP:CONS #\A COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'C COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CHAR-DOWNCASE))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS 'ALPHANUMERIC? COMMON-LISP:NIL))))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO DEF-REST-PREDICATE (NAME ITER ARGS TEST-EXPR) (COMMON-LISP:BLOCK DEF-REST-PREDICATE (COMMON-LISP:LABELS ((G3033 (X) (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS NAME (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS X (APPEND ARGS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOLIST (COMMON-LISP:CONS (COMMON-LISP:CONS ITER (COMMON-LISP:CONS X (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS TEST-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))))) (G3033 (GENSYM))))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1003 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LOWER-CASE? (COMMON-LISP:&REST ~G1003) (COMMON-LISP:BLOCK LOWER-CASE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3034 (~G1016) (COMMON-LISP:LABELS ((G3035 (C) (COMMON-LISP:TAGBODY ~G1014 (? (NOT ~G1016) (COMMON-LISP:GO ~G1015)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1016)) (COMMON-LISP:LABELS ((G3036 (~G1013) (? ~G1013 ~G1013 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3036 (RANGE? C #\a #\z))) (COMMON-LISP:SETQ ~G1016 (COMMON-LISP:CDR ~G1016)) (COMMON-LISP:GO ~G1014) ~G1015 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3035 COMMON-LISP:NIL)))) (G3034 ~G1003)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LOWER-CASE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1003 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1016 (COMMON-LISP:CONS '~G1003 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1014 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1016 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1015 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1016 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1013 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1013 (COMMON-LISP:CONS '~G1013 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\a (COMMON-LISP:CONS #\z COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1016 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1016 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1014 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1015 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LOWER-CASE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1004 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN UPPER-CASE? (COMMON-LISP:&REST ~G1004) (COMMON-LISP:BLOCK UPPER-CASE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3037 (~G1020) (COMMON-LISP:LABELS ((G3038 (C) (COMMON-LISP:TAGBODY ~G1018 (? (NOT ~G1020) (COMMON-LISP:GO ~G1019)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1020)) (COMMON-LISP:LABELS ((G3039 (~G1017) (? ~G1017 ~G1017 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3039 (RANGE? C #\A #\Z))) (COMMON-LISP:SETQ ~G1020 (COMMON-LISP:CDR ~G1020)) (COMMON-LISP:GO ~G1018) ~G1019 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3038 COMMON-LISP:NIL)))) (G3037 ~G1004)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'UPPER-CASE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1004 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1020 (COMMON-LISP:CONS '~G1004 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1018 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1020 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1019 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1020 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1017 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1017 (COMMON-LISP:CONS '~G1017 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\A (COMMON-LISP:CONS #\Z COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1020 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1020 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1018 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1019 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'UPPER-CASE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1006 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ALPHA-CHAR? (COMMON-LISP:&REST ~G1006) (COMMON-LISP:BLOCK ALPHA-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3040 (~G1024) (COMMON-LISP:LABELS ((G3041 (C) (COMMON-LISP:TAGBODY ~G1022 (? (NOT ~G1024) (COMMON-LISP:GO ~G1023)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1024)) (COMMON-LISP:LABELS ((G3042 (~G1021) (? ~G1021 ~G1021 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3042 (COMMON-LISP:LABELS ((G3043 (~G1005) (? ~G1005 ~G1005 (UPPER-CASE? C)))) (G3043 (LOWER-CASE? C))))) (COMMON-LISP:SETQ ~G1024 (COMMON-LISP:CDR ~G1024)) (COMMON-LISP:GO ~G1022) ~G1023 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3041 COMMON-LISP:NIL)))) (G3040 ~G1006)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ALPHA-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1006 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1024 (COMMON-LISP:CONS '~G1006 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1022 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1024 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1023 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1024 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1021 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1021 (COMMON-LISP:CONS '~G1021 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1005 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1005 (COMMON-LISP:CONS '~G1005 (COMMON-LISP:CONS (COMMON-LISP:CONS 'UPPER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LOWER-CASE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1024 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1024 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1022 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1023 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ALPHA-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DECIMAL-DIGIT? (X) (COMMON-LISP:BLOCK DECIMAL-DIGIT? (COMMON-LISP:BLOCK COMMON-LISP:NIL (RANGE? X #\0 #\9)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DECIMAL-DIGIT? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\0 (COMMON-LISP:CONS #\9 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DECIMAL-DIGIT?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %NONDECIMAL-DIGIT? (X START BASE) (COMMON-LISP:BLOCK %NONDECIMAL-DIGIT? (COMMON-LISP:BLOCK COMMON-LISP:NIL (RANGE? X START (CHARACTER+ START (CHARACTER- BASE 10)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%NONDECIMAL-DIGIT? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'RANGE? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'START (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER+ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER- (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%NONDECIMAL-DIGIT?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NONDECIMAL-DIGIT? (X COMMON-LISP:&KEY (BASE 10)) (COMMON-LISP:BLOCK NONDECIMAL-DIGIT? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< 10 BASE) (COMMON-LISP:LABELS ((G3044 (~G1007) (? ~G1007 ~G1007 (%NONDECIMAL-DIGIT? X #\A BASE)))) (G3044 (%NONDECIMAL-DIGIT? X #\a BASE))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NONDECIMAL-DIGIT? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NONDECIMAL-DIGIT? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 10 (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1007 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1007 (COMMON-LISP:CONS '~G1007 (COMMON-LISP:CONS (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\A (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%NONDECIMAL-DIGIT? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\a (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NONDECIMAL-DIGIT?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DIGIT-CHAR? (C COMMON-LISP:&KEY (BASE 10)) (COMMON-LISP:BLOCK DIGIT-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (CHARACTER? C) (COMMON-LISP:LABELS ((G3045 (~G1008) (? ~G1008 ~G1008 (NONDECIMAL-DIGIT? C :BASE BASE)))) (G3045 (DECIMAL-DIGIT? C))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DIGIT-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'BASE (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1008 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1008 (COMMON-LISP:CONS '~G1008 (COMMON-LISP:CONS (COMMON-LISP:CONS 'NONDECIMAL-DIGIT? (COMMON-LISP:CONS 'C (COMMON-LISP:CONS ':BASE (COMMON-LISP:CONS 'BASE COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DECIMAL-DIGIT? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DIGIT-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'HEX-DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN HEX-DIGIT-CHAR? (X) (COMMON-LISP:BLOCK HEX-DIGIT-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3046 (~G1009) (? ~G1009 ~G1009 (COMMON-LISP:LABELS ((G3047 (~G1010) (? ~G1010 ~G1010 (? (>= X #\a) (<= X #\f))))) (G3047 (? (>= X #\A) (<= X #\F))))))) (G3046 (DIGIT-CHAR? X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'HEX-DIGIT-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'HEX-DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1009 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1009 (COMMON-LISP:CONS '~G1009 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1010 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1010 (COMMON-LISP:CONS '~G1010 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\a COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\f COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\A COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\F COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'HEX-DIGIT-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'ALPHANUMERIC? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1012 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN ALPHANUMERIC? (COMMON-LISP:&REST ~G1012) (COMMON-LISP:BLOCK ALPHANUMERIC? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3048 (~G1028) (COMMON-LISP:LABELS ((G3049 (C) (COMMON-LISP:TAGBODY ~G1026 (? (NOT ~G1028) (COMMON-LISP:GO ~G1027)) (COMMON-LISP:SETQ C (COMMON-LISP:CAR ~G1028)) (COMMON-LISP:LABELS ((G3050 (~G1025) (? ~G1025 ~G1025 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)))) (G3050 (COMMON-LISP:LABELS ((G3051 (~G1011) (? ~G1011 ~G1011 (DIGIT-CHAR? C)))) (G3051 (ALPHA-CHAR? C))))) (COMMON-LISP:SETQ ~G1028 (COMMON-LISP:CDR ~G1028)) (COMMON-LISP:GO ~G1026) ~G1027 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3049 COMMON-LISP:NIL)))) (G3048 ~G1012)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'ALPHANUMERIC? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS '~G1012 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'ALPHANUMERIC? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1028 (COMMON-LISP:CONS '~G1012 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1026 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1028 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1027 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1028 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1025 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1025 (COMMON-LISP:CONS '~G1025 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1011 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1011 (COMMON-LISP:CONS '~G1011 (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ALPHA-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1028 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1028 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1026 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1027 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'ALPHANUMERIC?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'WHITESPACE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN WHITESPACE? (X) (COMMON-LISP:BLOCK WHITESPACE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< X 33) (>= X 0))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'WHITESPACE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'WHITESPACE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 33 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'WHITESPACE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CONTROL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CONTROL-CHAR? (X) (COMMON-LISP:BLOCK CONTROL-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (< X 32)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CONTROL-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CONTROL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 32 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CONTROL-CHAR?))
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STRING-CONCAT (COMMON-LISP:CONS 'STRING== (COMMON-LISP:CONS 'UPCASE (COMMON-LISP:CONS 'DOWNCASE (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS 'QUEUE-STRING COMMON-LISP:NIL))))))) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STRING<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'A (COMMON-LISP:CONS 'B COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING<= (A B) (COMMON-LISP:BLOCK STRING<= (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3052 (LA) (COMMON-LISP:LABELS ((G3053 (LB) (COMMON-LISP:LABELS ((G3054 (~G1029) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3055 (I) (COMMON-LISP:TAGBODY ~G1031 (? (INTEGER== I ~G1029) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN (<= LA LB)))) (? (> (COMMON-LISP:ELT A I) (COMMON-LISP:ELT B I)) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:SETQ I (INTEGER+ 1 I)) (COMMON-LISP:GO ~G1031)))) (G3055 0))))) (G3054 (INTEGER LA))))) (G3053 (COMMON-LISP:LENGTH B))))) (G3052 (COMMON-LISP:LENGTH A)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING<= *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'A (COMMON-LISP:CONS 'B COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STRING<= (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LA COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'LB (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'B COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1029 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1031 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'I (COMMON-LISP:CONS '~G1029 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 'LA (COMMON-LISP:CONS 'LB COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'A (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'B (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1031 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'LA COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'A COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STRING<=))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING-LIST (X) (COMMON-LISP:BLOCK STRING-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3056 (L) (COMMON-LISP:LABELS ((G3057 (S) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3058 (I) (COMMON-LISP:TAGBODY ~G1030 (? (< I 0) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ S (COMMON-LISP:PROGN (COMMON-LISP:SETQ S (COMMON-LISP:CONS (COMMON-LISP:ELT X I) S))))) (COMMON-LISP:SETQ I (-- I)) (COMMON-LISP:GO ~G1030)))) (G3058 (-- L)))) S)) (G3057 COMMON-LISP:NIL)))) (G3056 (COMMON-LISP:LENGTH X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'L COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'L COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1030 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN COMMON-LISP:NIL) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1030 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STRING-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'QUEUE-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN QUEUE-STRING (X) (COMMON-LISP:BLOCK QUEUE-STRING (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:APPLY #'STRING-CONCAT (FILTER #'(COMMON-LISP:LAMBDA (_) (? (STRING? _) _ (CHARACTER? _) (STRING _))) (QUEUE-LIST X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'QUEUE-STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'QUEUE-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'STRING-CONCAT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FILTER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) (COMMON-LISP:CONS '_ (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'QUEUE-STRING))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'LIST-SYMBOL COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LIST-SYMBOL (X) (COMMON-LISP:BLOCK LIST-SYMBOL (COMMON-LISP:BLOCK COMMON-LISP:NIL (MAKE-SYMBOL (LIST-STRING X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LIST-SYMBOL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LIST-SYMBOL))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'SUBSEQ COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LIST-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 999999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LIST-SUBSEQ (SEQ START COMMON-LISP:&OPTIONAL (END 999999)) (COMMON-LISP:BLOCK LIST-SUBSEQ (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (? SEQ (NOT (== START END))) (COMMON-LISP:PROGN (? (> START END) (COMMON-LISP:LABELS ((G3059 (~G1032) (COMMON-LISP:PROGN (COMMON-LISP:SETQ START END) (COMMON-LISP:SETQ END ~G1032)))) (G3059 START))) (COMMON-LISP:LABELS ((COPY-NUM (LST LEN) (? LST (? (< 0 LEN) (COMMON-LISP:CONS (COMMON-LISP:CAR LST) (COPY-NUM (COMMON-LISP:CDR LST) (-- LEN))))))) (COPY-NUM (COMMON-LISP:NTHCDR START SEQ) (- END START)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LIST-SUBSEQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 999999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LIST-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1032 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '~G1032 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LABELS (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COPY-NUM (COMMON-LISP:CONS (COMMON-LISP:CONS 'LST (COMMON-LISP:CONS 'LEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'LST (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'LEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COPY-NUM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'LST COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'LEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COPY-NUM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:NTHCDR (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'START COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LIST-SUBSEQ))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%SUBSEQ-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKER (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %SUBSEQ-SEQUENCE (MAKER SEQ START END) (COMMON-LISP:BLOCK %SUBSEQ-SEQUENCE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (NOT (== START END)) (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3060 (!) (? (< START !) (COMMON-LISP:PROGN (? (>= END !) (COMMON-LISP:PROGN (COMMON-LISP:SETQ END !))) (COMMON-LISP:LABELS ((G3061 (L) (COMMON-LISP:LABELS ((G3062 (S) (COMMON-LISP:LABELS ((G3063 (~G1033) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3064 (X) (COMMON-LISP:TAGBODY ~G1036 (? (INTEGER== X ~G1033) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN S))) (COMMON-LISP:PROGN (=-ELT (COMMON-LISP:ELT SEQ (+ START X)) S X)) (COMMON-LISP:SETQ X (INTEGER+ 1 X)) (COMMON-LISP:GO ~G1036)))) (G3064 0))))) (G3063 (INTEGER L))))) (G3062 (FUNCALL MAKER L))))) (G3061 (- END START))))))) (G3060 (COMMON-LISP:LENGTH SEQ)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%SUBSEQ-SEQUENCE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKER (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%SUBSEQ-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'START (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'L COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'MAKER (COMMON-LISP:CONS 'L COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1033 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1036 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '~G1033 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-ELT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1036 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'L COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'START COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%SUBSEQ-SEQUENCE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SUBSEQ (SEQ START COMMON-LISP:&OPTIONAL (END 99999)) (COMMON-LISP:BLOCK SUBSEQ (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (COMMON-LISP:PROGN (? (> START END) (COMMON-LISP:LABELS ((G3065 (~G1034) (COMMON-LISP:PROGN (COMMON-LISP:SETQ START END) (COMMON-LISP:SETQ END ~G1034)))) (G3065 START))) (COMMON-LISP:LABELS ((G3066 (~G1035) (? (CONS? ~G1035) (LIST-SUBSEQ SEQ START END) (STRING? ~G1035) (STRING-SUBSEQ SEQ START END) (ARRAY? ~G1035) (%SUBSEQ-SEQUENCE #'MAKE-ARRAY SEQ START END) (ERROR "Type of ~A not supported." SEQ)))) (G3066 SEQ))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SUBSEQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1034 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS '~G1034 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1035 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS '~G1035 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS '~G1035 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS '~G1035 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%SUBSEQ-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'MAKE-ARRAY COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Type of ~A not supported." (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL))) COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SUBSEQ))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STRING-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STRING-SUBSEQ (SEQ START COMMON-LISP:&OPTIONAL (END 99999)) (COMMON-LISP:BLOCK STRING-SUBSEQ (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (== START END) "" (COMMON-LISP:LABELS ((G3067 (SEQLEN) (? (< START SEQLEN) (COMMON-LISP:PROGN (? (>= END SEQLEN) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (COMMON-LISP:SETQ END SEQLEN)))) (COMMON-LISP:LABELS ((G3068 (L) (COMMON-LISP:LABELS ((G3069 (S) (COMMON-LISP:LABELS ((G3070 (~G1037) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3071 (X) (COMMON-LISP:TAGBODY ~G1038 (? (INTEGER== X ~G1037) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN S))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ S (+ S (STRING (COMMON-LISP:ELT SEQ (+ START X)))))) (COMMON-LISP:SETQ X (INTEGER+ 1 X)) (COMMON-LISP:GO ~G1038)))) (G3071 0))))) (G3070 (INTEGER L))))) (G3069 (COMMON-LISP:MAKE-STRING 0))))) (G3068 (- END START))))))) (G3067 (COMMON-LISP:LENGTH SEQ))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STRING-SUBSEQ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 99999 COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STRING-SUBSEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL))) (COMMON-LISP:CONS "" (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '>= (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'SEQLEN COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'L COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MAKE-STRING (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1037 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1038 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '~G1037 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1038 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS 'L COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'START COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STRING-SUBSEQ))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'FIND (COMMON-LISP:CONS 'POSITION COMMON-LISP:NIL)) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%FIND-IF-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %FIND-IF-LIST (PRED SEQ FROM-END WITH-INDEX) (COMMON-LISP:BLOCK %FIND-IF-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3072 (!) (? WITH-INDEX (COMMON-LISP:LABELS ((G3073 (IDX) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3074 (~G1050) (COMMON-LISP:LABELS ((G3075 (!) (COMMON-LISP:TAGBODY ~G1048 (? (NOT ~G1050) (COMMON-LISP:GO ~G1049)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1050)) (? (FUNCALL PRED ! IDX) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL !)) (COMMON-LISP:PROGN (COMMON-LISP:SETQ IDX (NUMBER+ IDX 1))) (COMMON-LISP:SETQ ~G1050 (COMMON-LISP:CDR ~G1050)) (COMMON-LISP:GO ~G1048) ~G1049 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))))) (G3075 COMMON-LISP:NIL)))) (G3074 !))))) (G3073 0)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3076 (~G1053) (COMMON-LISP:LABELS ((G3077 (!) (COMMON-LISP:TAGBODY ~G1051 (? (NOT ~G1053) (COMMON-LISP:GO ~G1052)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1053)) (? (FUNCALL PRED !) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL !)) (COMMON-LISP:SETQ ~G1053 (COMMON-LISP:CDR ~G1053)) (COMMON-LISP:GO ~G1051) ~G1052 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))))) (G3077 COMMON-LISP:NIL)))) (G3076 !)))))) (G3072 (? FROM-END (REVERSE SEQ) SEQ)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%FIND-IF-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%FIND-IF-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'IDX COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1050 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1048 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1050 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1049 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1050 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'IDX COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'IDX (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS 'IDX (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1050 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1050 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1048 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1049 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1053 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1051 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1053 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1052 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1053 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1053 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1053 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1051 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1052 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS (COMMON-LISP:CONS 'REVERSE (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%FIND-IF-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%FIND-IF-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %FIND-IF-SEQUENCE (PRED SEQ START END FROM-END WITH-INDEX) (COMMON-LISP:BLOCK %FIND-IF-SEQUENCE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (? (< 0 (COMMON-LISP:LENGTH SEQ)) (COMMON-LISP:LABELS ((G3078 (E) (COMMON-LISP:LABELS ((G3079 (S) (? (COMMON-LISP:LABELS ((G3080 (~G1041) (? ~G1041 ~G1041 (? (< S E) FROM-END)))) (G3080 (? (> S E) (NOT FROM-END)))) (COMMON-LISP:LABELS ((G3081 (~G1042) (COMMON-LISP:PROGN (COMMON-LISP:SETQ S E) (COMMON-LISP:SETQ E ~G1042)))) (G3081 S))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3082 (I) (COMMON-LISP:TAGBODY ~G1043 (? (? FROM-END (< I E) (> I E)) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN))) (COMMON-LISP:LABELS ((G3083 (!) (? (COMMON-LISP:APPLY PRED (COMMON-LISP:CONS ! (? WITH-INDEX (COMMON-LISP:LIST I)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL !)))) (G3083 (COMMON-LISP:ELT SEQ I))) (COMMON-LISP:SETQ I (? FROM-END (-- I) (++ I))) (COMMON-LISP:GO ~G1043)))) (G3082 S))))) (G3079 (COMMON-LISP:LABELS ((G3084 (~G1040) (? ~G1040 ~G1040 0))) (G3084 START)))))) (G3078 (COMMON-LISP:LABELS ((G3085 (~G1039) (? ~G1039 ~G1039 (-- (COMMON-LISP:LENGTH SEQ))))) (G3085 END))))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%FIND-IF-SEQUENCE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%FIND-IF-SEQUENCE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'E COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1040 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1040 (COMMON-LISP:CONS '~G1040 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1041 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1041 (COMMON-LISP:CONS '~G1041 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS 'FROM-END COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'FROM-END COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1042 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'E (COMMON-LISP:CONS '~G1042 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1043 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'I (COMMON-LISP:CONS 'E COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN COMMON-LISP:NIL) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1043 COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1039 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1039 (COMMON-LISP:CONS '~G1039 (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'END COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%FIND-IF-SEQUENCE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FIND-IF (PRED SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL) (WITH-INDEX COMMON-LISP:NIL)) (COMMON-LISP:BLOCK FIND-IF (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (NOT (COMMON-LISP:ATOM SEQ) START END) (%FIND-IF-LIST PRED SEQ FROM-END WITH-INDEX) (%FIND-IF-SEQUENCE PRED SEQ START END FROM-END WITH-INDEX))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FIND-IF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ATOM (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%FIND-IF-LIST (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%FIND-IF-SEQUENCE (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'START (COMMON-LISP:CONS 'END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS 'WITH-INDEX COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FIND-IF))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FIND (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FIND (OBJ SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL) (TEST #'EQL)) (COMMON-LISP:BLOCK FIND (COMMON-LISP:BLOCK COMMON-LISP:NIL (FIND-IF #'(COMMON-LISP:LAMBDA (_) (FUNCALL TEST _ OBJ)) SEQ :START START :END END :FROM-END FROM-END)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FIND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FIND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS '_ (COMMON-LISP:CONS 'OBJ COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':START (COMMON-LISP:CONS 'START (COMMON-LISP:CONS ':END (COMMON-LISP:CONS 'END (COMMON-LISP:CONS ':FROM-END (COMMON-LISP:CONS 'FROM-END COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FIND))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN POSITION (OBJ SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL) (TEST #'EQL)) (COMMON-LISP:BLOCK POSITION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3086 (!) (FIND-IF #'(COMMON-LISP:LAMBDA (X I) (? (FUNCALL TEST X OBJ) (COMMON-LISP:PROGN (COMMON-LISP:SETQ ! I)))) SEQ :START START :END END :FROM-END FROM-END :WITH-INDEX COMMON-LISP:T) !)) (G3086 COMMON-LISP:NIL))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'POSITION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'OBJ COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':START (COMMON-LISP:CONS 'START (COMMON-LISP:CONS ':END (COMMON-LISP:CONS 'END (COMMON-LISP:CONS ':FROM-END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS ':WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))))))))))) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'POSITION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'POSITION-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN POSITION-IF (PRED SEQ COMMON-LISP:&KEY (START COMMON-LISP:NIL) (END COMMON-LISP:NIL) (FROM-END COMMON-LISP:NIL)) (COMMON-LISP:BLOCK POSITION-IF (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3087 (!) (FIND-IF #'(COMMON-LISP:LAMBDA (X I) (? (FUNCALL PRED X) (COMMON-LISP:PROGN (COMMON-LISP:SETQ ! I)))) SEQ :START START :END END :FROM-END FROM-END :WITH-INDEX COMMON-LISP:T) !)) (G3087 COMMON-LISP:NIL))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'POSITION-IF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'START (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'POSITION-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'I COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':START (COMMON-LISP:CONS 'START (COMMON-LISP:CONS ':END (COMMON-LISP:CONS 'END (COMMON-LISP:CONS ':FROM-END (COMMON-LISP:CONS 'FROM-END (COMMON-LISP:CONS ':WITH-INDEX (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))))))))))) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'POSITION-IF))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SOME (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SOME (PRED COMMON-LISP:&REST SEQS) (COMMON-LISP:BLOCK SOME (COMMON-LISP:BLOCK COMMON-LISP:NIL (FIND-IF PRED (COMMON-LISP:APPLY #'APPEND SEQS))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SOME *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SOME (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FIND-IF (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:APPLY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'APPEND COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SOME))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN EVERY (PRED COMMON-LISP:&REST SEQS) (COMMON-LISP:BLOCK EVERY (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3088 (~G1047) (COMMON-LISP:LABELS ((G3089 (SEQ) (COMMON-LISP:TAGBODY ~G1045 (? (NOT ~G1047) (COMMON-LISP:GO ~G1046)) (COMMON-LISP:SETQ SEQ (COMMON-LISP:CAR ~G1047)) (COMMON-LISP:LABELS ((G3090 (~G1054) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3091 (!) (COMMON-LISP:TAGBODY ~G1055 (? (INTEGER== ! ~G1054) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))) (COMMON-LISP:LABELS ((G3092 (~G1044) (? ~G1044 ~G1044 (COMMON-LISP:RETURN-FROM EVERY COMMON-LISP:NIL)))) (G3092 (FUNCALL PRED (COMMON-LISP:ELT SEQ !)))) (COMMON-LISP:SETQ ! (INTEGER+ 1 !)) (COMMON-LISP:GO ~G1055)))) (G3091 0))))) (G3090 (INTEGER (COMMON-LISP:LENGTH SEQ)))) (COMMON-LISP:SETQ ~G1047 (COMMON-LISP:CDR ~G1047)) (COMMON-LISP:GO ~G1045) ~G1046 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:T))))) (G3089 COMMON-LISP:NIL)))) (G3088 SEQS)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'EVERY *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS 'COMMON-LISP:&REST (COMMON-LISP:CONS 'SEQS COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1047 (COMMON-LISP:CONS 'SEQS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1045 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1047 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1046 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1047 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1054 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DO (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER+ (COMMON-LISP:CONS 1 (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER== (COMMON-LISP:CONS '! (COMMON-LISP:CONS '~G1054 COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1044 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1044 (COMMON-LISP:CONS '~G1044 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS 'PRED (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1047 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1047 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1045 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1046 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'EVERY))
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
COMMON-LISP:NIL
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WHICH (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-MAKE-EXPR (WHICH NUM X) (COMMON-LISP:BLOCK DOT-EXPAND-MAKE-EXPR (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< 0 NUM) (COMMON-LISP:CONS WHICH (COMMON-LISP:CONS (DOT-EXPAND-MAKE-EXPR WHICH (-- NUM) X) COMMON-LISP:NIL)) X)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-MAKE-EXPR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WHICH (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS 'WHICH COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS 'WHICH (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-MAKE-EXPR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-HEAD-LENGTH (X COMMON-LISP:&OPTIONAL (NUM 0)) (COMMON-LISP:BLOCK DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (== #\. (COMMON-LISP:CAR X)) (DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CDR X) (++ NUM)) (VALUES NUM X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-HEAD-LENGTH *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-HEAD-LENGTH))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-TAIL-LENGTH (X COMMON-LISP:&OPTIONAL (NUM 0)) (COMMON-LISP:BLOCK DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (== #\. (COMMON-LISP:CAR (COMMON-LISP:LAST X))) (DOT-EXPAND-TAIL-LENGTH (BUTLAST X) (++ NUM)) (VALUES NUM X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-TAIL-LENGTH *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 0 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'NUM COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS 'NUM (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-TAIL-LENGTH))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-LIST (X) (COMMON-LISP:BLOCK DOT-EXPAND-LIST (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3093 (~G1061) (COMMON-LISP:LABELS ((G3094 (~G1062) (? (NOT (EQ (COMMON-LISP:CAR ~G1061) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1061))) (COMMON-LISP:LABELS ((G3095 (NUM-CDRS) (COMMON-LISP:LABELS ((G3096 (~G1063) (COMMON-LISP:LABELS ((G3097 (WITHOUT-START) (COMMON-LISP:LABELS ((G3098 (~G1067) (COMMON-LISP:LABELS ((G3099 (~G1068) (? (NOT (EQ (COMMON-LISP:CAR ~G1067) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1067))) (COMMON-LISP:LABELS ((G3100 (NUM-CARS) (COMMON-LISP:LABELS ((G3101 (~G1069) (COMMON-LISP:LABELS ((G3102 (WITHOUT-END) (DOT-EXPAND-MAKE-EXPR 'COMMON-LISP:CAR NUM-CARS (DOT-EXPAND-MAKE-EXPR 'COMMON-LISP:CDR NUM-CDRS (DOT-EXPAND (LIST-SYMBOL WITHOUT-END)))))) (G3102 (COMMON-LISP:CAR ~G1069))))) (G3101 (COMMON-LISP:LABELS ((G3103 (~G1071) (? ~G1071 ~G1071 (%ERROR "Not enough VALUES.")))) (G3103 (COMMON-LISP:CDR ~G1068))))))) (G3100 (COMMON-LISP:CAR ~G1068))))) (G3099 (COMMON-LISP:CDR ~G1067))))) (G3098 (DOT-EXPAND-TAIL-LENGTH WITHOUT-START))))) (G3097 (COMMON-LISP:CAR ~G1063))))) (G3096 (COMMON-LISP:LABELS ((G3104 (~G1066) (? ~G1066 ~G1066 (%ERROR "Not enough VALUES.")))) (G3104 (COMMON-LISP:CDR ~G1062))))))) (G3095 (COMMON-LISP:CAR ~G1062))))) (G3094 (COMMON-LISP:CDR ~G1061))))) (G3093 (DOT-EXPAND-HEAD-LENGTH X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-LIST *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1061 (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-HEAD-LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1062 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1061 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1061 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1061 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM-CDRS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1062 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1063 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1062 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITHOUT-START (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1063 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MULTIPLE-VALUE-BIND (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUM-CARS (COMMON-LISP:CONS 'WITHOUT-END COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-TAIL-LENGTH (COMMON-LISP:CONS 'WITHOUT-START COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:CAR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'NUM-CARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-MAKE-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:CDR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'NUM-CDRS (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS 'WITHOUT-END COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-LIST))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-POSITION (X) (COMMON-LISP:BLOCK DOT-POSITION (COMMON-LISP:BLOCK COMMON-LISP:NIL (POSITION #\. X :TEST #'==)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-POSITION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS #\. (COMMON-LISP:CONS 'X (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS '== COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-POSITION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NO-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NO-DOT-NOTATION? (X) (COMMON-LISP:BLOCK NO-DOT-NOTATION? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3105 (SL) (COMMON-LISP:LABELS ((G3106 (L) (COMMON-LISP:LABELS ((G3107 (P) (COMMON-LISP:LABELS ((G3108 (~G1056) (? ~G1056 ~G1056 (NOT P)))) (G3108 (== 1 L))))) (G3107 (DOT-POSITION SL))))) (G3106 (COMMON-LISP:LENGTH SL))))) (G3105 (STRING-LIST (SYMBOL-NAME X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NO-DOT-NOTATION? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NO-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SL COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'L (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'P (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1056 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1056 (COMMON-LISP:CONS '~G1056 (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'P COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'L COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NO-DOT-NOTATION?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'HAS-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN HAS-DOT-NOTATION? (X) (COMMON-LISP:BLOCK HAS-DOT-NOTATION? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3109 (SL) (COMMON-LISP:LABELS ((G3110 (~G1057) (? ~G1057 ~G1057 (== #\. (COMMON-LISP:CAR (COMMON-LISP:LAST SL)))))) (G3110 (== #\. (COMMON-LISP:CAR SL)))))) (G3109 (STRING-LIST (SYMBOL-NAME X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'HAS-DOT-NOTATION? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'HAS-DOT-NOTATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SL COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1057 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1057 (COMMON-LISP:CONS '~G1057 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'HAS-DOT-NOTATION?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND-CONV (X) (COMMON-LISP:BLOCK DOT-EXPAND-CONV (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3111 (SL) (COMMON-LISP:LABELS ((G3112 (P) (? (NO-DOT-NOTATION? X) X (HAS-DOT-NOTATION? X) (DOT-EXPAND-LIST SL) (COMMON-LISP:CONS '%SLOT-VALUE (COMMON-LISP:CONS (LIST-SYMBOL (SUBSEQ SL 0 P)) (COMMON-LISP:CONS (DOT-EXPAND-CONV (LIST-SYMBOL (SUBSEQ SL (++ P)))) COMMON-LISP:NIL)))))) (G3112 (DOT-POSITION SL))))) (G3111 (STRING-LIST (SYMBOL-NAME X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND-CONV *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SL COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'P (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-POSITION (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NO-DOT-NOTATION? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'HAS-DOT-NOTATION? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-LIST (COMMON-LISP:CONS 'SL COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS '%SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SL (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 'P COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SL (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS 'P COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND-CONV))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DOT-EXPAND (X) (COMMON-LISP:BLOCK DOT-EXPAND (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((LABEL? (_) (NOT (COMMON-LISP:LABELS ((G3113 (~G1058) (? ~G1058 ~G1058 (COMMON-LISP:LABELS ((G3114 (~G1059) (? ~G1059 ~G1059 (STRING? _)))) (G3114 (NUMBER? _)))))) (G3113 (CONS? _)))))) (? X (COMMON-LISP:PROGN (? (LABEL? X) (DOT-EXPAND-CONV X) (CONS? X) (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3115 (~G1065) (COMMON-LISP:LABELS ((G3116 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* !)))))) (G3116 (? (CONS? ~G1065) (CPR ~G1065)))))) (G3115 X)) (COMMON-LISP:LABELS ((G3117 (~G1060) (RPLACP (COMMON-LISP:CONS (DOT-EXPAND (COMMON-LISP:CAR X)) (DOT-EXPAND (COMMON-LISP:CDR X))) ~G1060))) (G3117 *DEFAULT-LISTPROP*))) X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DOT-EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LABELS (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LABEL? (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1058 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1058 (COMMON-LISP:CONS '~G1058 (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1059 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1059 (COMMON-LISP:CONS '~G1059 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LABEL? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND-CONV (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1065 (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'AWHEN (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS '~G1065 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CPR (COMMON-LISP:CONS '~G1065 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '= (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1060 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'RPLACP (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS '~G1060 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DOT-EXPAND))
(COMMON-LISP:PROGN (COMMON-LISP:SETQ *DOTEXPAND-HOOK* #'DOT-EXPAND))
(%DEFVAR *MEMORIZED-NUMBERS* (MAKE-HASH-TABLE :TEST #'==))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MEMORIZED-NUMBER (X) (COMMON-LISP:BLOCK MEMORIZED-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3118 (~G1072) (? ~G1072 ~G1072 (COMMON-LISP:PROGN (=-HREF X *MEMORIZED-NUMBERS* X))))) (G3118 (HREF *MEMORIZED-NUMBERS* X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MEMORIZED-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1072 (COMMON-LISP:CONS (COMMON-LISP:CONS 'HREF (COMMON-LISP:CONS '*MEMORIZED-NUMBERS* (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1072 (COMMON-LISP:CONS '~G1072 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-HREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '*MEMORIZED-NUMBERS* (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MEMORIZED-NUMBER))
(%DEFVAR *TERPRI* (STRING (CODE-CHAR 10)))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'TERPRI (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN TERPRI (COMMON-LISP:&OPTIONAL (STR *STANDARD-OUTPUT*)) (COMMON-LISP:BLOCK TERPRI (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3119 (~G1073) (COMMON-LISP:LABELS ((G3120 (S) (COMMON-LISP:LABELS ((G3121 (~G1074) (? ~G1073 ~G1074 (GET-STREAM-STRING S)))) (G3121 (COMMON-LISP:PROGN (STREAM-PRINC (CODE-CHAR 10) S) (FORCE-OUTPUT S) COMMON-LISP:NIL))))) (G3120 (DEFAULT-STREAM ~G1073))))) (G3119 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'TERPRI *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'TERPRI (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1073 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS '~G1073 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1074 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'CODE-CHAR (COMMON-LISP:CONS 10 COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FORCE-OUTPUT (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1073 (COMMON-LISP:CONS '~G1074 (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'TERPRI))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FRESH-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FRESH-LINE (COMMON-LISP:&OPTIONAL (STR *STANDARD-OUTPUT*)) (COMMON-LISP:BLOCK FRESH-LINE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3122 (~G1075) (COMMON-LISP:LABELS ((G3123 (S) (COMMON-LISP:LABELS ((G3124 (~G1076) (? ~G1075 ~G1076 (GET-STREAM-STRING S)))) (G3124 (COMMON-LISP:PROGN (? (NOT (FRESH-LINE? S)) (COMMON-LISP:PROGN (TERPRI S) COMMON-LISP:T))))))) (G3123 (DEFAULT-STREAM ~G1075))))) (G3122 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FRESH-LINE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FRESH-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1075 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS '~G1075 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1076 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRESH-LINE? (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'TERPRI (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1075 (COMMON-LISP:CONS '~G1076 (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FRESH-LINE))
(%DEFVAR *DEFAULT-STREAM-TABSIZE* 8)
(COMMON-LISP:PROGN COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STREAM-LOCATION (COMMON-LISP:&KEY (TRACK? 'TRACK?) (ID 'ID) (LINE 'LINE) (COLUMN 'COLUMN) (TABSIZE 'TABSIZE)) (COMMON-LISP:BLOCK MAKE-STREAM-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3125 (~G1077) (COMMON-LISP:PROGN (=-AREF 'STRUCT ~G1077 0) (=-AREF 'STREAM-LOCATION ~G1077 1)) (COMMON-LISP:PROGN (=-AREF (? (EQ TRACK? 'TRACK?) COMMON-LISP:T TRACK?) ~G1077 2)) (COMMON-LISP:PROGN (=-AREF (? (EQ ID 'ID) COMMON-LISP:NIL ID) ~G1077 3)) (COMMON-LISP:PROGN (=-AREF (? (EQ LINE 'LINE) 1 LINE) ~G1077 4)) (COMMON-LISP:PROGN (=-AREF (? (EQ COLUMN 'COLUMN) 1 COLUMN) ~G1077 5)) (COMMON-LISP:PROGN (=-AREF (? (EQ TABSIZE 'TABSIZE) *DEFAULT-STREAM-TABSIZE* TABSIZE) ~G1077 6)) ~G1077)) (G3125 (MAKE-ARRAY 7)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STREAM-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1077 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1077 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1077 (COMMON-LISP:CONS 1 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T (COMMON-LISP:CONS 'TRACK? COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1077 (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'ID COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1077 (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'LINE COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1077 (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1077 (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS '*DEFAULT-STREAM-TABSIZE* (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1077 (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1077 COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-ARRAY (COMMON-LISP:CONS 7 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STREAM-LOCATION)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION? (X) (COMMON-LISP:BLOCK STREAM-LOCATION? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (ARRAY? X) (? (EQ 'STRUCT (COMMON-LISP:AREF X 0)) (EQ 'STREAM-LOCATION (COMMON-LISP:AREF X 1))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION?)) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-TRACK? (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-TRACK? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 2)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-TRACK? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-TRACK?)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-TRACK? (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-TRACK? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-TRACK? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-TRACK?))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-ID COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-ID (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-ID (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 3)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-ID *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-ID)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-ID (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-ID (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 3))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-ID *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-ID))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-LINE COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-LINE (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-LINE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 4)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-LINE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-LINE)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-LINE (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-LINE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 4))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-LINE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-LINE))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-COLUMN (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-COLUMN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 5)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-COLUMN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-COLUMN)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-COLUMN (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-COLUMN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 5))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-COLUMN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-COLUMN))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LOCATION-TABSIZE (ARR) (COMMON-LISP:BLOCK STREAM-LOCATION-TABSIZE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 6)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LOCATION-TABSIZE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LOCATION-TABSIZE)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LOCATION-TABSIZE (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LOCATION-TABSIZE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 6))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LOCATION-TABSIZE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LOCATION-TABSIZE))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO WITH-STREAM-LOCATION (S COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK WITH-STREAM-LOCATION (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS S (APPEND BODY COMMON-LISP:NIL))))))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO DEF-STREAM-LOCATION (NAME ARGS COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK DEF-STREAM-LOCATION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS NAME (COMMON-LISP:CONS ARGS (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'STREAM-LOCATION (APPEND BODY COMMON-LISP:NIL)))) COMMON-LISP:NIL))))))))
(COMMON-LISP:PROGN COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STREAM (COMMON-LISP:&KEY (HANDLE 'HANDLE) (FUN-IN 'FUN-IN) (FUN-OUT 'FUN-OUT) (FUN-EOF 'FUN-EOF) (LAST-CHAR 'LAST-CHAR) (PEEKED-CHAR 'PEEKED-CHAR) (INPUT-LOCATION 'INPUT-LOCATION) (OUTPUT-LOCATION 'OUTPUT-LOCATION) (USER-DETAIL 'USER-DETAIL)) (COMMON-LISP:BLOCK MAKE-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3126 (~G1078) (COMMON-LISP:PROGN (=-AREF 'STRUCT ~G1078 0) (=-AREF 'STREAM ~G1078 1)) (COMMON-LISP:PROGN (=-AREF (? (EQ HANDLE 'HANDLE) COMMON-LISP:NIL HANDLE) ~G1078 2)) (COMMON-LISP:PROGN (=-AREF (? (EQ FUN-IN 'FUN-IN) COMMON-LISP:NIL FUN-IN) ~G1078 3)) (COMMON-LISP:PROGN (=-AREF (? (EQ FUN-OUT 'FUN-OUT) COMMON-LISP:NIL FUN-OUT) ~G1078 4)) (COMMON-LISP:PROGN (=-AREF (? (EQ FUN-EOF 'FUN-EOF) COMMON-LISP:NIL FUN-EOF) ~G1078 5)) (COMMON-LISP:PROGN (=-AREF (? (EQ LAST-CHAR 'LAST-CHAR) COMMON-LISP:NIL LAST-CHAR) ~G1078 6)) (COMMON-LISP:PROGN (=-AREF (? (EQ PEEKED-CHAR 'PEEKED-CHAR) COMMON-LISP:NIL PEEKED-CHAR) ~G1078 7)) (COMMON-LISP:PROGN (=-AREF (? (EQ INPUT-LOCATION 'INPUT-LOCATION) (MAKE-STREAM-LOCATION) INPUT-LOCATION) ~G1078 8)) (COMMON-LISP:PROGN (=-AREF (? (EQ OUTPUT-LOCATION 'OUTPUT-LOCATION) (MAKE-STREAM-LOCATION :TRACK? COMMON-LISP:NIL) OUTPUT-LOCATION) ~G1078 9)) (COMMON-LISP:PROGN (=-AREF (? (EQ USER-DETAIL 'USER-DETAIL) COMMON-LISP:NIL USER-DETAIL) ~G1078 10)) ~G1078)) (G3126 (MAKE-ARRAY 11)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1078 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 1 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'HANDLE COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'FUN-IN COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'FUN-OUT COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'FUN-EOF COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'LAST-CHAR COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'PEEKED-CHAR COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 7 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION COMMON-LISP:NIL) (COMMON-LISP:CONS 'INPUT-LOCATION COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 8 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':TRACK? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) (COMMON-LISP:CONS 'OUTPUT-LOCATION COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 9 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'USER-DETAIL COMMON-LISP:NIL)))) (COMMON-LISP:CONS '~G1078 (COMMON-LISP:CONS 10 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1078 COMMON-LISP:NIL)))))))))))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-ARRAY (COMMON-LISP:CONS 11 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STREAM)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM? (X) (COMMON-LISP:BLOCK STREAM? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (ARRAY? X) (? (EQ 'STRUCT (COMMON-LISP:AREF X 0)) (EQ 'STREAM (COMMON-LISP:AREF X 1))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARRAY? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STRUCT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'STREAM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM?)) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-HANDLE COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-HANDLE (ARR) (COMMON-LISP:BLOCK STREAM-HANDLE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 2)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-HANDLE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-HANDLE)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-HANDLE (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-HANDLE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 2))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-HANDLE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-HANDLE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 2 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-HANDLE))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-FUN-IN COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-FUN-IN (ARR) (COMMON-LISP:BLOCK STREAM-FUN-IN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 3)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-FUN-IN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-FUN-IN)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-FUN-IN (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-FUN-IN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 3))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-FUN-IN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 3 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-FUN-IN))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-FUN-OUT COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-FUN-OUT (ARR) (COMMON-LISP:BLOCK STREAM-FUN-OUT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 4)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-FUN-OUT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-FUN-OUT)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-FUN-OUT (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-FUN-OUT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 4))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-FUN-OUT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 4 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-FUN-OUT))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-FUN-EOF COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-FUN-EOF (ARR) (COMMON-LISP:BLOCK STREAM-FUN-EOF (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 5)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-FUN-EOF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-FUN-EOF)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-FUN-EOF (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-FUN-EOF (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 5))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-FUN-EOF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 5 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-FUN-EOF))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-LAST-CHAR COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-LAST-CHAR (ARR) (COMMON-LISP:BLOCK STREAM-LAST-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 6)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-LAST-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-LAST-CHAR)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-LAST-CHAR (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-LAST-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 6))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-LAST-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 6 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-LAST-CHAR))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-PEEKED-CHAR (ARR) (COMMON-LISP:BLOCK STREAM-PEEKED-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 7)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-PEEKED-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 7 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-PEEKED-CHAR)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-PEEKED-CHAR (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-PEEKED-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 7))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-PEEKED-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 7 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-PEEKED-CHAR))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-INPUT-LOCATION (ARR) (COMMON-LISP:BLOCK STREAM-INPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 8)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-INPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 8 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-INPUT-LOCATION)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-INPUT-LOCATION (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-INPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 8))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-INPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 8 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-INPUT-LOCATION))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-OUTPUT-LOCATION (ARR) (COMMON-LISP:BLOCK STREAM-OUTPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 9)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-OUTPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 9 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-OUTPUT-LOCATION)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-OUTPUT-LOCATION (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-OUTPUT-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 9))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-OUTPUT-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 9 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-OUTPUT-LOCATION))) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'STREAM-USER-DETAIL COMMON-LISP:NIL) *FUNCTIONALS*)) COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-USER-DETAIL (ARR) (COMMON-LISP:BLOCK STREAM-USER-DETAIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:AREF ARR 10)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-USER-DETAIL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:AREF (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-USER-DETAIL)) (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN =-STREAM-USER-DETAIL (VAL ARR) (COMMON-LISP:BLOCK =-STREAM-USER-DETAIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (=-AREF VAL ARR 10))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'=-STREAM-USER-DETAIL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-AREF (COMMON-LISP:CONS 'VAL (COMMON-LISP:CONS 'ARR (COMMON-LISP:CONS 10 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '=-STREAM-USER-DETAIL))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO WITH-STREAM (S COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK WITH-STREAM (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS S (APPEND BODY COMMON-LISP:NIL))))))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO DEF-STREAM (NAME ARGS COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK DEF-STREAM (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS NAME (COMMON-LISP:CONS ARGS (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-STRUCT (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS 'STREAM (APPEND BODY COMMON-LISP:NIL)))) COMMON-LISP:NIL))))))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NEXT-TABULATOR-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'SIZE COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NEXT-TABULATOR-COLUMN (COLUMN SIZE) (COMMON-LISP:BLOCK NEXT-TABULATOR-COLUMN (COMMON-LISP:BLOCK COMMON-LISP:NIL (++ (* SIZE (++ (INTEGER (/ (-- COLUMN) SIZE)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NEXT-TABULATOR-COLUMN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'SIZE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NEXT-TABULATOR-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'SIZE (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS '/ (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS 'COLUMN COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SIZE COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NEXT-TABULATOR-COLUMN))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %TRACK-LOCATION (STREAM-LOCATION X) (COMMON-LISP:BLOCK %TRACK-LOCATION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3127 (STREAM-LOCATION) (COMMON-LISP:LABELS ((G3128 (TRACK?) (COMMON-LISP:LABELS ((G3129 (ID) (COMMON-LISP:LABELS ((G3130 (LINE) (COMMON-LISP:LABELS ((G3131 (COLUMN) (COMMON-LISP:LABELS ((G3132 (TABSIZE) TRACK? ID LINE COLUMN TABSIZE (? TRACK? (COMMON-LISP:PROGN (? (STRING? X) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3133 (~G1081) (COMMON-LISP:LABELS ((G3134 (!) (COMMON-LISP:TAGBODY ~G1079 (? (NOT ~G1081) (COMMON-LISP:GO ~G1080)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1081)) (%TRACK-LOCATION STREAM-LOCATION !) (COMMON-LISP:SETQ ~G1081 (COMMON-LISP:CDR ~G1081)) (COMMON-LISP:GO ~G1079) ~G1080 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN COMMON-LISP:NIL))))) (G3134 COMMON-LISP:NIL)))) (G3133 (STRING-LIST X)))) (? X (COMMON-LISP:PROGN (? (== 10 X) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-LOCATION-COLUMN 1 STREAM-LOCATION)) (COMMON-LISP:PROGN (=-STREAM-LOCATION-LINE (NUMBER+ (STREAM-LOCATION-LINE STREAM-LOCATION) 1) STREAM-LOCATION))) (? (== 9 X) (COMMON-LISP:PROGN (=-STREAM-LOCATION-COLUMN (NEXT-TABULATOR-COLUMN COLUMN TABSIZE) STREAM-LOCATION)) (< 31 X) (COMMON-LISP:PROGN (=-STREAM-LOCATION-COLUMN (NUMBER+ (STREAM-LOCATION-COLUMN STREAM-LOCATION) 1) STREAM-LOCATION))))))))) X)) (G3132 (STREAM-LOCATION-TABSIZE STREAM-LOCATION))))) (G3131 (STREAM-LOCATION-COLUMN STREAM-LOCATION))))) (G3130 (STREAM-LOCATION-LINE STREAM-LOCATION))))) (G3129 (STREAM-LOCATION-ID STREAM-LOCATION))))) (G3128 (STREAM-LOCATION-TRACK? STREAM-LOCATION))))) (G3127 STREAM-LOCATION))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%TRACK-LOCATION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-TRACK? (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-TABSIZE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))) (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS 'ID (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'TABSIZE (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'TRACK? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1081 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1079 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1081 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1080 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1081 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS 'STREAM-LOCATION (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1081 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1081 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1079 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1080 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 10 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 1 (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 9 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'NEXT-TABULATOR-COLUMN (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'TABSIZE COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 31 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LOCATION-COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER+ (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL)) (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STREAM-LOCATION COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))))))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%TRACK-LOCATION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN STREAM-PRINC (X STR) (COMMON-LISP:BLOCK STREAM-PRINC (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (CONS? X) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3135 (~G1084) (COMMON-LISP:LABELS ((G3136 (!) (COMMON-LISP:TAGBODY ~G1082 (? (NOT ~G1084) (COMMON-LISP:GO ~G1083)) (COMMON-LISP:SETQ ! (COMMON-LISP:CAR ~G1084)) (STREAM-PRINC ! STR) (COMMON-LISP:SETQ ~G1084 (COMMON-LISP:CDR ~G1084)) (COMMON-LISP:GO ~G1082) ~G1083 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN X))))) (G3136 COMMON-LISP:NIL)))) (G3135 X))) (? (NOT (? (STRING? X) (ZERO? (COMMON-LISP:LENGTH X)))) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-LAST-CHAR (? (STRING? X) (COMMON-LISP:ELT X (-- (COMMON-LISP:LENGTH X))) X) STR)) (%TRACK-LOCATION (STREAM-OUTPUT-LOCATION STR) X) (FUNCALL (STREAM-FUN-OUT STR) X STR))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'STREAM-PRINC *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CONS? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1084 (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '! (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1082 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1084 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1083 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1084 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS '! (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1084 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1084 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1082 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1083 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:ELT (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS '-- (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LENGTH (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-OUTPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-FUN-OUT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'STREAM-PRINC))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-PEEKED-CHAR (STR) (COMMON-LISP:BLOCK READ-PEEKED-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3137 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-PEEKED-CHAR COMMON-LISP:NIL STR)) !)))) (G3137 (STREAM-PEEKED-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-PEEKED-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-PEEKED-CHAR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CHAR-0 (STR) (COMMON-LISP:BLOCK READ-CHAR-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3138 (~G1085) (? ~G1085 ~G1085 (COMMON-LISP:PROGN (=-STREAM-LAST-CHAR (FUNCALL (STREAM-FUN-IN STR) STR) STR))))) (G3138 (READ-PEEKED-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CHAR-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1085 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1085 (COMMON-LISP:CONS '~G1085 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-LAST-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'FUNCALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-FUN-IN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-PEEKED-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CHAR-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CHAR (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (%TRACK-LOCATION (STREAM-INPUT-LOCATION STR) (READ-CHAR-0 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '%TRACK-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CHAR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PEEK-CHAR (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK PEEK-CHAR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3139 (~G1086) (? ~G1086 ~G1086 (COMMON-LISP:PROGN (=-STREAM-PEEKED-CHAR (READ-CHAR-0 STR) STR))))) (G3139 (STREAM-PEEKED-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PEEK-CHAR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1086 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1086 (COMMON-LISP:CONS '~G1086 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-PEEKED-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PEEKED-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PEEK-CHAR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DEFAULT-STREAM (X) (COMMON-LISP:BLOCK DEFAULT-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3140 (~G1087) (? (EQ ~G1087 COMMON-LISP:NIL) (MAKE-STRING-STREAM) (EQ ~G1087 COMMON-LISP:T) *STANDARD-OUTPUT* X))) (G3140 X))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DEFAULT-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1087 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1087 (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STRING-STREAM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1087 (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL))) (COMMON-LISP:CONS '*STANDARD-OUTPUT* (COMMON-LISP:CONS 'X COMMON-LISP:NIL)))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DEFAULT-STREAM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (%DEFMACRO WITH-DEFAULT-STREAM (NSTR STR COMMON-LISP:&REST BODY) (COMMON-LISP:BLOCK WITH-DEFAULT-STREAM (COMMON-LISP:LABELS ((G3141 (G) (COMMON-LISP:LABELS ((G3142 (BODY-RESULT) (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS G (COMMON-LISP:CONS STR (COMMON-LISP:CONS NSTR (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS G COMMON-LISP:NIL)) (COMMON-LISP:CONS BODY-RESULT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (APPEND BODY COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS G (COMMON-LISP:CONS BODY-RESULT (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS NSTR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))))) (G3142 (GENSYM))))) (G3141 (GENSYM))))))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STRING-STREAM (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STRING-STREAM COMMON-LISP:NIL (COMMON-LISP:BLOCK MAKE-STRING-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (MAKE-STREAM :USER-DETAIL (MAKE-QUEUE) :FUN-IN #'(COMMON-LISP:LAMBDA (STR) (COMMON-LISP:LABELS ((G3143 (!) (? (STRING? (COMMON-LISP:CAR !)) (COMMON-LISP:PROGN (COMMON-LISP:PROGN (=-STREAM-USER-DETAIL (MAKE-QUEUE) STR)) (ENQUEUE-LIST (STREAM-USER-DETAIL STR) (APPEND (STRING-LIST (COMMON-LISP:CAR !)) (COMMON-LISP:CDR !))))))) (G3143 (QUEUE-LIST (STREAM-USER-DETAIL STR)))) (QUEUE-POP (STREAM-USER-DETAIL STR))) :FUN-OUT #'(COMMON-LISP:LAMBDA (X STR) (ENQUEUE (STREAM-USER-DETAIL STR) X)) :FUN-EOF #'(COMMON-LISP:LAMBDA (STR) (NOT (QUEUE-LIST (STREAM-USER-DETAIL STR)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STRING-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STRING-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS ':USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-QUEUE COMMON-LISP:NIL) (COMMON-LISP:CONS ':FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-QUEUE COMMON-LISP:NIL) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ENQUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'APPEND (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-POP (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ENQUEUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-LIST (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STRING-STREAM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-STREAM-STRING (STR) (COMMON-LISP:BLOCK GET-STREAM-STRING (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3144 (~G1088) (COMMON-LISP:PROGN (=-STREAM-USER-DETAIL (MAKE-QUEUE) STR)) ~G1088)) (G3144 (QUEUE-STRING (STREAM-USER-DETAIL STR))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-STREAM-STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1088 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '=-STREAM-USER-DETAIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-QUEUE COMMON-LISP:NIL) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1088 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUEUE-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-USER-DETAIL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-STREAM-STRING))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'MAKE-STREAM-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION COMMON-LISP:NIL) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':TRACK? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN MAKE-STREAM-STREAM (COMMON-LISP:&KEY STREAM (INPUT-LOCATION (MAKE-STREAM-LOCATION)) (OUTPUT-LOCATION (MAKE-STREAM-LOCATION :TRACK? COMMON-LISP:NIL))) (COMMON-LISP:BLOCK MAKE-STREAM-STREAM (COMMON-LISP:BLOCK COMMON-LISP:NIL (MAKE-STREAM :HANDLE STREAM :INPUT-LOCATION INPUT-LOCATION :OUTPUT-LOCATION OUTPUT-LOCATION :FUN-IN #'(COMMON-LISP:LAMBDA (_) (%READ-CHAR (STREAM-HANDLE _))) :FUN-OUT #'(COMMON-LISP:LAMBDA (C STR) (%PRINC C (STREAM-HANDLE STR))) :FUN-EOF #'(COMMON-LISP:LAMBDA (_) (%FEOF (STREAM-HANDLE _))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'MAKE-STREAM-STREAM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION COMMON-LISP:NIL) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':TRACK? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'MAKE-STREAM-STREAM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM (COMMON-LISP:CONS ':HANDLE (COMMON-LISP:CONS 'STREAM (COMMON-LISP:CONS ':INPUT-LOCATION (COMMON-LISP:CONS 'INPUT-LOCATION (COMMON-LISP:CONS ':OUTPUT-LOCATION (COMMON-LISP:CONS 'OUTPUT-LOCATION (COMMON-LISP:CONS ':FUN-IN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%READ-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-OUT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%PRINC (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS ':FUN-EOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '%FEOF (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'MAKE-STREAM-STREAM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%FOPEN-DIRECTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %FOPEN-DIRECTION (DIRECTION) (COMMON-LISP:BLOCK %FOPEN-DIRECTION (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3145 (~G1089) (? (EQUAL ~G1089 'INPUT) "r" (EQUAL ~G1089 'OUTPUT) "w" (EQUAL ~G1089 'APPEND) "a" (ERROR ":DIRECTION isn't specified.")))) (G3145 DIRECTION))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%FOPEN-DIRECTION *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%FOPEN-DIRECTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1089 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS '~G1089 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS "r" (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS '~G1089 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'OUTPUT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS "w" (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS '~G1089 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'APPEND COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS "a" (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS ":DIRECTION isn't specified." COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%FOPEN-DIRECTION))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'OPEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATH (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN OPEN (PATH COMMON-LISP:&KEY DIRECTION) (COMMON-LISP:BLOCK OPEN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3146 (!) (? ! (MAKE-STREAM-STREAM :STREAM ! :INPUT-LOCATION (MAKE-STREAM-LOCATION :ID PATH)) (ERROR "Couldn't open file `~A'." PATH)))) (G3146 (%FOPEN PATH (%FOPEN-DIRECTION DIRECTION))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'OPEN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATH (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'OPEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS '%FOPEN (COMMON-LISP:CONS 'PATH (COMMON-LISP:CONS (COMMON-LISP:CONS '%FOPEN-DIRECTION (COMMON-LISP:CONS 'DIRECTION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-STREAM (COMMON-LISP:CONS ':STREAM (COMMON-LISP:CONS '! (COMMON-LISP:CONS ':INPUT-LOCATION (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STREAM-LOCATION (COMMON-LISP:CONS ':ID (COMMON-LISP:CONS 'PATH COMMON-LISP:NIL))) COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Couldn't open file `~A'." (COMMON-LISP:CONS 'PATH COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'OPEN))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'CLOSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN CLOSE (STR) (COMMON-LISP:BLOCK CLOSE (COMMON-LISP:BLOCK COMMON-LISP:NIL (%FCLOSE (STREAM-HANDLE STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'CLOSE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'CLOSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '%FCLOSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-HANDLE (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'CLOSE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN NUMBER-DIGIT (X) (COMMON-LISP:BLOCK NUMBER-DIGIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (CODE-CHAR (+ X #\0))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'NUMBER-DIGIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'CODE-CHAR (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\0 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'NUMBER-DIGIT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER-CHARS-0 (X) (COMMON-LISP:BLOCK INTEGER-CHARS-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3147 (!) (COMMON-LISP:CONS (NUMBER-DIGIT !) (? (<= 10 X) (INTEGER-CHARS-0 (/ (- X !) 10)))))) (G3147 (INTEGER (COMMON-LISP:MOD X 10))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER-CHARS-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '<= (COMMON-LISP:CONS 10 (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS '/ (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER-CHARS-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'INTEGER-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN INTEGER-CHARS (X) (COMMON-LISP:BLOCK INTEGER-CHARS (COMMON-LISP:BLOCK COMMON-LISP:NIL (REVERSE (INTEGER-CHARS-0 (INTEGER (ABS X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'INTEGER-CHARS *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'INTEGER-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'REVERSE (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'ABS (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'INTEGER-CHARS))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FRACTION-CHARS-0 (X) (COMMON-LISP:BLOCK FRACTION-CHARS-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3148 (!) (? (< 0 !) (COMMON-LISP:CONS (NUMBER-DIGIT !) (FRACTION-CHARS-0 !))))) (G3148 (COMMON-LISP:MOD (* X 10) 10)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FRACTION-CHARS-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 0 (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER-DIGIT (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FRACTION-CHARS-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'FRACTION-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN FRACTION-CHARS (X) (COMMON-LISP:BLOCK FRACTION-CHARS (COMMON-LISP:BLOCK COMMON-LISP:NIL (FRACTION-CHARS-0 (COMMON-LISP:MOD (ABS X) 1))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'FRACTION-CHARS *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'FRACTION-CHARS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRACTION-CHARS-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS (COMMON-LISP:CONS 'ABS (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'FRACTION-CHARS))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PRINC-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PRINC-NUMBER (X STR) (COMMON-LISP:BLOCK PRINC-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (< X 0) (PRINC #\- STR)) (STREAM-PRINC (INTEGER-CHARS X) STR) (COMMON-LISP:LABELS ((G3149 (!) (? (NOT (ZERO? !)) (COMMON-LISP:PROGN (PRINC #\. STR) (STREAM-PRINC (FRACTION-CHARS !) STR))))) (G3149 (COMMON-LISP:MOD X 1)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PRINC-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PRINC-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '< (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS #\- (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER-CHARS (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'ZERO? (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS #\. (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'FRACTION-CHARS (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS 'STR COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:MOD (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 1 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PRINC-NUMBER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PRINC (X COMMON-LISP:&OPTIONAL (STR *STANDARD-OUTPUT*)) (COMMON-LISP:BLOCK PRINC (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3150 (~G1090) (COMMON-LISP:LABELS ((G3151 (S) (COMMON-LISP:LABELS ((G3152 (~G1091) (? ~G1090 ~G1091 (GET-STREAM-STRING S)))) (G3152 (COMMON-LISP:PROGN (? (STRING? X) (STREAM-PRINC X S) (CHARACTER? X) (STREAM-PRINC X S) (NUMBER? X) (PRINC-NUMBER X S) (SYMBOL? X) (STREAM-PRINC (SYMBOL-NAME X) S)) X))))) (G3151 (DEFAULT-STREAM ~G1090))))) (G3150 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PRINC *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-OUTPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1090 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DEFAULT-STREAM (COMMON-LISP:CONS '~G1090 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1091 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NUMBER? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC-NUMBER (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-NAME (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1090 (COMMON-LISP:CONS '~G1091 (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-STREAM-STRING (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PRINC))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SPLIT-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SPLIT-IF (PREDICATE SEQ COMMON-LISP:&KEY (INCLUDE? COMMON-LISP:NIL)) (COMMON-LISP:BLOCK SPLIT-IF (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (COMMON-LISP:LABELS ((G3153 (!) (? ! (COMMON-LISP:CONS (SUBSEQ SEQ 0 (? INCLUDE? (++ !) !)) (SPLIT-IF PREDICATE (SUBSEQ SEQ (++ !)) :INCLUDE? INCLUDE?)) (COMMON-LISP:LIST SEQ)))) (G3153 (POSITION-IF PREDICATE SEQ))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SPLIT-IF *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SPLIT-IF (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'POSITION-IF (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPLIT-IF (COMMON-LISP:CONS 'PREDICATE (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS ':INCLUDE? (COMMON-LISP:CONS 'INCLUDE? COMMON-LISP:NIL))))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SPLIT-IF))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GENERIC-SPLIT (OBJ SEQ COMMON-LISP:&KEY (TEST #'EQL) (INCLUDE? COMMON-LISP:NIL)) (COMMON-LISP:BLOCK GENERIC-SPLIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (? SEQ (COMMON-LISP:LABELS ((G3154 (!) (? ! (COMMON-LISP:CONS (SUBSEQ SEQ 0 (? INCLUDE? (++ !) !)) (GENERIC-SPLIT OBJ (SUBSEQ SEQ (++ !)) :TEST TEST :INCLUDE? INCLUDE?)) (COMMON-LISP:LIST SEQ)))) (G3154 (POSITION OBJ SEQ :TEST TEST))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GENERIC-SPLIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'POSITION (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 0 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS (COMMON-LISP:CONS 'SUBSEQ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS (COMMON-LISP:CONS '++ (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS ':INCLUDE? (COMMON-LISP:CONS 'INCLUDE? COMMON-LISP:NIL))))))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%!? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'SEQ COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GENERIC-SPLIT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SPLIT (OBJ SEQ COMMON-LISP:&KEY (TEST #'EQL) (INCLUDE? COMMON-LISP:NIL)) (COMMON-LISP:BLOCK SPLIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (GENERIC-SPLIT OBJ SEQ :TEST TEST :INCLUDE? INCLUDE?)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SPLIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS 'COMMON-LISP:&KEY (COMMON-LISP:CONS (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS 'EQL COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INCLUDE? (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SPLIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'GENERIC-SPLIT (COMMON-LISP:CONS 'OBJ (COMMON-LISP:CONS 'SEQ (COMMON-LISP:CONS ':TEST (COMMON-LISP:CONS 'TEST (COMMON-LISP:CONS ':INCLUDE? (COMMON-LISP:CONS 'INCLUDE? COMMON-LISP:NIL))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SPLIT))
(COMMON-LISP:SETQ *FUNCTIONALS* (%NCONC (COMMON-LISP:CONS 'DIGIT-NUMBER COMMON-LISP:NIL) *FUNCTIONALS*))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN DIGIT-NUMBER (X) (COMMON-LISP:BLOCK DIGIT-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (- X #\0)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'DIGIT-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '- (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\0 COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'DIGIT-NUMBER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PEEK-DIGIT (STR) (COMMON-LISP:BLOCK PEEK-DIGIT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3155 (!) (? ! (COMMON-LISP:PROGN (? (DIGIT-CHAR? !) !))))) (G3155 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PEEK-DIGIT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PEEK-DIGIT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'PEEK-DOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN PEEK-DOT (STR) (COMMON-LISP:BLOCK PEEK-DOT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3156 (!) (? ! (COMMON-LISP:PROGN (== #\. !))))) (G3156 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'PEEK-DOT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'PEEK-DOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS '! COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'PEEK-DOT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-DECIMAL-PLACES-0 (STR V S) (COMMON-LISP:BLOCK READ-DECIMAL-PLACES-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-DIGIT STR) (READ-DECIMAL-PLACES-0 STR (+ V (* S (DIGIT-NUMBER (READ-CHAR STR)))) (/ S 10)) V)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-DECIMAL-PLACES-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS 'V (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '/ (COMMON-LISP:CONS 'S (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS 'V COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-DECIMAL-PLACES-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-DECIMAL-PLACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-DECIMAL-PLACES (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-DECIMAL-PLACES (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:LABELS ((G3157 (!) (? ! (DIGIT-CHAR? !)))) (G3157 (PEEK-CHAR STR))) (READ-DECIMAL-PLACES-0 STR 0 0.1))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-DECIMAL-PLACES *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-DECIMAL-PLACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-DECIMAL-PLACES-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 0 (COMMON-LISP:CONS 0.1 COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-DECIMAL-PLACES))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-INTEGER-0 (STR V) (COMMON-LISP:BLOCK READ-INTEGER-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-DIGIT STR) (READ-INTEGER-0 STR (+ (* V 10) (DIGIT-NUMBER (READ-CHAR STR)))) V)))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-INTEGER-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'V COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS 'V (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS 'V COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-INTEGER-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-INTEGER (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-INTEGER (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-DIGIT STR) (INTEGER (READ-INTEGER-0 STR 0)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-INTEGER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DIGIT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'INTEGER (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-INTEGER-0 (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 0 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-INTEGER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-NUMBER (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ-NUMBER (COMMON-LISP:BLOCK COMMON-LISP:NIL (* (? (== #\- (PEEK-CHAR STR)) (COMMON-LISP:PROGN (READ-CHAR STR) -1) 1) (+ (READ-INTEGER STR) (COMMON-LISP:LABELS ((G3158 (~G1092) (? ~G1092 ~G1092 0))) (G3158 (? (PEEK-DOT STR) (? (READ-CHAR STR) (READ-DECIMAL-PLACES STR)))))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-NUMBER *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '* (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\- (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS -1 COMMON-LISP:NIL))) (COMMON-LISP:CONS 1 COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '+ (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-INTEGER (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1092 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1092 (COMMON-LISP:CONS '~G1092 (COMMON-LISP:CONS 0 COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-DOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-DECIMAL-PLACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-NUMBER))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN TOKEN-IS-QUOTE? (X) (COMMON-LISP:BLOCK TOKEN-IS-QUOTE? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3159 (~G1121) (? ~G1121 ~G1121 (COMMON-LISP:LABELS ((G3160 (~G1122) (? ~G1122 ~G1122 (COMMON-LISP:LABELS ((G3161 (~G1123) (? ~G1123 ~G1123 (COMMON-LISP:LABELS ((G3162 (~G1124) (? ~G1124 ~G1124 (EQ X 'ACCENT-CIRCONFLEX)))) (G3162 (EQ X 'QUASIQUOTE-SPLICE)))))) (G3161 (EQ X 'QUASIQUOTE)))))) (G3160 (EQ X 'BACKQUOTE)))))) (G3159 (EQ X 'COMMON-LISP:QUOTE)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'TOKEN-IS-QUOTE? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1121 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:QUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1121 (COMMON-LISP:CONS '~G1121 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1122 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BACKQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1122 (COMMON-LISP:CONS '~G1122 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1123 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1123 (COMMON-LISP:CONS '~G1123 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1124 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1124 (COMMON-LISP:CONS '~G1124 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ACCENT-CIRCONFLEX COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'TOKEN-IS-QUOTE?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %READ-CLOSING-BRACKET? (X) (COMMON-LISP:BLOCK %READ-CLOSING-BRACKET? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3163 (~G1125) (? ~G1125 ~G1125 (COMMON-LISP:LABELS ((G3164 (~G1126) (? ~G1126 ~G1126 (EQ X 'CURLY-BRACKET-CLOSE)))) (G3164 (EQ X 'SQUARE-BRACKET-CLOSE)))))) (G3163 (EQ X 'BRACKET-CLOSE)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%READ-CLOSING-BRACKET? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1125 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-CLOSE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1125 (COMMON-LISP:CONS '~G1125 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1126 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-CLOSE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1126 (COMMON-LISP:CONS '~G1126 (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-CLOSE COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%READ-CLOSING-BRACKET?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SPECIAL-CHAR? (X) (COMMON-LISP:BLOCK SPECIAL-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3165 (~G1127) (? ~G1127 ~G1127 (COMMON-LISP:LABELS ((G3166 (~G1128) (? ~G1128 ~G1128 (COMMON-LISP:LABELS ((G3167 (~G1129) (? ~G1129 ~G1129 (COMMON-LISP:LABELS ((G3168 (~G1130) (? ~G1130 ~G1130 (COMMON-LISP:LABELS ((G3169 (~G1131) (? ~G1131 ~G1131 (COMMON-LISP:LABELS ((G3170 (~G1132) (? ~G1132 ~G1132 (COMMON-LISP:LABELS ((G3171 (~G1133) (? ~G1133 ~G1133 (COMMON-LISP:LABELS ((G3172 (~G1134) (? ~G1134 ~G1134 (COMMON-LISP:LABELS ((G3173 (~G1135) (? ~G1135 ~G1135 (COMMON-LISP:LABELS ((G3174 (~G1136) (? ~G1136 ~G1136 (COMMON-LISP:LABELS ((G3175 (~G1137) (? ~G1137 ~G1137 (COMMON-LISP:LABELS ((G3176 (~G1138) (? ~G1138 ~G1138 (COMMON-LISP:LABELS ((G3177 (~G1139) (? ~G1139 ~G1139 (== X #\^)))) (G3177 (== X #\#)))))) (G3176 (== X #\")))))) (G3175 (== X #\;)))))) (G3174 (== X #\:)))))) (G3173 (== X #\,)))))) (G3172 (== X #\`)))))) (G3171 (== X #\')))))) (G3170 (== X #\})))))) (G3169 (== X #\{)))))) (G3168 (== X #\])))))) (G3167 (== X #\[)))))) (G3166 (== X #\))))))) (G3165 (== X #\()))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SPECIAL-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1127 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\( COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1127 (COMMON-LISP:CONS '~G1127 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1128 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1128 (COMMON-LISP:CONS '~G1128 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1129 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\[ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1129 (COMMON-LISP:CONS '~G1129 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1130 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\] COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1130 (COMMON-LISP:CONS '~G1130 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1131 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\{ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1131 (COMMON-LISP:CONS '~G1131 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1132 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\} COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1132 (COMMON-LISP:CONS '~G1132 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1133 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\' COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1133 (COMMON-LISP:CONS '~G1133 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1134 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\` COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1134 (COMMON-LISP:CONS '~G1134 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1135 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\, COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1135 (COMMON-LISP:CONS '~G1135 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1136 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\: COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1136 (COMMON-LISP:CONS '~G1136 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1137 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\; COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1137 (COMMON-LISP:CONS '~G1137 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1138 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\" COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1138 (COMMON-LISP:CONS '~G1138 (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1139 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\# COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1139 (COMMON-LISP:CONS '~G1139 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'X (COMMON-LISP:CONS #\^ COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SPECIAL-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SYMBOL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SYMBOL-CHAR? (X) (COMMON-LISP:BLOCK SYMBOL-CHAR? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (> X 32) (NOT (SPECIAL-CHAR? X)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SYMBOL-CHAR? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SYMBOL-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '> (COMMON-LISP:CONS 'X (COMMON-LISP:CONS 32 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SYMBOL-CHAR?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SKIP-COMMENT (STR) (COMMON-LISP:BLOCK SKIP-COMMENT (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3178 (C) (? C (COMMON-LISP:PROGN (? (== C 10) (SKIP-SPACES STR) (SKIP-COMMENT STR)))))) (G3178 (READ-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SKIP-COMMENT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'C (COMMON-LISP:CONS 10 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SKIP-COMMENT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN SKIP-SPACES (STR) (COMMON-LISP:BLOCK SKIP-SPACES (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3179 (C) (? C (COMMON-LISP:PROGN (? (== #\; C) (COMMON-LISP:PROGN (SKIP-COMMENT STR))) (? (WHITESPACE? C) (COMMON-LISP:PROGN (READ-CHAR STR) (SKIP-SPACES STR))))))) (G3179 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'SKIP-SPACES *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\; (COMMON-LISP:CONS 'C COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'WHITESPACE? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'SKIP-SPACES))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-SYMBOL-0 (STR) (COMMON-LISP:BLOCK GET-SYMBOL-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3180 (C) (? (== #\; C) (COMMON-LISP:PROGN (SKIP-COMMENT STR) (GET-SYMBOL-0 STR)) (? (SYMBOL-CHAR? C) (COMMON-LISP:CONS (CHAR-UPCASE (READ-CHAR STR)) (GET-SYMBOL-0 STR)))))) (G3180 (CHAR-UPCASE (PEEK-CHAR STR))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-SYMBOL-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\; (COMMON-LISP:CONS 'C COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-COMMENT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYMBOL-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHAR-UPCASE (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-SYMBOL-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-SYMBOL (STR) (COMMON-LISP:BLOCK GET-SYMBOL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3181 (C) (? C (COMMON-LISP:PROGN (? (NOT (SPECIAL-CHAR? C)) (COMMON-LISP:PROGN (GET-SYMBOL-0 STR))))))) (G3181 (PEEK-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-SYMBOL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS 'C (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPECIAL-CHAR? (COMMON-LISP:CONS 'C COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-SYMBOL))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'GET-SYMBOL-AND-PACKAGE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN GET-SYMBOL-AND-PACKAGE (STR) (COMMON-LISP:BLOCK GET-SYMBOL-AND-PACKAGE (COMMON-LISP:BLOCK COMMON-LISP:NIL (SKIP-SPACES STR) (COMMON-LISP:LABELS ((G3182 (SYM) (COMMON-LISP:LABELS ((G3183 (!) (? ! (COMMON-LISP:PROGN (? (== ! #\:) (VALUES (COMMON-LISP:LABELS ((G3184 (~G1093) (? ~G1093 ~G1093 COMMON-LISP:T))) (G3184 SYM)) (? (READ-CHAR STR) (GET-SYMBOL STR))) (VALUES COMMON-LISP:NIL SYM)))))) (G3183 (PEEK-CHAR STR))))) (G3182 (GET-SYMBOL STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'GET-SYMBOL-AND-PACKAGE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'GET-SYMBOL-AND-PACKAGE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS '! (COMMON-LISP:CONS #\: COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1093 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1093 (COMMON-LISP:CONS '~G1093 (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'GET-SYMBOL-AND-PACKAGE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-STRING-0 (STR) (COMMON-LISP:BLOCK READ-STRING-0 (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3185 (C) (? (NOT (== C #\")) (COMMON-LISP:PROGN (COMMON-LISP:CONS (? (== C #\\) (READ-CHAR STR) C) (READ-STRING-0 STR)))))) (G3185 (READ-CHAR STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-STRING-0 *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'C COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\" COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS 'C (COMMON-LISP:CONS #\\ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS 'C COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-STRING-0))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-STRING (STR) (COMMON-LISP:BLOCK READ-STRING (COMMON-LISP:BLOCK COMMON-LISP:NIL (LIST-STRING (READ-STRING-0 STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-STRING *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-STRING-0 (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-STRING))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-COMMENT-BLOCK (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-COMMENT-BLOCK (STR) (COMMON-LISP:BLOCK READ-COMMENT-BLOCK (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:PROGN (COMMON-LISP:TAGBODY ~G1140 (? (NOT (NOT (? (== #\| (READ-CHAR STR)) (== #\# (PEEK-CHAR STR))))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN (READ-CHAR STR)))) COMMON-LISP:NIL (COMMON-LISP:GO ~G1140))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-COMMENT-BLOCK *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-COMMENT-BLOCK (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1140 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\| (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\# (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1140 COMMON-LISP:NIL)) COMMON-LISP:NIL))))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-COMMENT-BLOCK))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'LIST-NUMBER? (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN LIST-NUMBER? (X) (COMMON-LISP:BLOCK LIST-NUMBER? (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (COMMON-LISP:LABELS ((G3186 (~G1095) (? ~G1095 ~G1095 (DIGIT-CHAR? (COMMON-LISP:CAR X))))) (G3186 (? (COMMON-LISP:CDR X) (COMMON-LISP:LABELS ((G3187 (~G1094) (? ~G1094 ~G1094 (== #\. (COMMON-LISP:CAR X))))) (G3187 (== #\- (COMMON-LISP:CAR X))))))) (? (COMMON-LISP:CDR X) (EVERY #'(COMMON-LISP:LAMBDA (_) (COMMON-LISP:LABELS ((G3188 (~G1161) (? ~G1161 ~G1161 (== #\. _)))) (G3188 (DIGIT-CHAR? _)))) (COMMON-LISP:CDR X)) COMMON-LISP:T))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'LIST-NUMBER? *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'LIST-NUMBER? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1095 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1095 (COMMON-LISP:CONS '~G1095 (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1094 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1094 (COMMON-LISP:CONS '~G1094 (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\- (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EVERY (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'DIGIT-CHAR? (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS '_ COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:T COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'LIST-NUMBER?))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-TOKEN (STR) (COMMON-LISP:BLOCK READ-TOKEN (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3189 (!) (? ! (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3190 (~G1141) (COMMON-LISP:LABELS ((G3191 (~G1142) (? (NOT (EQ (COMMON-LISP:CAR ~G1141) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1141))) (COMMON-LISP:LABELS ((G3192 (PKG) (COMMON-LISP:LABELS ((G3193 (~G1143) (COMMON-LISP:LABELS ((G3194 (SYM) (VALUES (? (? SYM (? (NOT (COMMON-LISP:CDR SYM)) (== #\. (COMMON-LISP:CAR SYM)))) 'DOT (? SYM (? (LIST-NUMBER? SYM) 'NUMBER 'SYMBOL) (COMMON-LISP:LABELS ((G3195 (~G1097) (? (CHARACTER== ~G1097 #\() 'BRACKET-OPEN (CHARACTER== ~G1097 #\)) 'BRACKET-CLOSE (CHARACTER== ~G1097 #\[) 'SQUARE-BRACKET-OPEN (CHARACTER== ~G1097 #\]) 'SQUARE-BRACKET-CLOSE (CHARACTER== ~G1097 #\{) 'CURLY-BRACKET-OPEN (CHARACTER== ~G1097 #\}) 'CURLY-BRACKET-CLOSE (CHARACTER== ~G1097 #\') 'COMMON-LISP:QUOTE (CHARACTER== ~G1097 #\`) 'BACKQUOTE (CHARACTER== ~G1097 #\^) 'ACCENT-CIRCONFLEX (CHARACTER== ~G1097 #\") 'DBLQUOTE (CHARACTER== ~G1097 #\,) (? (== #\@ (PEEK-CHAR STR)) (? (READ-CHAR STR) 'QUASIQUOTE-SPLICE) 'QUASIQUOTE) (CHARACTER== ~G1097 #\#) (COMMON-LISP:LABELS ((G3196 (~G1096) (? (CHARACTER== ~G1096 #\\) 'CHAR (CHARACTER== ~G1096 #\x) 'HEXNUM (CHARACTER== ~G1096 #\') 'COMMON-LISP:FUNCTION (CHARACTER== ~G1096 #\|) (READ-COMMENT-BLOCK STR) (ERROR "Invalid character after '#'.")))) (G3196 (READ-CHAR STR))) (CHARACTER== ~G1097 -1) 'EOF))) (G3195 (READ-CHAR STR))))) PKG SYM))) (G3194 (COMMON-LISP:CAR ~G1143))))) (G3193 (COMMON-LISP:LABELS ((G3197 (~G1162) (? ~G1162 ~G1162 (%ERROR "Not enough VALUES.")))) (G3197 (COMMON-LISP:CDR ~G1142))))))) (G3192 (COMMON-LISP:CAR ~G1142))))) (G3191 (COMMON-LISP:CDR ~G1141))))) (G3190 !)))))) (G3189 (GET-SYMBOL-AND-PACKAGE STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-TOKEN *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1141 (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1142 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1141 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1141 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1141 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1142 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1143 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1142 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1143 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'VALUES (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DOT COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-NUMBER? (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'NUMBER COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SYMBOL COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1097 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\( COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-OPEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-CLOSE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\[ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-OPEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\] COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-CLOSE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\{ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-OPEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\} COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-CLOSE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\' COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:QUOTE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\` COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BACKQUOTE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\^ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'ACCENT-CIRCONFLEX COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\" COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DBLQUOTE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\, COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\@ (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE-SPLICE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'QUASIQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS #\# COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1096 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1096 (COMMON-LISP:CONS #\\ COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CHAR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1096 (COMMON-LISP:CONS #\x COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HEXNUM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1096 (COMMON-LISP:CONS #\' COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1096 (COMMON-LISP:CONS #\| COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-COMMENT-BLOCK (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Invalid character after '#'." COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'CHARACTER== (COMMON-LISP:CONS '~G1097 (COMMON-LISP:CONS -1 COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'EOF COMMON-LISP:NIL)) COMMON-LISP:NIL))))))))))))))))))))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'GET-SYMBOL-AND-PACKAGE (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-TOKEN))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-SLOT-VALUE (X) (COMMON-LISP:BLOCK READ-SLOT-VALUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (? X (? (COMMON-LISP:CDR X) (COMMON-LISP:CONS 'SLOT-VALUE (COMMON-LISP:CONS (READ-SLOT-VALUE (BUTLAST X)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS (MAKE-SYMBOL (COMMON-LISP:CAR (COMMON-LISP:LAST X))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (? (STRING? (COMMON-LISP:CAR X)) (MAKE-SYMBOL (COMMON-LISP:CAR X)) (COMMON-LISP:CAR X))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-SLOT-VALUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'BUTLAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'STRING? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-SLOT-VALUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-SYMBOL-OR-SLOT-VALUE (SYM PKG) (COMMON-LISP:BLOCK READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3198 (!) (? (? (COMMON-LISP:CDR !) (? (COMMON-LISP:CAR !) (COMMON-LISP:CAR (COMMON-LISP:LAST !)))) (READ-SLOT-VALUE !) (MAKE-SYMBOL (LIST-STRING SYM) (? (NOT PKG) COMMON-LISP:NIL (EQ COMMON-LISP:T PKG) *KEYWORD-PACKAGE* (COMMON-LISP:FIND-PACKAGE (LIST-STRING PKG))))))) (G3198 (FILTER #'(COMMON-LISP:LAMBDA (_) (? _ (LIST-STRING _))) (SPLIT #\. SYM))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-SYMBOL-OR-SLOT-VALUE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LAST (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-SYMBOL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS COMMON-LISP:T (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL))) (COMMON-LISP:CONS '*KEYWORD-PACKAGE* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FIND-PACKAGE (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'FILTER (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '& (COMMON-LISP:CONS '_ (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS '_ COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'SPLIT (COMMON-LISP:CONS #\. (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-SYMBOL-OR-SLOT-VALUE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-ATOM (STR TOKEN PKG SYM) (COMMON-LISP:BLOCK READ-ATOM (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3199 (~G1098) (? (EQ ~G1098 'DBLQUOTE) (READ-STRING STR) (EQ ~G1098 'CHAR) (READ-CHAR STR) (EQ ~G1098 'NUMBER) (COMMON-LISP:LABELS ((G3200 (S) (PRINC (LIST-STRING SYM) S) (COMMON-LISP:PROGN (READ-NUMBER S)))) (G3200 (MAKE-STRING-STREAM))) (EQ ~G1098 'HEXNUM) (READ-HEX STR) (EQ ~G1098 'COMMON-LISP:FUNCTION) (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (READ-EXPR STR) COMMON-LISP:NIL)) (EQ ~G1098 'SYMBOL) (READ-SYMBOL-OR-SLOT-VALUE SYM PKG) (ERROR "Syntax error: token ~A, sym ~A." TOKEN SYM)))) (G3199 TOKEN))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-ATOM *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1098 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1098 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DBLQUOTE COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-STRING (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1098 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CHAR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1098 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'NUMBER COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'S COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINC (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) (COMMON-LISP:CONS 'S COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-NUMBER (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MAKE-STRING-STREAM COMMON-LISP:NIL) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1098 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'HEXNUM COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-HEX (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1098 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1098 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SYMBOL COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SYMBOL-OR-SLOT-VALUE (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "Syntax error: token ~A, sym ~A." (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))))))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-ATOM))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-QUOTE (STR TOKEN) (COMMON-LISP:BLOCK READ-QUOTE (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LIST TOKEN (READ-EXPR STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-QUOTE *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-QUOTE))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-SET-LISTPROP (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-SET-LISTPROP (STR) (COMMON-LISP:BLOCK READ-SET-LISTPROP (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3201 (!) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* (COMMON-LISP:CONS (STREAM-LOCATION-ID !) (COMMON-LISP:CONS (MEMORIZED-NUMBER (STREAM-LOCATION-COLUMN !)) (MEMORIZED-NUMBER (STREAM-LOCATION-LINE !)))))))) (G3201 (STREAM-INPUT-LOCATION STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-SET-LISTPROP *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-SET-LISTPROP (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'MEMORIZED-NUMBER (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-SET-LISTPROP))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CONS (STR) (COMMON-LISP:BLOCK READ-CONS (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3202 (LOC) (COMMON-LISP:LABELS ((G3203 (LINE) (COMMON-LISP:LABELS ((G3204 (COLUMN) (COMMON-LISP:LABELS ((G3205 (FILE) (COMMON-LISP:LABELS ((ERR (_) (ERROR "~A in form starting at line ~A, column ~A in file ~A." _ LINE COLUMN FILE)) (F (TOKEN PKG SYM) (? (NOT (%READ-CLOSING-BRACKET? TOKEN)) (COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:LABELS ((G3206 (~G1100) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3207 (~G1103) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* ~G1100)) ~G1103)) (G3207 (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3208 (~G1099) (? (EQ ~G1099 'BRACKET-OPEN) (READ-CONS-SLOT STR) (EQ ~G1099 'SQUARE-BRACKET-OPEN) (COMMON-LISP:CONS 'SQUARE (READ-CONS-SLOT STR)) (EQ ~G1099 'CURLY-BRACKET-OPEN) (COMMON-LISP:CONS 'CURLY (READ-CONS-SLOT STR)) (? (TOKEN-IS-QUOTE? TOKEN) (READ-QUOTE STR TOKEN) (READ-ATOM STR TOKEN PKG SYM))))) (G3208 TOKEN))))))) (G3206 *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3209 (~G1102) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3210 (~G1109) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* ~G1102)) ~G1109)) (G3210 (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3211 (!) (? ! (COMMON-LISP:LABELS ((G3212 (~G1104) (COMMON-LISP:LABELS ((G3213 (~G1105) (? (NOT (EQ (COMMON-LISP:CAR ~G1104) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1104))) (COMMON-LISP:LABELS ((G3214 (TOKEN) (COMMON-LISP:LABELS ((G3215 (~G1106) (COMMON-LISP:LABELS ((G3216 (PKG) (COMMON-LISP:LABELS ((G3217 (~G1107) (COMMON-LISP:LABELS ((G3218 (SYM) (? (EQ 'DOT TOKEN) (COMMON-LISP:LABELS ((G3219 (X) (COMMON-LISP:LABELS ((G3220 (~G1112) (COMMON-LISP:LABELS ((G3221 (~G1113) (? (NOT (EQ (COMMON-LISP:CAR ~G1112) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1112))) (COMMON-LISP:LABELS ((G3222 (TOKEN) (COMMON-LISP:LABELS ((G3223 (~G1114) (COMMON-LISP:LABELS ((G3224 (PKG) (COMMON-LISP:LABELS ((G3225 (~G1115) (COMMON-LISP:LABELS ((G3226 (SYM) (COMMON-LISP:LABELS ((G3227 (~G1101) (? ~G1101 ~G1101 (ERR "Only one value allowed after dotted cons")))) (G3227 (%READ-CLOSING-BRACKET? TOKEN))) X)) (G3226 (COMMON-LISP:CAR ~G1115))))) (G3225 (COMMON-LISP:LABELS ((G3228 (~G1118) (? ~G1118 ~G1118 (%ERROR "Not enough VALUES.")))) (G3228 (COMMON-LISP:CDR ~G1114))))))) (G3224 (COMMON-LISP:CAR ~G1114))))) (G3223 (COMMON-LISP:LABELS ((G3229 (~G1117) (? ~G1117 ~G1117 (%ERROR "Not enough VALUES.")))) (G3229 (COMMON-LISP:CDR ~G1113))))))) (G3222 (COMMON-LISP:CAR ~G1113))))) (G3221 (COMMON-LISP:CDR ~G1112))))) (G3220 (READ-TOKEN STR))))) (G3219 (READ-EXPR STR))) (F TOKEN PKG SYM)))) (G3218 (COMMON-LISP:CAR ~G1107))))) (G3217 (COMMON-LISP:LABELS ((G3230 (~G1111) (? ~G1111 ~G1111 (%ERROR "Not enough VALUES.")))) (G3230 (COMMON-LISP:CDR ~G1106))))))) (G3216 (COMMON-LISP:CAR ~G1106))))) (G3215 (COMMON-LISP:LABELS ((G3231 (~G1110) (? ~G1110 ~G1110 (%ERROR "Not enough VALUES.")))) (G3231 (COMMON-LISP:CDR ~G1105))))))) (G3214 (COMMON-LISP:CAR ~G1105))))) (G3213 (COMMON-LISP:CDR ~G1104))))) (G3212 !)) (ERR "Missing closing bracket")))) (G3211 (READ-TOKEN STR)))))))) (G3209 *DEFAULT-LISTPROP*))))))) (COMMON-LISP:LABELS ((G3232 (~G1145) (COMMON-LISP:LABELS ((G3233 (~G1146) (? (NOT (EQ (COMMON-LISP:CAR ~G1145) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1145))) (COMMON-LISP:LABELS ((G3234 (TOKEN) (COMMON-LISP:LABELS ((G3235 (~G1147) (COMMON-LISP:LABELS ((G3236 (PKG) (COMMON-LISP:LABELS ((G3237 (~G1148) (COMMON-LISP:LABELS ((G3238 (SYM) (? (EQ TOKEN 'DOT) (COMMON-LISP:CONS 'COMMON-LISP:CONS (READ-CONS STR)) (F TOKEN PKG SYM)))) (G3238 (COMMON-LISP:CAR ~G1148))))) (G3237 (COMMON-LISP:LABELS ((G3239 (~G1164) (? ~G1164 ~G1164 (%ERROR "Not enough VALUES.")))) (G3239 (COMMON-LISP:CDR ~G1147))))))) (G3236 (COMMON-LISP:CAR ~G1147))))) (G3235 (COMMON-LISP:LABELS ((G3240 (~G1163) (? ~G1163 ~G1163 (%ERROR "Not enough VALUES.")))) (G3240 (COMMON-LISP:CDR ~G1146))))))) (G3234 (COMMON-LISP:CAR ~G1146))))) (G3233 (COMMON-LISP:CDR ~G1145))))) (G3232 (READ-TOKEN STR)))))) (G3205 (STREAM-LOCATION-ID LOC))))) (G3204 (STREAM-LOCATION-COLUMN LOC))))) (G3203 (STREAM-LOCATION-LINE LOC))))) (G3202 (STREAM-INPUT-LOCATION STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CONS *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-LINE (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH (COMMON-LISP:CONS (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-COLUMN (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL)) (COMMON-LISP:CONS 'FILE (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-LOCATION-ID (COMMON-LISP:CONS 'LOC COMMON-LISP:NIL)) (COMMON-LISP:CONS 'ERR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '_ COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "~A in form starting at line ~A, column ~A in file ~A." (COMMON-LISP:CONS '_ (COMMON-LISP:CONS 'LINE (COMMON-LISP:CONS 'COLUMN (COMMON-LISP:CONS 'FILE COMMON-LISP:NIL)))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'F (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1100 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1103 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '~G1100 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1103 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1099 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1099 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1099 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1099 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1102 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1109 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '~G1102 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1109 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1104 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1105 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1104 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1104 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1106 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1107 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DOT COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1112 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1113 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1112 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1112 COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1114 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1115 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1101 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1101 (COMMON-LISP:CONS '~G1101 (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERR (COMMON-LISP:CONS "Only one value allowed after dotted cons" COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%READ-CLOSING-BRACKET? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'X COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1115 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1118 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1118 (COMMON-LISP:CONS '~G1118 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1114 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1114 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1117 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1117 (COMMON-LISP:CONS '~G1117 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1113 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1113 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1112 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'F (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1107 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1111 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1111 (COMMON-LISP:CONS '~G1111 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1106 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1106 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1110 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS '~G1110 (COMMON-LISP:CONS '~G1110 (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1105 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1105 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1104 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS '! COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERR (COMMON-LISP:CONS "Missing closing bracket" COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))))))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1145 (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1146 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1145 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1145 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1145 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1146 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1147 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1146 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1147 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1148 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1147 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1148 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'DOT COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'COMMON-LISP:CONS COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'F (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STREAM-INPUT-LOCATION (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CONS))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-CONS-SLOT (STR) (COMMON-LISP:BLOCK READ-CONS-SLOT (COMMON-LISP:BLOCK COMMON-LISP:NIL (READ-SET-LISTPROP STR) (COMMON-LISP:LABELS ((G3241 (~G1119) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* *DEFAULT-LISTPROP*)) (COMMON-LISP:LABELS ((G3242 (~G1155) (COMMON-LISP:PROGN (COMMON-LISP:SETQ *DEFAULT-LISTPROP* ~G1119)) ~G1155)) (G3242 (COMMON-LISP:PROGN (COMMON-LISP:LABELS ((G3243 (!) (? (== #\. (PEEK-CHAR STR)) (COMMON-LISP:PROGN (READ-CHAR STR) (COMMON-LISP:LABELS ((G3244 (~G1150) (COMMON-LISP:LABELS ((G3245 (~G1151) (? (NOT (EQ (COMMON-LISP:CAR ~G1150) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1150))) (COMMON-LISP:LABELS ((G3246 (TOKEN) (COMMON-LISP:LABELS ((G3247 (~G1152) (COMMON-LISP:LABELS ((G3248 (PKG) (COMMON-LISP:LABELS ((G3249 (~G1153) (COMMON-LISP:LABELS ((G3250 (SYM) (READ-SLOT-VALUE (COMMON-LISP:LIST ! (LIST-STRING SYM))))) (G3250 (COMMON-LISP:CAR ~G1153))))) (G3249 (COMMON-LISP:LABELS ((G3251 (~G1166) (? ~G1166 ~G1166 (%ERROR "Not enough VALUES.")))) (G3251 (COMMON-LISP:CDR ~G1152))))))) (G3248 (COMMON-LISP:CAR ~G1152))))) (G3247 (COMMON-LISP:LABELS ((G3252 (~G1165) (? ~G1165 ~G1165 (%ERROR "Not enough VALUES.")))) (G3252 (COMMON-LISP:CDR ~G1151))))))) (G3246 (COMMON-LISP:CAR ~G1151))))) (G3245 (COMMON-LISP:CDR ~G1150))))) (G3244 (READ-TOKEN STR)))) !))) (G3243 (READ-CONS STR)))))))) (G3241 *DEFAULT-LISTPROP*))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-CONS-SLOT *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SET-LISTPROP (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1119 (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '*DEFAULT-LISTPROP* COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1155 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS '== (COMMON-LISP:CONS #\. (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1150 (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1151 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1150 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1150 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1150 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1151 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1152 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1151 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1152 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1153 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1152 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1153 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-SLOT-VALUE (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:LIST (COMMON-LISP:CONS '! (COMMON-LISP:CONS (COMMON-LISP:CONS 'LIST-STRING (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) (COMMON-LISP:CONS '! COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '*DEFAULT-LISTPROP* (COMMON-LISP:CONS '~G1119 COMMON-LISP:NIL))) COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1155 COMMON-LISP:NIL))))) COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-CONS-SLOT))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-EXPR (STR) (COMMON-LISP:BLOCK READ-EXPR (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3253 (~G1156) (COMMON-LISP:LABELS ((G3254 (~G1157) (? (NOT (EQ (COMMON-LISP:CAR ~G1156) 'VALUES)) (COMMON-LISP:PROGN (ERROR "VALUES expected instead of ~A." ~G1156))) (COMMON-LISP:LABELS ((G3255 (TOKEN) (COMMON-LISP:LABELS ((G3256 (~G1158) (COMMON-LISP:LABELS ((G3257 (PKG) (COMMON-LISP:LABELS ((G3258 (~G1159) (COMMON-LISP:LABELS ((G3259 (SYM) (COMMON-LISP:LABELS ((G3260 (~G1120) (? (EQ ~G1120 COMMON-LISP:NIL) COMMON-LISP:NIL (EQ ~G1120 'EOF) COMMON-LISP:NIL (EQ ~G1120 'BRACKET-OPEN) (READ-CONS-SLOT STR) (EQ ~G1120 'SQUARE-BRACKET-OPEN) (COMMON-LISP:CONS 'SQUARE (READ-CONS-SLOT STR)) (EQ ~G1120 'CURLY-BRACKET-OPEN) (COMMON-LISP:CONS 'CURLY (READ-CONS-SLOT STR)) (? (TOKEN-IS-QUOTE? TOKEN) (READ-QUOTE STR TOKEN) (READ-ATOM STR TOKEN PKG SYM))))) (G3260 TOKEN)))) (G3259 (COMMON-LISP:CAR ~G1159))))) (G3258 (COMMON-LISP:LABELS ((G3261 (~G1168) (? ~G1168 ~G1168 (%ERROR "Not enough VALUES.")))) (G3261 (COMMON-LISP:CDR ~G1158))))))) (G3257 (COMMON-LISP:CAR ~G1158))))) (G3256 (COMMON-LISP:LABELS ((G3262 (~G1167) (? ~G1167 ~G1167 (%ERROR "Not enough VALUES.")))) (G3262 (COMMON-LISP:CDR ~G1157))))))) (G3255 (COMMON-LISP:CAR ~G1157))))) (G3254 (COMMON-LISP:CDR ~G1156))))) (G3253 (READ-TOKEN STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-EXPR *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1156 (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-TOKEN (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1157 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1156 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'UNLESS (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1156 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'VALUES COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'ERROR (COMMON-LISP:CONS "VALUES expected instead of ~A." (COMMON-LISP:CONS '~G1156 COMMON-LISP:NIL))) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1157 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1158 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1157 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1158 COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1159 (COMMON-LISP:CONS (COMMON-LISP:CONS '|\|| (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1158 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%ERROR (COMMON-LISP:CONS "Not enough VALUES." COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'SYM (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1159 COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '~G1120 COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1120 (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1120 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'EOF COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1120 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1120 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'SQUARE COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQ (COMMON-LISP:CONS '~G1120 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY-BRACKET-OPEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'CURLY COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-CONS-SLOT (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'TOKEN-IS-QUOTE? (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-QUOTE (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-ATOM (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS 'TOKEN (COMMON-LISP:CONS 'PKG (COMMON-LISP:CONS 'SYM COMMON-LISP:NIL))))) COMMON-LISP:NIL)))) COMMON-LISP:NIL)))))))))))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS 'TOKEN COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-EXPR))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ (COMMON-LISP:&OPTIONAL (STR *STANDARD-INPUT*)) (COMMON-LISP:BLOCK READ (COMMON-LISP:BLOCK COMMON-LISP:NIL (SKIP-SPACES STR) (? (PEEK-CHAR STR) (READ-EXPR STR))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:&OPTIONAL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR (COMMON-LISP:CONS '*STANDARD-INPUT* COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-EXPR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS 'READ-ALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN READ-ALL (STR) (COMMON-LISP:BLOCK READ-ALL (COMMON-LISP:BLOCK COMMON-LISP:NIL (SKIP-SPACES STR) (? (PEEK-CHAR STR) (COMMON-LISP:CONS (READ STR) (READ-ALL STR)))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'READ-ALL *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'STR COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS 'READ-ALL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'SKIP-SPACES (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ-ALL (COMMON-LISP:CONS 'STR COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL 'READ-ALL))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS (COMMON-LISP:CONS 'S COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %LOAD-R (S) (COMMON-LISP:BLOCK %LOAD-R (COMMON-LISP:BLOCK COMMON-LISP:NIL (? (PEEK-CHAR S) (COMMON-LISP:PROGN (COMMON-LISP:CONS (READ S) (%LOAD-R S))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%LOAD-R *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'S COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'PEEK-CHAR (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'READ (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%LOAD-R))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %EXPAND (X) (COMMON-LISP:BLOCK %EXPAND (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3263 (!) (? (EQUAL X !) X (%EXPAND !)))) (G3263 (QUASIQUOTE-EXPAND (MACROEXPAND (DOT-EXPAND X)))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%EXPAND *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'X COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:FUNCTION (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS '! COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'EQUAL (COMMON-LISP:CONS 'X (COMMON-LISP:CONS '! COMMON-LISP:NIL))) (COMMON-LISP:CONS 'X (COMMON-LISP:CONS (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS '! COMMON-LISP:NIL)) COMMON-LISP:NIL)))) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE-EXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'MACROEXPAND (COMMON-LISP:CONS (COMMON-LISP:CONS 'DOT-EXPAND (COMMON-LISP:CONS 'X COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%EXPAND))
(COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS 'DEFUN (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL) COMMON-LISP:NIL)))) (COMMON-LISP:PROGN (COMMON-LISP:DEFUN %LOAD (PATHNAME) (COMMON-LISP:BLOCK %LOAD (COMMON-LISP:BLOCK COMMON-LISP:NIL (PRINT-DEFINITION (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS PATHNAME COMMON-LISP:NIL))) (COMMON-LISP:BLOCK COMMON-LISP:NIL (COMMON-LISP:LABELS ((G3264 (~G1171) (COMMON-LISP:LABELS ((G3265 (I) (COMMON-LISP:TAGBODY ~G1169 (? (NOT ~G1171) (COMMON-LISP:GO ~G1170)) (COMMON-LISP:SETQ I (COMMON-LISP:CAR ~G1171)) (%EVAL (%EXPAND I)) (COMMON-LISP:SETQ ~G1171 (COMMON-LISP:CDR ~G1171)) (COMMON-LISP:GO ~G1169) ~G1170 (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL (COMMON-LISP:PROGN))))) (G3265 COMMON-LISP:NIL)))) (G3264 (COMMON-LISP:LABELS ((G3266 (S) (COMMON-LISP:LABELS ((G3267 (~G1172) (CLOSE S) ~G1172)) (G3267 (COMMON-LISP:PROGN (%LOAD-R S)))))) (G3266 (OPEN PATHNAME :DIRECTION 'INPUT))))))))) (COMMON-LISP:SETF (COMMON-LISP:GETHASH #'%LOAD *FUNCTION-ATOM-SOURCES*) (COMMON-LISP:CONS (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'PRINT-DEFINITION (COMMON-LISP:CONS (COMMON-LISP:CONS 'BACKQUOTE (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD (COMMON-LISP:CONS (COMMON-LISP:CONS 'QUASIQUOTE (COMMON-LISP:CONS 'PATHNAME COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:BLOCK (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET (COMMON-LISP:CONS '~G1171 (COMMON-LISP:CONS (COMMON-LISP:CONS 'WITH-OPEN-FILE (COMMON-LISP:CONS 'S (COMMON-LISP:CONS (COMMON-LISP:CONS 'OPEN (COMMON-LISP:CONS 'PATHNAME (COMMON-LISP:CONS ':DIRECTION (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:QUOTE (COMMON-LISP:CONS 'INPUT COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%LOAD-R (COMMON-LISP:CONS 'S COMMON-LISP:NIL)) COMMON-LISP:NIL)))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'LET* (COMMON-LISP:CONS (COMMON-LISP:CONS (COMMON-LISP:CONS 'I (COMMON-LISP:CONS COMMON-LISP:NIL COMMON-LISP:NIL)) COMMON-LISP:NIL) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:TAGBODY (COMMON-LISP:CONS '~G1169 (COMMON-LISP:CONS (COMMON-LISP:CONS '? (COMMON-LISP:CONS (COMMON-LISP:CONS 'NOT (COMMON-LISP:CONS '~G1171 COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1170 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS 'I (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CAR (COMMON-LISP:CONS '~G1171 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS '%EVAL (COMMON-LISP:CONS (COMMON-LISP:CONS '%EXPAND (COMMON-LISP:CONS 'I COMMON-LISP:NIL)) COMMON-LISP:NIL)) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:SETQ (COMMON-LISP:CONS '~G1171 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:CDR (COMMON-LISP:CONS '~G1171 COMMON-LISP:NIL)) COMMON-LISP:NIL))) (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:GO (COMMON-LISP:CONS '~G1169 COMMON-LISP:NIL)) (COMMON-LISP:CONS '~G1170 (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:RETURN-FROM (COMMON-LISP:CONS COMMON-LISP:NIL (COMMON-LISP:CONS (COMMON-LISP:CONS 'COMMON-LISP:PROGN COMMON-LISP:NIL) COMMON-LISP:NIL))) COMMON-LISP:NIL))))))))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) COMMON-LISP:NIL))) COMMON-LISP:NIL)))) (COMMON-LISP:RETURN-FROM COMMON-LISP:NIL '%LOAD))
