Test 1, APPLY one argument
Test 2, APPLY many arguments
Test 3, APPLY many arguments
Test 4, EQ with symbols
Test 5, EQL with symbols
Test 6, EQL with numbers
Test 7, BACKQUOTE
Test 8, QUASIQUOTE
Test 9, QUASIQUOTE-SPLICE
Test 10, NOT works with NIL
Test 11, NOT works with T
Test 12, KEYWORD? recognizes keyword-packaged symbols
Test 13, KEYWORD? works with standard symbols
Test 14, ++
Test 15, --
Test 16, COUNT-IF
Test 17, COUNT
Test 18, NOT returns NIL for empty string
Test 19, Empty string is not NIL
Test 20, KEYWORD? recognizes keywords
Test 21, KEYWORD? returns NIL for non-keywords
Test 22, CAR accepts NIL
Test 23, CDR accepts NIL
Test 24, RPLACA returns cons
Test 25, RPLACD returns cons
Test 26, ATOM recognizes atoms
Test 27, ATOM fails on conses
Test 28, CONS?
Test 29, CONS? fails on atoms
Test 30, CONS? fails on numbers
Test 31, CONS? fails on characters
Test 32, CONS? fails on strings
Test 33, CONS? fails on arrays
Test 34, SYMBOL?
Test 35, SYMBOL? fails on cells
Test 36, SYMBOL? fails on numbers
Test 37, SYMBOL? fails on characters
Test 38, SYMBOL? fails on strings
Test 39, SYMBOL? fails on arrays
Test 40, NUMBER? recognizes numbers
Test 41, NUMBER? fails on characters
Test 42, NUMBER? fails on arrays
Test 43, NUMBER? fails on symbols
Test 44, CHARACTER? recognizes characters
Test 45, CHARACTER? fails on symbols
Test 46, CHARACTER? fails on cells
Test 47, CHARACTER? fails on numbers
Test 48, CHARACTER? fails on arrays
Test 49, CHARACTER? fails on strings
Test 50, EQL wants same type of numbers
Test 51, FUNCTION? recognizes functions
Test 52, FUNCTION? recognizes built-in functions
Test 53, STRING? recognizes strings
Test 54, STRING? fails on numbers
Test 55, STRING? fails on symbols
Test 56, CODE-CHAR converts number to char
Test 57, CHAR-CODE converts char to number
Test 58, SETQ returns the last value set
Test 59, IDENTITY
Test 60, LAST works
Test 61, LAST returns NIL for empty list
Test 62, == works with floats
Test 63, 0 is a boolean T
Test 64, NTHCDR works at the start
Test 65, NTHCDR works in the middle
Test 66, NTHCDR works at the end
Test 67, NTHCDR works beyond the end
Test 68, NOT 0 is NIL
Test 69, LENGHT with conses
Test 70, LENGHT with strings
Test 71, EQUAL with CONS
Test 72, EQUAL fails on different lists
Test 73, NTHCDR basically works
Test 74, ENQUEUE and QUEUE-LIST work
Test 75, MEMBER finds elements
Test 76, MEMBER finds elements with user predicate
Test 77, MEMBER falsely detects foureign elements
Test 78, can handle nested functions with double argument names
Test 79, can handle nested functions with double argument names
Test 80, can handle closures
Test 81, LAMBDA? works
Test 82, LAMBDA? works with LAMBDA
Test 83, LAMBDA-CALL? works
Test 84, $
Test 85, REVERSE works
Test 86, NCONC works
Test 87, NCONC works with empty lists
Test 88, NCONC with NIL first
Test 89, NCONC with NIL second
Test 90, ADJOIN doesn't add known member
Test 91, ADJOIN adds new member
Test 92, BUTLAST basically works
Test 93, BUTLAST returns NIL for single cons
Test 94, LIST-SUBSEQ work at the beginning
Test 95, LIST-SUBSEQ works in the middle
Test 96, LIST-SUBSEQ works at the end
Test 97, SUBSEQ returns head
Test 98, SUBSEQ returns NIL when totally out of range
Test 99, SUBSEQ returns NIL when start and end are the same
Test 100, FIND finds elements
Test 101, FIND accepts :FROM-END
Test 102, FIND accepts :END
Test 103, FIND accepts :START
Test 104, FIND accepts :START, :END, :FROM-END
Test 105, FIND-IF finds elements
Test 106, POSITION works with character list
Test 107, POSITION works with strings
Test 108, SOME works
Test 109, EVERY works
Test 110, ELT on string returns char
Test 111, ELT on string returns right char
Test 112, STRING== works
Test 113, LIST-STRING works
Test 114, STRING-LIST works
Test 115, UPCASE works
Test 116, DOWNCASE works
Test 117, EMPTY-STRING? works
Test 118, DIGIT? #0
Test 119, DIGIT? #a
Test 120, HREF symbol key
Test 121, HREF symbol key missing
Test 122, HREF number key
Test 123, HREF number key missing
Test 124, HREF string key
Test 125, HREF string key missing
Test 126, HREF empty string key
Test 127, HREF character key
Test 128, HREF character key missing
Test 129, HREF hashtable key
Test 130, HREF hashtable key missing
Test 131, HREF array key
Test 132, HREF array key missing
Test 133, SPLIT works on string
Test 134, SPLIT works on string with gaps
Test 135, TRIM-HEAD works
Test 136, TRIM-TAIL works
Test 137, TRIM works
Test 138, ARGUMENT-EXPAND works with simple list
Test 139, ARGUMENT-EXPAND works without :apply-values?
Test 140, ARGUMENT-EXPAND works with constant type
Test 141, ARGUMENT-EXPAND works with wrong constant type
Test 142, ARGUMENT-EXPAND works with type
Test 143, ARGUMENT-EXPAND can handle nested lists
Test 144, ARGUMENT-EXPAND can handle nested lists without :apply-values?
Test 145, ARGUMENT-EXPAND can handle &REST
Test 146, ARGUMENT-EXPAND can handle &REST without :apply-values?
Test 147, ARGUMENT-EXPAND can handle missing &REST
Test 148, ARGUMENT-EXPAND can handle missing &REST without :apply-values?
Test 149, ARGUMENT-EXPAND can handle &OPTIONAL
Test 150, ARGUMENT-EXPAND can handle &OPTIONAL without :apply-values?
Test 151, ARGUMENT-EXPAND can handle &OPTIONAL with init forms
Test 152, ARGUMENT-EXPAND can handle &OPTIONAL with init forms without :apply-values?
Test 153, ARGUMENT-EXPAND can handle &KEY
Test 154, ARGUMENT-EXPAND can handle &KEY with overloaded init forms
Test 155, ARGUMENT-EXPAND can handle &KEY without :apply-values?
Test 156, ARGUMENT-EXPAND can handle &OPTIONAL and &KEY with init forms without :apply-values?
Test 157, ARGUMENT-EXPAND can handle &OPTIONAL and &KEY with init forms with :apply-values?
Tests done.